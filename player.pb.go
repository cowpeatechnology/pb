// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: pb/proto/player.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*PlayerReq_CreatePlayerReq
	//	*PlayerReq_GetPlayerReq
	//	*PlayerReq_ChangeAvatarReq
	//	*PlayerReq_ChangeNameReq
	//	*PlayerReq_ChatAllReq
	//	*PlayerReq_GuildChatReq
	//	*PlayerReq_ChatPlayerReq
	//	*PlayerReq_PurchaseReq
	//	*PlayerReq_PurchaseGiftReq
	//	*PlayerReq_GetsPlayerGoodsReq
	//	*PlayerReq_RecycleReq
	//	*PlayerReq_GetsPlayerSoulReq
	//	*PlayerReq_GetsChapterBattleReq
	//	*PlayerReq_GetBattleInfoReq
	//	*PlayerReq_GetDeviceInfoReq
	//	*PlayerReq_GetDeviceUpgradeReq
	//	*PlayerReq_UpgradeDeviceReq
	//	*PlayerReq_ResetDeviceReq
	//	*PlayerReq_GetResetDeviceReq_
	//	*PlayerReq_DrawSoulReq
	//	*PlayerReq_GetsPlayerDeviceReq
	Req isPlayerReq_Req `protobuf_oneof:"req"`
}

func (x *PlayerReq) Reset() {
	*x = PlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerReq) ProtoMessage() {}

func (x *PlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerReq.ProtoReflect.Descriptor instead.
func (*PlayerReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{0}
}

func (m *PlayerReq) GetReq() isPlayerReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *PlayerReq) GetCreatePlayerReq() *CreatePlayerReq {
	if x, ok := x.GetReq().(*PlayerReq_CreatePlayerReq); ok {
		return x.CreatePlayerReq
	}
	return nil
}

func (x *PlayerReq) GetGetPlayerReq() *GetPlayerReq {
	if x, ok := x.GetReq().(*PlayerReq_GetPlayerReq); ok {
		return x.GetPlayerReq
	}
	return nil
}

func (x *PlayerReq) GetChangeAvatarReq() *ChangeAvatarReq {
	if x, ok := x.GetReq().(*PlayerReq_ChangeAvatarReq); ok {
		return x.ChangeAvatarReq
	}
	return nil
}

func (x *PlayerReq) GetChangeNameReq() *ChangeNameReq {
	if x, ok := x.GetReq().(*PlayerReq_ChangeNameReq); ok {
		return x.ChangeNameReq
	}
	return nil
}

func (x *PlayerReq) GetChatAllReq() *ChatAllReq {
	if x, ok := x.GetReq().(*PlayerReq_ChatAllReq); ok {
		return x.ChatAllReq
	}
	return nil
}

func (x *PlayerReq) GetGuildChatReq() *GuildChatReq {
	if x, ok := x.GetReq().(*PlayerReq_GuildChatReq); ok {
		return x.GuildChatReq
	}
	return nil
}

func (x *PlayerReq) GetChatPlayerReq() *ChatPlayerReq {
	if x, ok := x.GetReq().(*PlayerReq_ChatPlayerReq); ok {
		return x.ChatPlayerReq
	}
	return nil
}

func (x *PlayerReq) GetPurchaseReq() *PurchaseReq {
	if x, ok := x.GetReq().(*PlayerReq_PurchaseReq); ok {
		return x.PurchaseReq
	}
	return nil
}

func (x *PlayerReq) GetPurchaseGiftReq() *PurchaseGiftReq {
	if x, ok := x.GetReq().(*PlayerReq_PurchaseGiftReq); ok {
		return x.PurchaseGiftReq
	}
	return nil
}

func (x *PlayerReq) GetGetsPlayerGoodsReq() *GetsPlayerGoodsReq {
	if x, ok := x.GetReq().(*PlayerReq_GetsPlayerGoodsReq); ok {
		return x.GetsPlayerGoodsReq
	}
	return nil
}

func (x *PlayerReq) GetRecycleReq() *RecycleReq {
	if x, ok := x.GetReq().(*PlayerReq_RecycleReq); ok {
		return x.RecycleReq
	}
	return nil
}

func (x *PlayerReq) GetGetsPlayerSoulReq() *GetsPlayerSoulReq {
	if x, ok := x.GetReq().(*PlayerReq_GetsPlayerSoulReq); ok {
		return x.GetsPlayerSoulReq
	}
	return nil
}

func (x *PlayerReq) GetGetsChapterBattleReq() *GetsChapterBattleReq {
	if x, ok := x.GetReq().(*PlayerReq_GetsChapterBattleReq); ok {
		return x.GetsChapterBattleReq
	}
	return nil
}

func (x *PlayerReq) GetGetBattleInfoReq() *GetBattleInfoReq {
	if x, ok := x.GetReq().(*PlayerReq_GetBattleInfoReq); ok {
		return x.GetBattleInfoReq
	}
	return nil
}

func (x *PlayerReq) GetGetDeviceInfoReq() *GetDeviceInfoReq {
	if x, ok := x.GetReq().(*PlayerReq_GetDeviceInfoReq); ok {
		return x.GetDeviceInfoReq
	}
	return nil
}

func (x *PlayerReq) GetGetDeviceUpgradeReq() *GetDeviceUpgradeReq {
	if x, ok := x.GetReq().(*PlayerReq_GetDeviceUpgradeReq); ok {
		return x.GetDeviceUpgradeReq
	}
	return nil
}

func (x *PlayerReq) GetUpgradeDeviceReq() *UpgradeDeviceReq {
	if x, ok := x.GetReq().(*PlayerReq_UpgradeDeviceReq); ok {
		return x.UpgradeDeviceReq
	}
	return nil
}

func (x *PlayerReq) GetResetDeviceReq() *ResetDeviceReq {
	if x, ok := x.GetReq().(*PlayerReq_ResetDeviceReq); ok {
		return x.ResetDeviceReq
	}
	return nil
}

func (x *PlayerReq) GetGetResetDeviceReq_() *GetResetDeviceReq {
	if x, ok := x.GetReq().(*PlayerReq_GetResetDeviceReq_); ok {
		return x.GetResetDeviceReq_
	}
	return nil
}

func (x *PlayerReq) GetDrawSoulReq() *DrawSoulReq {
	if x, ok := x.GetReq().(*PlayerReq_DrawSoulReq); ok {
		return x.DrawSoulReq
	}
	return nil
}

func (x *PlayerReq) GetGetsPlayerDeviceReq() *GetsPlayerDeviceReq {
	if x, ok := x.GetReq().(*PlayerReq_GetsPlayerDeviceReq); ok {
		return x.GetsPlayerDeviceReq
	}
	return nil
}

type isPlayerReq_Req interface {
	isPlayerReq_Req()
}

type PlayerReq_CreatePlayerReq struct {
	CreatePlayerReq *CreatePlayerReq `protobuf:"bytes,1,opt,name=create_player_req,json=createPlayerReq,proto3,oneof"` //创建角色
}

type PlayerReq_GetPlayerReq struct {
	GetPlayerReq *GetPlayerReq `protobuf:"bytes,2,opt,name=get_player_req,json=getPlayerReq,proto3,oneof"` //获取角色
}

type PlayerReq_ChangeAvatarReq struct {
	ChangeAvatarReq *ChangeAvatarReq `protobuf:"bytes,3,opt,name=change_avatar_req,json=changeAvatarReq,proto3,oneof"` //修改头像
}

type PlayerReq_ChangeNameReq struct {
	ChangeNameReq *ChangeNameReq `protobuf:"bytes,4,opt,name=change_name_req,json=changeNameReq,proto3,oneof"` //修改名称
}

type PlayerReq_ChatAllReq struct {
	ChatAllReq *ChatAllReq `protobuf:"bytes,5,opt,name=chat_all_req,json=chatAllReq,proto3,oneof"` //世界聊天
}

type PlayerReq_GuildChatReq struct {
	GuildChatReq *GuildChatReq `protobuf:"bytes,6,opt,name=guild_chat_req,json=guildChatReq,proto3,oneof"` //王国聊天
}

type PlayerReq_ChatPlayerReq struct {
	ChatPlayerReq *ChatPlayerReq `protobuf:"bytes,7,opt,name=chat_player_req,json=chatPlayerReq,proto3,oneof"` //指定用户聊天
}

type PlayerReq_PurchaseReq struct {
	PurchaseReq *PurchaseReq `protobuf:"bytes,8,opt,name=purchase_req,json=purchaseReq,proto3,oneof"` //购买商品
}

type PlayerReq_PurchaseGiftReq struct {
	PurchaseGiftReq *PurchaseGiftReq `protobuf:"bytes,9,opt,name=purchase_gift_req,json=purchaseGiftReq,proto3,oneof"` //购买礼包
}

type PlayerReq_GetsPlayerGoodsReq struct {
	GetsPlayerGoodsReq *GetsPlayerGoodsReq `protobuf:"bytes,10,opt,name=gets_player_goods_req,json=getsPlayerGoodsReq,proto3,oneof"` //获取玩家物品
}

type PlayerReq_RecycleReq struct {
	RecycleReq *RecycleReq `protobuf:"bytes,11,opt,name=recycle_req,json=recycleReq,proto3,oneof"` //系统回收
}

type PlayerReq_GetsPlayerSoulReq struct {
	GetsPlayerSoulReq *GetsPlayerSoulReq `protobuf:"bytes,12,opt,name=gets_player_soul_req,json=getsPlayerSoulReq,proto3,oneof"` //获取族人契约
}

type PlayerReq_GetsChapterBattleReq struct {
	GetsChapterBattleReq *GetsChapterBattleReq `protobuf:"bytes,13,opt,name=gets_chapter_battle_req,json=getsChapterBattleReq,proto3,oneof"` //根据章节获取战役
}

type PlayerReq_GetBattleInfoReq struct {
	GetBattleInfoReq *GetBattleInfoReq `protobuf:"bytes,14,opt,name=get_battle_info_req,json=getBattleInfoReq,proto3,oneof"` //获取战役详情
}

type PlayerReq_GetDeviceInfoReq struct {
	GetDeviceInfoReq *GetDeviceInfoReq `protobuf:"bytes,15,opt,name=get_device_info_req,json=getDeviceInfoReq,proto3,oneof"` //获取装备详情
}

type PlayerReq_GetDeviceUpgradeReq struct {
	GetDeviceUpgradeReq *GetDeviceUpgradeReq `protobuf:"bytes,16,opt,name=get_device_upgrade_req,json=getDeviceUpgradeReq,proto3,oneof"` //获取装备升级详情
}

type PlayerReq_UpgradeDeviceReq struct {
	UpgradeDeviceReq *UpgradeDeviceReq `protobuf:"bytes,17,opt,name=upgrade_device_req,json=upgradeDeviceReq,proto3,oneof"` //升级装备
}

type PlayerReq_ResetDeviceReq struct {
	ResetDeviceReq *ResetDeviceReq `protobuf:"bytes,18,opt,name=reset_device_req,json=resetDeviceReq,proto3,oneof"` //重置装备
}

type PlayerReq_GetResetDeviceReq_ struct {
	GetResetDeviceReq_ *GetResetDeviceReq `protobuf:"bytes,19,opt,name=get_reset_device_req,json=getResetDeviceReq,proto3,oneof"` //获取重置装备信息
}

type PlayerReq_DrawSoulReq struct {
	DrawSoulReq *DrawSoulReq `protobuf:"bytes,20,opt,name=draw_soul_req,json=drawSoulReq,proto3,oneof"` //抽取契约
}

type PlayerReq_GetsPlayerDeviceReq struct {
	GetsPlayerDeviceReq *GetsPlayerDeviceReq `protobuf:"bytes,21,opt,name=gets_player_device_req,json=getsPlayerDeviceReq,proto3,oneof"` //获取玩家装备
}

func (*PlayerReq_CreatePlayerReq) isPlayerReq_Req() {}

func (*PlayerReq_GetPlayerReq) isPlayerReq_Req() {}

func (*PlayerReq_ChangeAvatarReq) isPlayerReq_Req() {}

func (*PlayerReq_ChangeNameReq) isPlayerReq_Req() {}

func (*PlayerReq_ChatAllReq) isPlayerReq_Req() {}

func (*PlayerReq_GuildChatReq) isPlayerReq_Req() {}

func (*PlayerReq_ChatPlayerReq) isPlayerReq_Req() {}

func (*PlayerReq_PurchaseReq) isPlayerReq_Req() {}

func (*PlayerReq_PurchaseGiftReq) isPlayerReq_Req() {}

func (*PlayerReq_GetsPlayerGoodsReq) isPlayerReq_Req() {}

func (*PlayerReq_RecycleReq) isPlayerReq_Req() {}

func (*PlayerReq_GetsPlayerSoulReq) isPlayerReq_Req() {}

func (*PlayerReq_GetsChapterBattleReq) isPlayerReq_Req() {}

func (*PlayerReq_GetBattleInfoReq) isPlayerReq_Req() {}

func (*PlayerReq_GetDeviceInfoReq) isPlayerReq_Req() {}

func (*PlayerReq_GetDeviceUpgradeReq) isPlayerReq_Req() {}

func (*PlayerReq_UpgradeDeviceReq) isPlayerReq_Req() {}

func (*PlayerReq_ResetDeviceReq) isPlayerReq_Req() {}

func (*PlayerReq_GetResetDeviceReq_) isPlayerReq_Req() {}

func (*PlayerReq_DrawSoulReq) isPlayerReq_Req() {}

func (*PlayerReq_GetsPlayerDeviceReq) isPlayerReq_Req() {}

type PlayerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//
	//	*PlayerRes_CreatePlayerRes
	//	*PlayerRes_GetPlayerRes
	//	*PlayerRes_ChangeAvatarRes
	//	*PlayerRes_ChangeNameRes
	//	*PlayerRes_ChatAllRes
	//	*PlayerRes_GuildChatRes
	//	*PlayerRes_ChatPlayerRes
	//	*PlayerRes_PurchaseRes
	//	*PlayerRes_PurchaseGiftRes
	//	*PlayerRes_GetsPlayerGoodsRes
	//	*PlayerRes_RecycleRes
	//	*PlayerRes_GetsPlayerSoulRes
	//	*PlayerRes_GetsChapterBattleRes
	//	*PlayerRes_GetBattleInfoRes
	//	*PlayerRes_GetDeviceInfoRes
	//	*PlayerRes_GetDeviceUpgradeRes
	//	*PlayerRes_UpgradeDeviceRes
	//	*PlayerRes_ResetDeviceRes
	//	*PlayerRes_GetResetDeviceRes_
	//	*PlayerRes_DrawSoulRes
	//	*PlayerRes_GetsPlayerDeviceRes
	//	*PlayerRes_MoneyChangeNotify
	//	*PlayerRes_KickOffNotify
	Res isPlayerRes_Res `protobuf_oneof:"res"`
}

func (x *PlayerRes) Reset() {
	*x = PlayerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRes) ProtoMessage() {}

func (x *PlayerRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRes.ProtoReflect.Descriptor instead.
func (*PlayerRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{1}
}

func (m *PlayerRes) GetRes() isPlayerRes_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *PlayerRes) GetCreatePlayerRes() *CreatePlayerRes {
	if x, ok := x.GetRes().(*PlayerRes_CreatePlayerRes); ok {
		return x.CreatePlayerRes
	}
	return nil
}

func (x *PlayerRes) GetGetPlayerRes() *GetPlayerRes {
	if x, ok := x.GetRes().(*PlayerRes_GetPlayerRes); ok {
		return x.GetPlayerRes
	}
	return nil
}

func (x *PlayerRes) GetChangeAvatarRes() *ChangeAvatarRes {
	if x, ok := x.GetRes().(*PlayerRes_ChangeAvatarRes); ok {
		return x.ChangeAvatarRes
	}
	return nil
}

func (x *PlayerRes) GetChangeNameRes() *ChangeNameRes {
	if x, ok := x.GetRes().(*PlayerRes_ChangeNameRes); ok {
		return x.ChangeNameRes
	}
	return nil
}

func (x *PlayerRes) GetChatAllRes() *ChatAllRes {
	if x, ok := x.GetRes().(*PlayerRes_ChatAllRes); ok {
		return x.ChatAllRes
	}
	return nil
}

func (x *PlayerRes) GetGuildChatRes() *GuildChatRes {
	if x, ok := x.GetRes().(*PlayerRes_GuildChatRes); ok {
		return x.GuildChatRes
	}
	return nil
}

func (x *PlayerRes) GetChatPlayerRes() *ChatPlayerRes {
	if x, ok := x.GetRes().(*PlayerRes_ChatPlayerRes); ok {
		return x.ChatPlayerRes
	}
	return nil
}

func (x *PlayerRes) GetPurchaseRes() *PurchaseRes {
	if x, ok := x.GetRes().(*PlayerRes_PurchaseRes); ok {
		return x.PurchaseRes
	}
	return nil
}

func (x *PlayerRes) GetPurchaseGiftRes() *PurchaseGiftRes {
	if x, ok := x.GetRes().(*PlayerRes_PurchaseGiftRes); ok {
		return x.PurchaseGiftRes
	}
	return nil
}

func (x *PlayerRes) GetGetsPlayerGoodsRes() *GetsPlayerGoodsRes {
	if x, ok := x.GetRes().(*PlayerRes_GetsPlayerGoodsRes); ok {
		return x.GetsPlayerGoodsRes
	}
	return nil
}

func (x *PlayerRes) GetRecycleRes() *RecycleRes {
	if x, ok := x.GetRes().(*PlayerRes_RecycleRes); ok {
		return x.RecycleRes
	}
	return nil
}

func (x *PlayerRes) GetGetsPlayerSoulRes() *GetsPlayerSoulRes {
	if x, ok := x.GetRes().(*PlayerRes_GetsPlayerSoulRes); ok {
		return x.GetsPlayerSoulRes
	}
	return nil
}

func (x *PlayerRes) GetGetsChapterBattleRes() *GetsChapterBattleRes {
	if x, ok := x.GetRes().(*PlayerRes_GetsChapterBattleRes); ok {
		return x.GetsChapterBattleRes
	}
	return nil
}

func (x *PlayerRes) GetGetBattleInfoRes() *GetBattleInfoRes {
	if x, ok := x.GetRes().(*PlayerRes_GetBattleInfoRes); ok {
		return x.GetBattleInfoRes
	}
	return nil
}

func (x *PlayerRes) GetGetDeviceInfoRes() *GetDeviceInfoRes {
	if x, ok := x.GetRes().(*PlayerRes_GetDeviceInfoRes); ok {
		return x.GetDeviceInfoRes
	}
	return nil
}

func (x *PlayerRes) GetGetDeviceUpgradeRes() *GetDeviceUpgradeRes {
	if x, ok := x.GetRes().(*PlayerRes_GetDeviceUpgradeRes); ok {
		return x.GetDeviceUpgradeRes
	}
	return nil
}

func (x *PlayerRes) GetUpgradeDeviceRes() *UpgradeDeviceRes {
	if x, ok := x.GetRes().(*PlayerRes_UpgradeDeviceRes); ok {
		return x.UpgradeDeviceRes
	}
	return nil
}

func (x *PlayerRes) GetResetDeviceRes() *ResetDeviceRes {
	if x, ok := x.GetRes().(*PlayerRes_ResetDeviceRes); ok {
		return x.ResetDeviceRes
	}
	return nil
}

func (x *PlayerRes) GetGetResetDeviceRes_() *GetResetDeviceRes {
	if x, ok := x.GetRes().(*PlayerRes_GetResetDeviceRes_); ok {
		return x.GetResetDeviceRes_
	}
	return nil
}

func (x *PlayerRes) GetDrawSoulRes() *DrawSoulRes {
	if x, ok := x.GetRes().(*PlayerRes_DrawSoulRes); ok {
		return x.DrawSoulRes
	}
	return nil
}

func (x *PlayerRes) GetGetsPlayerDeviceRes() *GetsPlayerDeviceRes {
	if x, ok := x.GetRes().(*PlayerRes_GetsPlayerDeviceRes); ok {
		return x.GetsPlayerDeviceRes
	}
	return nil
}

func (x *PlayerRes) GetMoneyChangeNotify() *MoneyChangeNotify {
	if x, ok := x.GetRes().(*PlayerRes_MoneyChangeNotify); ok {
		return x.MoneyChangeNotify
	}
	return nil
}

func (x *PlayerRes) GetKickOffNotify() *KickOffNotify {
	if x, ok := x.GetRes().(*PlayerRes_KickOffNotify); ok {
		return x.KickOffNotify
	}
	return nil
}

type isPlayerRes_Res interface {
	isPlayerRes_Res()
}

type PlayerRes_CreatePlayerRes struct {
	CreatePlayerRes *CreatePlayerRes `protobuf:"bytes,1,opt,name=create_player_res,json=createPlayerRes,proto3,oneof"` //创建角色
}

type PlayerRes_GetPlayerRes struct {
	GetPlayerRes *GetPlayerRes `protobuf:"bytes,2,opt,name=get_player_res,json=getPlayerRes,proto3,oneof"` //获取角色
}

type PlayerRes_ChangeAvatarRes struct {
	ChangeAvatarRes *ChangeAvatarRes `protobuf:"bytes,3,opt,name=change_avatar_res,json=changeAvatarRes,proto3,oneof"` //修改头像响应
}

type PlayerRes_ChangeNameRes struct {
	ChangeNameRes *ChangeNameRes `protobuf:"bytes,4,opt,name=change_name_res,json=changeNameRes,proto3,oneof"` //修改名称
}

type PlayerRes_ChatAllRes struct {
	ChatAllRes *ChatAllRes `protobuf:"bytes,5,opt,name=chat_all_res,json=chatAllRes,proto3,oneof"` //世界聊天
}

type PlayerRes_GuildChatRes struct {
	GuildChatRes *GuildChatRes `protobuf:"bytes,6,opt,name=guild_chat_res,json=guildChatRes,proto3,oneof"` //王国聊天
}

type PlayerRes_ChatPlayerRes struct {
	ChatPlayerRes *ChatPlayerRes `protobuf:"bytes,7,opt,name=chat_player_res,json=chatPlayerRes,proto3,oneof"` //指定用户聊天
}

type PlayerRes_PurchaseRes struct {
	PurchaseRes *PurchaseRes `protobuf:"bytes,8,opt,name=purchase_res,json=purchaseRes,proto3,oneof"` //购买商品
}

type PlayerRes_PurchaseGiftRes struct {
	PurchaseGiftRes *PurchaseGiftRes `protobuf:"bytes,9,opt,name=purchase_gift_res,json=purchaseGiftRes,proto3,oneof"` //购买礼包
}

type PlayerRes_GetsPlayerGoodsRes struct {
	GetsPlayerGoodsRes *GetsPlayerGoodsRes `protobuf:"bytes,10,opt,name=gets_player_goods_res,json=getsPlayerGoodsRes,proto3,oneof"` //获取玩家物品
}

type PlayerRes_RecycleRes struct {
	RecycleRes *RecycleRes `protobuf:"bytes,11,opt,name=recycle_res,json=recycleRes,proto3,oneof"` //系统回收
}

type PlayerRes_GetsPlayerSoulRes struct {
	GetsPlayerSoulRes *GetsPlayerSoulRes `protobuf:"bytes,12,opt,name=gets_player_soul_res,json=getsPlayerSoulRes,proto3,oneof"` //获取族人契约
}

type PlayerRes_GetsChapterBattleRes struct {
	GetsChapterBattleRes *GetsChapterBattleRes `protobuf:"bytes,13,opt,name=gets_chapter_battle_res,json=getsChapterBattleRes,proto3,oneof"` //根据章节获取战役
}

type PlayerRes_GetBattleInfoRes struct {
	GetBattleInfoRes *GetBattleInfoRes `protobuf:"bytes,14,opt,name=get_battle_info_res,json=getBattleInfoRes,proto3,oneof"` //获取战役详情
}

type PlayerRes_GetDeviceInfoRes struct {
	GetDeviceInfoRes *GetDeviceInfoRes `protobuf:"bytes,15,opt,name=get_device_info_res,json=getDeviceInfoRes,proto3,oneof"` //获取装备详情
}

type PlayerRes_GetDeviceUpgradeRes struct {
	GetDeviceUpgradeRes *GetDeviceUpgradeRes `protobuf:"bytes,16,opt,name=get_device_upgrade_res,json=getDeviceUpgradeRes,proto3,oneof"` //获取装备升级详情
}

type PlayerRes_UpgradeDeviceRes struct {
	UpgradeDeviceRes *UpgradeDeviceRes `protobuf:"bytes,17,opt,name=upgrade_device_res,json=upgradeDeviceRes,proto3,oneof"` //升级装备
}

type PlayerRes_ResetDeviceRes struct {
	ResetDeviceRes *ResetDeviceRes `protobuf:"bytes,18,opt,name=reset_device_res,json=resetDeviceRes,proto3,oneof"` //重置装备
}

type PlayerRes_GetResetDeviceRes_ struct {
	GetResetDeviceRes_ *GetResetDeviceRes `protobuf:"bytes,19,opt,name=get_reset_device_res,json=getResetDeviceRes,proto3,oneof"` //获取重置装备信息
}

type PlayerRes_DrawSoulRes struct {
	DrawSoulRes *DrawSoulRes `protobuf:"bytes,20,opt,name=draw_soul_res,json=drawSoulRes,proto3,oneof"` //抽取契约
}

type PlayerRes_GetsPlayerDeviceRes struct {
	GetsPlayerDeviceRes *GetsPlayerDeviceRes `protobuf:"bytes,21,opt,name=gets_playerDeviceRes,json=getsPlayerDeviceRes,proto3,oneof"` //获取玩家装备
}

type PlayerRes_MoneyChangeNotify struct {
	MoneyChangeNotify *MoneyChangeNotify `protobuf:"bytes,100,opt,name=money_change_notify,json=moneyChangeNotify,proto3,oneof"` //货币变更通知
}

type PlayerRes_KickOffNotify struct {
	KickOffNotify *KickOffNotify `protobuf:"bytes,101,opt,name=kick_off_notify,json=kickOffNotify,proto3,oneof"` //账号被踢通知
}

func (*PlayerRes_CreatePlayerRes) isPlayerRes_Res() {}

func (*PlayerRes_GetPlayerRes) isPlayerRes_Res() {}

func (*PlayerRes_ChangeAvatarRes) isPlayerRes_Res() {}

func (*PlayerRes_ChangeNameRes) isPlayerRes_Res() {}

func (*PlayerRes_ChatAllRes) isPlayerRes_Res() {}

func (*PlayerRes_GuildChatRes) isPlayerRes_Res() {}

func (*PlayerRes_ChatPlayerRes) isPlayerRes_Res() {}

func (*PlayerRes_PurchaseRes) isPlayerRes_Res() {}

func (*PlayerRes_PurchaseGiftRes) isPlayerRes_Res() {}

func (*PlayerRes_GetsPlayerGoodsRes) isPlayerRes_Res() {}

func (*PlayerRes_RecycleRes) isPlayerRes_Res() {}

func (*PlayerRes_GetsPlayerSoulRes) isPlayerRes_Res() {}

func (*PlayerRes_GetsChapterBattleRes) isPlayerRes_Res() {}

func (*PlayerRes_GetBattleInfoRes) isPlayerRes_Res() {}

func (*PlayerRes_GetDeviceInfoRes) isPlayerRes_Res() {}

func (*PlayerRes_GetDeviceUpgradeRes) isPlayerRes_Res() {}

func (*PlayerRes_UpgradeDeviceRes) isPlayerRes_Res() {}

func (*PlayerRes_ResetDeviceRes) isPlayerRes_Res() {}

func (*PlayerRes_GetResetDeviceRes_) isPlayerRes_Res() {}

func (*PlayerRes_DrawSoulRes) isPlayerRes_Res() {}

func (*PlayerRes_GetsPlayerDeviceRes) isPlayerRes_Res() {}

func (*PlayerRes_MoneyChangeNotify) isPlayerRes_Res() {}

func (*PlayerRes_KickOffNotify) isPlayerRes_Res() {}

// //////////////////////////////////
type CreatePlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` //姓名
	// @inject_tag: json:"gender"
	Gender Gender `protobuf:"varint,2,opt,name=gender,proto3,enum=pb.Gender" json:"gender"` //性别
	// @inject_tag: json:"avatar_id"
	AvatarId int32 `protobuf:"varint,3,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"` //头像
}

func (x *CreatePlayerReq) Reset() {
	*x = CreatePlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerReq) ProtoMessage() {}

func (x *CreatePlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerReq.ProtoReflect.Descriptor instead.
func (*CreatePlayerReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePlayerReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePlayerReq) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_Female
}

func (x *CreatePlayerReq) GetAvatarId() int32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type GetPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPlayerReq) Reset() {
	*x = GetPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerReq) ProtoMessage() {}

func (x *GetPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerReq.ProtoReflect.Descriptor instead.
func (*GetPlayerReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{3}
}

type ChangeAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"avatar_id"
	AvatarId int32 `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id"`
}

func (x *ChangeAvatarReq) Reset() {
	*x = ChangeAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarReq) ProtoMessage() {}

func (x *ChangeAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarReq.ProtoReflect.Descriptor instead.
func (*ChangeAvatarReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeAvatarReq) GetAvatarId() int32 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

type ChangeNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *ChangeNameReq) Reset() {
	*x = ChangeNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNameReq) ProtoMessage() {}

func (x *ChangeNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNameReq.ProtoReflect.Descriptor instead.
func (*ChangeNameReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChatAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
}

func (x *ChatAllReq) Reset() {
	*x = ChatAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAllReq) ProtoMessage() {}

func (x *ChatAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAllReq.ProtoReflect.Descriptor instead.
func (*ChatAllReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{6}
}

func (x *ChatAllReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GuildChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"guild_id"
	GuildId int32 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id"` //王国ID
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *GuildChatReq) Reset() {
	*x = GuildChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChatReq) ProtoMessage() {}

func (x *GuildChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChatReq.ProtoReflect.Descriptor instead.
func (*GuildChatReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{7}
}

func (x *GuildChatReq) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildChatReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ChatPlayerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"receiver_id"
	ReceiverId int64 `protobuf:"varint,1,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id"` //接收者Id
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *ChatPlayerReq) Reset() {
	*x = ChatPlayerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPlayerReq) ProtoMessage() {}

func (x *ChatPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPlayerReq.ProtoReflect.Descriptor instead.
func (*ChatPlayerReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{8}
}

func (x *ChatPlayerReq) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ChatPlayerReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PurchaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"commodity_id"
	CommodityId int32 `protobuf:"varint,1,opt,name=commodity_id,json=commodityId,proto3" json:"commodity_id"` //商品ID
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *PurchaseReq) Reset() {
	*x = PurchaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseReq) ProtoMessage() {}

func (x *PurchaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseReq.ProtoReflect.Descriptor instead.
func (*PurchaseReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{9}
}

func (x *PurchaseReq) GetCommodityId() int32 {
	if x != nil {
		return x.CommodityId
	}
	return 0
}

func (x *PurchaseReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PurchaseGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"gift_id"
	GiftId int32 `protobuf:"varint,1,opt,name=gift_id,json=giftId,proto3" json:"gift_id"` //商品ID
}

func (x *PurchaseGiftReq) Reset() {
	*x = PurchaseGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseGiftReq) ProtoMessage() {}

func (x *PurchaseGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseGiftReq.ProtoReflect.Descriptor instead.
func (*PurchaseGiftReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{10}
}

func (x *PurchaseGiftReq) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

type GetsPlayerGoodsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// 物品分类:0-全部,1-装备，2-工具，3-消耗品
	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	// @inject_tag: json:"sub_type"
	SubType int32 `protobuf:"varint,4,opt,name=sub_type,json=subType,proto3" json:"sub_type"`
	// @inject_tag: json:"subdivide"
	Subdivide int32 `protobuf:"varint,5,opt,name=subdivide,proto3" json:"subdivide"`
	// @inject_tag: json:"unload"
	Unload bool `protobuf:"varint,6,opt,name=unload,proto3" json:"unload"` // 是否未装载，仅装备有效
	// @inject_tag: json:"person_level"
	PersonLevel int32 `protobuf:"varint,7,opt,name=person_level,json=personLevel,proto3" json:"person_level"` //装载族人等级
}

func (x *GetsPlayerGoodsReq) Reset() {
	*x = GetsPlayerGoodsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerGoodsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerGoodsReq) ProtoMessage() {}

func (x *GetsPlayerGoodsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerGoodsReq.ProtoReflect.Descriptor instead.
func (*GetsPlayerGoodsReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{11}
}

func (x *GetsPlayerGoodsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsPlayerGoodsReq) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsPlayerGoodsReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetsPlayerGoodsReq) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *GetsPlayerGoodsReq) GetSubdivide() int32 {
	if x != nil {
		return x.Subdivide
	}
	return 0
}

func (x *GetsPlayerGoodsReq) GetUnload() bool {
	if x != nil {
		return x.Unload
	}
	return false
}

func (x *GetsPlayerGoodsReq) GetPersonLevel() int32 {
	if x != nil {
		return x.PersonLevel
	}
	return 0
}

type RecycleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"`
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
}

func (x *RecycleReq) Reset() {
	*x = RecycleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleReq) ProtoMessage() {}

func (x *RecycleReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleReq.ProtoReflect.Descriptor instead.
func (*RecycleReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{12}
}

func (x *RecycleReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *RecycleReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetsPlayerSoulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality"` //品质 （0-全部，1-普通，2-稀有，3-史诗，4-传说）
	// @inject_tag: json:"sub_device_type"
	SubDeviceType int32 `protobuf:"varint,2,opt,name=sub_device_type,json=subDeviceType,proto3" json:"sub_device_type"` //适用的武器
}

func (x *GetsPlayerSoulReq) Reset() {
	*x = GetsPlayerSoulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerSoulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerSoulReq) ProtoMessage() {}

func (x *GetsPlayerSoulReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerSoulReq.ProtoReflect.Descriptor instead.
func (*GetsPlayerSoulReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{13}
}

func (x *GetsPlayerSoulReq) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *GetsPlayerSoulReq) GetSubDeviceType() int32 {
	if x != nil {
		return x.SubDeviceType
	}
	return 0
}

type GetsChapterBattleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"chapter_id"
	ChapterId int32 `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id"`
}

func (x *GetsChapterBattleReq) Reset() {
	*x = GetsChapterBattleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsChapterBattleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsChapterBattleReq) ProtoMessage() {}

func (x *GetsChapterBattleReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsChapterBattleReq.ProtoReflect.Descriptor instead.
func (*GetsChapterBattleReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{14}
}

func (x *GetsChapterBattleReq) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

type GetBattleInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"battle_id"
	BattleId int32 `protobuf:"varint,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id"`
}

func (x *GetBattleInfoReq) Reset() {
	*x = GetBattleInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBattleInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBattleInfoReq) ProtoMessage() {}

func (x *GetBattleInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBattleInfoReq.ProtoReflect.Descriptor instead.
func (*GetBattleInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{15}
}

func (x *GetBattleInfoReq) GetBattleId() int32 {
	if x != nil {
		return x.BattleId
	}
	return 0
}

type GetDeviceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
}

func (x *GetDeviceInfoReq) Reset() {
	*x = GetDeviceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoReq) ProtoMessage() {}

func (x *GetDeviceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoReq.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{16}
}

func (x *GetDeviceInfoReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type GetDeviceUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
}

func (x *GetDeviceUpgradeReq) Reset() {
	*x = GetDeviceUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceUpgradeReq) ProtoMessage() {}

func (x *GetDeviceUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceUpgradeReq.ProtoReflect.Descriptor instead.
func (*GetDeviceUpgradeReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{17}
}

func (x *GetDeviceUpgradeReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type UpgradeDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID
}

func (x *UpgradeDeviceReq) Reset() {
	*x = UpgradeDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDeviceReq) ProtoMessage() {}

func (x *UpgradeDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDeviceReq.ProtoReflect.Descriptor instead.
func (*UpgradeDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{18}
}

func (x *UpgradeDeviceReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type ResetDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
}

func (x *ResetDeviceReq) Reset() {
	*x = ResetDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetDeviceReq) ProtoMessage() {}

func (x *ResetDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetDeviceReq.ProtoReflect.Descriptor instead.
func (*ResetDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{19}
}

func (x *ResetDeviceReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type GetResetDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
}

func (x *GetResetDeviceReq) Reset() {
	*x = GetResetDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResetDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResetDeviceReq) ProtoMessage() {}

func (x *GetResetDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResetDeviceReq.ProtoReflect.Descriptor instead.
func (*GetResetDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{20}
}

func (x *GetResetDeviceReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type DrawSoulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality"` // 1-勇气，2-希望，3-奇迹
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"` // 1抽或10连抽
}

func (x *DrawSoulReq) Reset() {
	*x = DrawSoulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawSoulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawSoulReq) ProtoMessage() {}

func (x *DrawSoulReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawSoulReq.ProtoReflect.Descriptor instead.
func (*DrawSoulReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{21}
}

func (x *DrawSoulReq) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DrawSoulReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetsPlayerDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"` // 当前页数
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"` // 每页数量
	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type"` // 0-全部,1-头部装备,2-胸部装备,3-手部装备,4-腿部装备,5-武器装备,6-饰品装备,7-挂件装备
	// @inject_tag: json:"unload"
	Unload bool `protobuf:"varint,4,opt,name=unload,proto3" json:"unload"` // true-未装载,false-全部
}

func (x *GetsPlayerDeviceReq) Reset() {
	*x = GetsPlayerDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerDeviceReq) ProtoMessage() {}

func (x *GetsPlayerDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerDeviceReq.ProtoReflect.Descriptor instead.
func (*GetsPlayerDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{22}
}

func (x *GetsPlayerDeviceReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsPlayerDeviceReq) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsPlayerDeviceReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetsPlayerDeviceReq) GetUnload() bool {
	if x != nil {
		return x.Unload
	}
	return false
}

// //////////////////////////////////
type CreatePlayerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` // 0-成功
}

func (x *CreatePlayerRes) Reset() {
	*x = CreatePlayerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerRes) ProtoMessage() {}

func (x *CreatePlayerRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerRes.ProtoReflect.Descriptor instead.
func (*CreatePlayerRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{23}
}

func (x *CreatePlayerRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetPlayerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"player"
	Player *BasePlayer `protobuf:"bytes,2,opt,name=player,proto3" json:"player"`
	// @inject_tag: json:"moneys"
	Moneys []*Money `protobuf:"bytes,3,rep,name=moneys,proto3" json:"moneys"`
	// @inject_tag: json:"server_group"
	ServerGroup string `protobuf:"bytes,4,opt,name=server_group,json=serverGroup,proto3" json:"server_group"`
	// @inject_tag: json:"guild_group"
	GuildGroup string `protobuf:"bytes,5,opt,name=guild_group,json=guildGroup,proto3" json:"guild_group"`
	// @inject_tag: json:"guild_id"
	GuildId int32 `protobuf:"varint,6,opt,name=guild_id,json=guildId,proto3" json:"guild_id"`
}

func (x *GetPlayerRes) Reset() {
	*x = GetPlayerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRes) ProtoMessage() {}

func (x *GetPlayerRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRes.ProtoReflect.Descriptor instead.
func (*GetPlayerRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{24}
}

func (x *GetPlayerRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetPlayerRes) GetPlayer() *BasePlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *GetPlayerRes) GetMoneys() []*Money {
	if x != nil {
		return x.Moneys
	}
	return nil
}

func (x *GetPlayerRes) GetServerGroup() string {
	if x != nil {
		return x.ServerGroup
	}
	return ""
}

func (x *GetPlayerRes) GetGuildGroup() string {
	if x != nil {
		return x.GuildGroup
	}
	return ""
}

func (x *GetPlayerRes) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

type ChangeAvatarRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *ChangeAvatarRes) Reset() {
	*x = ChangeAvatarRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAvatarRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAvatarRes) ProtoMessage() {}

func (x *ChangeAvatarRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAvatarRes.ProtoReflect.Descriptor instead.
func (*ChangeAvatarRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeAvatarRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type ChangeNameRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *ChangeNameRes) Reset() {
	*x = ChangeNameRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNameRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNameRes) ProtoMessage() {}

func (x *ChangeNameRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNameRes.ProtoReflect.Descriptor instead.
func (*ChangeNameRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{26}
}

func (x *ChangeNameRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type ChatAllRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"chat"
	Chat *Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat"`
}

func (x *ChatAllRes) Reset() {
	*x = ChatAllRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAllRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAllRes) ProtoMessage() {}

func (x *ChatAllRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAllRes.ProtoReflect.Descriptor instead.
func (*ChatAllRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{27}
}

func (x *ChatAllRes) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type GuildChatRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"guild_id"
	GuildId int32 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id"` //王国ID
	// @inject_tag: json:"chat"
	Chat *Chat `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat"`
}

func (x *GuildChatRes) Reset() {
	*x = GuildChatRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildChatRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildChatRes) ProtoMessage() {}

func (x *GuildChatRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildChatRes.ProtoReflect.Descriptor instead.
func (*GuildChatRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{28}
}

func (x *GuildChatRes) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildChatRes) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type ChatPlayerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"chat"
	Chat *Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat"`
}

func (x *ChatPlayerRes) Reset() {
	*x = ChatPlayerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPlayerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPlayerRes) ProtoMessage() {}

func (x *ChatPlayerRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPlayerRes.ProtoReflect.Descriptor instead.
func (*ChatPlayerRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{29}
}

func (x *ChatPlayerRes) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type PurchaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"commodity_id"
	CommodityId int32 `protobuf:"varint,2,opt,name=commodity_id,json=commodityId,proto3" json:"commodity_id"` //商品ID
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
	// @inject_tag: json:"money_type"
	MoneyType int32 `protobuf:"varint,4,opt,name=money_type,json=moneyType,proto3" json:"money_type"`
	// @inject_tag: json:"Price"
	Price int32 `protobuf:"varint,5,opt,name=Price,proto3" json:"Price"`
}

func (x *PurchaseRes) Reset() {
	*x = PurchaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRes) ProtoMessage() {}

func (x *PurchaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRes.ProtoReflect.Descriptor instead.
func (*PurchaseRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{30}
}

func (x *PurchaseRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PurchaseRes) GetCommodityId() int32 {
	if x != nil {
		return x.CommodityId
	}
	return 0
}

func (x *PurchaseRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PurchaseRes) GetMoneyType() int32 {
	if x != nil {
		return x.MoneyType
	}
	return 0
}

func (x *PurchaseRes) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type PurchaseGiftRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"gift_id"
	GiftId int32 `protobuf:"varint,2,opt,name=gift_id,json=giftId,proto3" json:"gift_id"` //礼包ID
	// @inject_tag: json:"money_type"
	MoneyType int32 `protobuf:"varint,3,opt,name=money_type,json=moneyType,proto3" json:"money_type"`
	// @inject_tag: json:"Price"
	Price int32 `protobuf:"varint,4,opt,name=Price,proto3" json:"Price"`
}

func (x *PurchaseGiftRes) Reset() {
	*x = PurchaseGiftRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseGiftRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseGiftRes) ProtoMessage() {}

func (x *PurchaseGiftRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseGiftRes.ProtoReflect.Descriptor instead.
func (*PurchaseGiftRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{31}
}

func (x *PurchaseGiftRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PurchaseGiftRes) GetGiftId() int32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *PurchaseGiftRes) GetMoneyType() int32 {
	if x != nil {
		return x.MoneyType
	}
	return 0
}

func (x *PurchaseGiftRes) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetsPlayerGoodsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"total"
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type"`
	// @inject_tag: json:"sub_type"
	SubType int32 `protobuf:"varint,5,opt,name=sub_type,json=subType,proto3" json:"sub_type"`
	// @inject_tag: json:"subdivide"
	Subdivide int32 `protobuf:"varint,6,opt,name=subdivide,proto3" json:"subdivide"`
	// @inject_tag: json:"unload"
	Unload bool `protobuf:"varint,7,opt,name=unload,proto3" json:"unload"` // 是否未装载，仅装备有效
	// @inject_tag: json:"person_level"
	PersonLevel int32 `protobuf:"varint,8,opt,name=person_level,json=personLevel,proto3" json:"person_level"` //装载族人等级
	// @inject_tag: json:"goods"
	Goods []*PlayerGoods `protobuf:"bytes,9,rep,name=goods,proto3" json:"goods"`
}

func (x *GetsPlayerGoodsRes) Reset() {
	*x = GetsPlayerGoodsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerGoodsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerGoodsRes) ProtoMessage() {}

func (x *GetsPlayerGoodsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerGoodsRes.ProtoReflect.Descriptor instead.
func (*GetsPlayerGoodsRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{32}
}

func (x *GetsPlayerGoodsRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetSubdivide() int32 {
	if x != nil {
		return x.Subdivide
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetUnload() bool {
	if x != nil {
		return x.Unload
	}
	return false
}

func (x *GetsPlayerGoodsRes) GetPersonLevel() int32 {
	if x != nil {
		return x.PersonLevel
	}
	return 0
}

func (x *GetsPlayerGoodsRes) GetGoods() []*PlayerGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

type RecycleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"goods_id"
	GoodsId int32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	// @inject_tag: json:"money_type"
	MoneyType int32 `protobuf:"varint,3,opt,name=money_type,json=moneyType,proto3" json:"money_type"`
	// @inject_tag: json:"price"
	Price int32 `protobuf:"varint,4,opt,name=price,proto3" json:"price"`
}

func (x *RecycleRes) Reset() {
	*x = RecycleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleRes) ProtoMessage() {}

func (x *RecycleRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleRes.ProtoReflect.Descriptor instead.
func (*RecycleRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{33}
}

func (x *RecycleRes) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *RecycleRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RecycleRes) GetMoneyType() int32 {
	if x != nil {
		return x.MoneyType
	}
	return 0
}

func (x *RecycleRes) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetsPlayerSoulRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality"` //品质 （0-全部，1-普通，2-稀有，3-史诗，4-传说）
	// @inject_tag: json:"sub_device_type"
	SubDeviceType int32 `protobuf:"varint,2,opt,name=sub_device_type,json=subDeviceType,proto3" json:"sub_device_type"` //适用的武器
	// @inject_tag: json:"souls"
	Souls []*PlayerSoul `protobuf:"bytes,3,rep,name=souls,proto3" json:"souls"`
}

func (x *GetsPlayerSoulRes) Reset() {
	*x = GetsPlayerSoulRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerSoulRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerSoulRes) ProtoMessage() {}

func (x *GetsPlayerSoulRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerSoulRes.ProtoReflect.Descriptor instead.
func (*GetsPlayerSoulRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{34}
}

func (x *GetsPlayerSoulRes) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *GetsPlayerSoulRes) GetSubDeviceType() int32 {
	if x != nil {
		return x.SubDeviceType
	}
	return 0
}

func (x *GetsPlayerSoulRes) GetSouls() []*PlayerSoul {
	if x != nil {
		return x.Souls
	}
	return nil
}

type MoneyChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"money"
	Money *Money `protobuf:"bytes,1,opt,name=money,proto3" json:"money"` //当前货币量
}

func (x *MoneyChangeNotify) Reset() {
	*x = MoneyChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyChangeNotify) ProtoMessage() {}

func (x *MoneyChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyChangeNotify.ProtoReflect.Descriptor instead.
func (*MoneyChangeNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{35}
}

func (x *MoneyChangeNotify) GetMoney() *Money {
	if x != nil {
		return x.Money
	}
	return nil
}

type GetsChapterBattleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"battles"
	Battles []*Battle `protobuf:"bytes,1,rep,name=battles,proto3" json:"battles"`
}

func (x *GetsChapterBattleRes) Reset() {
	*x = GetsChapterBattleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsChapterBattleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsChapterBattleRes) ProtoMessage() {}

func (x *GetsChapterBattleRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsChapterBattleRes.ProtoReflect.Descriptor instead.
func (*GetsChapterBattleRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{36}
}

func (x *GetsChapterBattleRes) GetBattles() []*Battle {
	if x != nil {
		return x.Battles
	}
	return nil
}

type GetBattleInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"battle_id"
	BattleId int32 `protobuf:"varint,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id"` //关卡id
	// @inject_tag: json:"fighting"
	Fighting int32 `protobuf:"varint,2,opt,name=fighting,proto3" json:"fighting"` //推荐战力
	// @inject_tag: json:"defenses"
	Defenses []*FightPersonInfo `protobuf:"bytes,3,rep,name=defenses,proto3" json:"defenses"` //防守阵容
	// @inject_tag: json:"victory"
	Victory []*Reward `protobuf:"bytes,4,rep,name=victory,proto3" json:"victory"` // 胜利奖品
	// @inject_tag: json:"defeat"
	Defeat []*Reward `protobuf:"bytes,5,rep,name=defeat,proto3" json:"defeat"` // 失败奖品
}

func (x *GetBattleInfoRes) Reset() {
	*x = GetBattleInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBattleInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBattleInfoRes) ProtoMessage() {}

func (x *GetBattleInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBattleInfoRes.ProtoReflect.Descriptor instead.
func (*GetBattleInfoRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{37}
}

func (x *GetBattleInfoRes) GetBattleId() int32 {
	if x != nil {
		return x.BattleId
	}
	return 0
}

func (x *GetBattleInfoRes) GetFighting() int32 {
	if x != nil {
		return x.Fighting
	}
	return 0
}

func (x *GetBattleInfoRes) GetDefenses() []*FightPersonInfo {
	if x != nil {
		return x.Defenses
	}
	return nil
}

func (x *GetBattleInfoRes) GetVictory() []*Reward {
	if x != nil {
		return x.Victory
	}
	return nil
}

func (x *GetBattleInfoRes) GetDefeat() []*Reward {
	if x != nil {
		return x.Defeat
	}
	return nil
}

type GetDeviceInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
	// @inject_tag: json:"device"
	Device *PlayerDevice `protobuf:"bytes,2,opt,name=device,proto3" json:"device"` //装备
}

func (x *GetDeviceInfoRes) Reset() {
	*x = GetDeviceInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceInfoRes) ProtoMessage() {}

func (x *GetDeviceInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceInfoRes.ProtoReflect.Descriptor instead.
func (*GetDeviceInfoRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{38}
}

func (x *GetDeviceInfoRes) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *GetDeviceInfoRes) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type GetDeviceUpgradeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"` //升级后的等级
	// @inject_tag: json:"need_goods"
	NeedGoods []*NeedGoods `protobuf:"bytes,3,rep,name=need_goods,json=needGoods,proto3" json:"need_goods"` //升级所需物品
	// @inject_tag: json:"device"
	Device *PlayerDevice `protobuf:"bytes,4,opt,name=device,proto3" json:"device"` //物品属性
}

func (x *GetDeviceUpgradeRes) Reset() {
	*x = GetDeviceUpgradeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceUpgradeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceUpgradeRes) ProtoMessage() {}

func (x *GetDeviceUpgradeRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceUpgradeRes.ProtoReflect.Descriptor instead.
func (*GetDeviceUpgradeRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{39}
}

func (x *GetDeviceUpgradeRes) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *GetDeviceUpgradeRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetDeviceUpgradeRes) GetNeedGoods() []*NeedGoods {
	if x != nil {
		return x.NeedGoods
	}
	return nil
}

func (x *GetDeviceUpgradeRes) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type UpgradeDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,2,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,3,opt,name=level,proto3" json:"level"` //升级后的等级
	// @inject_tag: json:"device"
	Device *PlayerDevice `protobuf:"bytes,4,opt,name=device,proto3" json:"device"` //装备属性
}

func (x *UpgradeDeviceRes) Reset() {
	*x = UpgradeDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDeviceRes) ProtoMessage() {}

func (x *UpgradeDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDeviceRes.ProtoReflect.Descriptor instead.
func (*UpgradeDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{40}
}

func (x *UpgradeDeviceRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpgradeDeviceRes) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *UpgradeDeviceRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpgradeDeviceRes) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type ResetDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,2,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,3,opt,name=level,proto3" json:"level"` //升级后的等级
	// @inject_tag: json:"device"
	Device *PlayerDevice `protobuf:"bytes,4,opt,name=device,proto3" json:"device"` //物品属性
	// @inject_tag: json:"return_goods"
	ReturnGoods []*NeedGoods `protobuf:"bytes,5,rep,name=return_goods,json=returnGoods,proto3" json:"return_goods"` //返回物品
}

func (x *ResetDeviceRes) Reset() {
	*x = ResetDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetDeviceRes) ProtoMessage() {}

func (x *ResetDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetDeviceRes.ProtoReflect.Descriptor instead.
func (*ResetDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{41}
}

func (x *ResetDeviceRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResetDeviceRes) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *ResetDeviceRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ResetDeviceRes) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ResetDeviceRes) GetReturnGoods() []*NeedGoods {
	if x != nil {
		return x.ReturnGoods
	}
	return nil
}

type GetResetDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,1,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家物品ID，非物品ID
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"` //升级后的等级
	// @inject_tag: json:"device"
	Device *PlayerDevice `protobuf:"bytes,3,opt,name=device,proto3" json:"device"` //物品属性
	// @inject_tag: json:"return_goods"
	ReturnGoods []*NeedGoods `protobuf:"bytes,4,rep,name=return_goods,json=returnGoods,proto3" json:"return_goods"` //返回物品
}

func (x *GetResetDeviceRes) Reset() {
	*x = GetResetDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResetDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResetDeviceRes) ProtoMessage() {}

func (x *GetResetDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResetDeviceRes.ProtoReflect.Descriptor instead.
func (*GetResetDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{42}
}

func (x *GetResetDeviceRes) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

func (x *GetResetDeviceRes) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetResetDeviceRes) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *GetResetDeviceRes) GetReturnGoods() []*NeedGoods {
	if x != nil {
		return x.ReturnGoods
	}
	return nil
}

type DrawSoulRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,2,opt,name=quality,proto3" json:"quality"` // 1-勇气，2-希望，3-奇迹
	// @inject_tag: json:"soul_ids"
	SoulIds []int32 `protobuf:"varint,3,rep,packed,name=soul_ids,json=soulIds,proto3" json:"soul_ids"` //抽取结果
	// @inject_tag: json:"money"
	Money *Money `protobuf:"bytes,4,opt,name=money,proto3" json:"money"` //消耗的money
}

func (x *DrawSoulRes) Reset() {
	*x = DrawSoulRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawSoulRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawSoulRes) ProtoMessage() {}

func (x *DrawSoulRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawSoulRes.ProtoReflect.Descriptor instead.
func (*DrawSoulRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{43}
}

func (x *DrawSoulRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DrawSoulRes) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DrawSoulRes) GetSoulIds() []int32 {
	if x != nil {
		return x.SoulIds
	}
	return nil
}

func (x *DrawSoulRes) GetMoney() *Money {
	if x != nil {
		return x.Money
	}
	return nil
}

type GetsPlayerDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"total"
	Total int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type"`
	// @inject_tag: json:"devices"
	Devices []*PlayerDeviceInfo `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices"`
}

func (x *GetsPlayerDeviceRes) Reset() {
	*x = GetsPlayerDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPlayerDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPlayerDeviceRes) ProtoMessage() {}

func (x *GetsPlayerDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPlayerDeviceRes.ProtoReflect.Descriptor instead.
func (*GetsPlayerDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{44}
}

func (x *GetsPlayerDeviceRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsPlayerDeviceRes) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsPlayerDeviceRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetsPlayerDeviceRes) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetsPlayerDeviceRes) GetDevices() []*PlayerDeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

type KickOffNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"reason"
	Reason int32 `protobuf:"varint,1,opt,name=reason,proto3" json:"reason"` //原因 0-其他地方登陆
}

func (x *KickOffNotify) Reset() {
	*x = KickOffNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOffNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOffNotify) ProtoMessage() {}

func (x *KickOffNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOffNotify.ProtoReflect.Descriptor instead.
func (*KickOffNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{45}
}

func (x *KickOffNotify) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

// //////////////////////////////////
type Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"sender_id"
	SenderId int64 `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id"` //发送者Id
	// @inject_tag: json:"sender_name"
	SenderName string `protobuf:"bytes,2,opt,name=sender_name,json=senderName,proto3" json:"sender_name"` //发送者名称
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`
}

func (x *Chat) Reset() {
	*x = Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{46}
}

func (x *Chat) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *Chat) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Chat) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Battle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"` //关卡id
	// @inject_tag: json:"chapter_id"
	ChapterId int32 `protobuf:"varint,2,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id"` //章节id
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"` //关卡名称
	// @inject_tag: json:"desc"
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	// @inject_tag: json:"status"
	Status int32 `protobuf:"varint,5,opt,name=status,proto3" json:"status"` //战斗结果(0-未战斗，1-胜利，2-失败)
}

func (x *Battle) Reset() {
	*x = Battle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Battle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battle) ProtoMessage() {}

func (x *Battle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Battle.ProtoReflect.Descriptor instead.
func (*Battle) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{47}
}

func (x *Battle) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Battle) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *Battle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Battle) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Battle) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PlayerDeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods  *PlayerGoods  `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods"`
	Device *PlayerDevice `protobuf:"bytes,2,opt,name=device,proto3" json:"device"`
}

func (x *PlayerDeviceInfo) Reset() {
	*x = PlayerDeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDeviceInfo) ProtoMessage() {}

func (x *PlayerDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDeviceInfo.ProtoReflect.Descriptor instead.
func (*PlayerDeviceInfo) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{48}
}

func (x *PlayerDeviceInfo) GetGoods() *PlayerGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *PlayerDeviceInfo) GetDevice() *PlayerDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type PlayerDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"load_id"
	LoadId int64 `protobuf:"varint,1,opt,name=load_id,json=loadId,proto3" json:"load_id"` //0-未装备,有值-装载的族人
	// @inject_tag: json:"sub_device_type"
	SubDeviceType int32 `protobuf:"varint,2,opt,name=sub_device_type,json=subDeviceType,proto3" json:"sub_device_type"` //装备子类型,用于区分武器
	// @inject_tag: json:"properties"
	Properties map[int32]float32 `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` //属性
	// @inject_tag: json:"words"
	Words map[int32]*Word `protobuf:"bytes,4,rep,name=words,proto3" json:"words" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //词条
	// @inject_tag: json:"growth_rate"
	GrowthRate float32 `protobuf:"fixed32,5,opt,name=growth_rate,json=growthRate,proto3" json:"growth_rate"` //成长率
}

func (x *PlayerDevice) Reset() {
	*x = PlayerDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDevice) ProtoMessage() {}

func (x *PlayerDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDevice.ProtoReflect.Descriptor instead.
func (*PlayerDevice) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{49}
}

func (x *PlayerDevice) GetLoadId() int64 {
	if x != nil {
		return x.LoadId
	}
	return 0
}

func (x *PlayerDevice) GetSubDeviceType() int32 {
	if x != nil {
		return x.SubDeviceType
	}
	return 0
}

func (x *PlayerDevice) GetProperties() map[int32]float32 {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *PlayerDevice) GetWords() map[int32]*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *PlayerDevice) GetGrowthRate() float32 {
	if x != nil {
		return x.GrowthRate
	}
	return 0
}

type NeedGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"` // 0-货币，1-物品
	// @inject_tag: json:"goods_id"
	GoodsId int32 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"` //物品ID
	// @inject_tag: json:"goods_id"
	NeedCount int32 `protobuf:"varint,3,opt,name=need_count,json=needCount,proto3" json:"need_count"` //需要数量
	// @inject_tag: json:"has_count"
	HasCount int32 `protobuf:"varint,4,opt,name=has_count,json=hasCount,proto3" json:"has_count"` //拥有数量
}

func (x *NeedGoods) Reset() {
	*x = NeedGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_player_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NeedGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedGoods) ProtoMessage() {}

func (x *NeedGoods) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_player_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedGoods.ProtoReflect.Descriptor instead.
func (*NeedGoods) Descriptor() ([]byte, []int) {
	return file_pb_proto_player_proto_rawDescGZIP(), []int{50}
}

func (x *NeedGoods) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NeedGoods) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *NeedGoods) GetNeedCount() int32 {
	if x != nil {
		return x.NeedCount
	}
	return 0
}

func (x *NeedGoods) GetHasCount() int32 {
	if x != nil {
		return x.HasCount
	}
	return 0
}

var File_pb_proto_player_proto protoreflect.FileDescriptor

var file_pb_proto_player_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x15, 0x70, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x85, 0x0b, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x41, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0c, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a,
	0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x3b, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x41,
	0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x4b, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x31,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x48, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x51, 0x0a, 0x17, 0x67,
	0x65, 0x74, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x73, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x45,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x12,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x10, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x3e, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x48, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d,
	0x64, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75,
	0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13,
	0x67, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x22, 0x89, 0x0c, 0x0a, 0x09, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x34, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x15, 0x67, 0x65, 0x74,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x67, 0x65, 0x74,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x6c,
	0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x14, 0x67, 0x65, 0x74, 0x73, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a,
	0x13, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x13, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x6f, 0x75,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x67,
	0x65, 0x74, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52,
	0x11, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x3b, 0x0a, 0x0f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00,
	0x52, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x0e,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x2e,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x22, 0x23,
	0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x42, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0f,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4a, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x73, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x22, 0x3d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x10,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x22,
	0x3d, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x35, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x06, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x33, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x2a, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x47,
	0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x2d, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x88,
	0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x0a, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x7b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x6c, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x6c, 0x73, 0x22, 0x34, 0x0a, 0x11, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1f, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x22, 0x3c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x73, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x22, 0xc6,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x0a, 0x08,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x07, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x76, 0x69, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x06, 0x64, 0x65, 0x66, 0x65, 0x61, 0x74, 0x22, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xab, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x65,
	0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x10,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xce, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x65, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0xad, 0x01,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x65, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x87, 0x01,
	0x0a, 0x0b, 0x44, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6f, 0x75, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x6f, 0x75, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x73,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x4b, 0x69, 0x63, 0x6b,
	0x4f, 0x66, 0x66, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x56, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x77, 0x0a, 0x06, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x28, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xe8, 0x02, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x1a,
	0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x76, 0x0a, 0x09, 0x4e, 0x65, 0x65, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70,
	0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_proto_player_proto_rawDescOnce sync.Once
	file_pb_proto_player_proto_rawDescData = file_pb_proto_player_proto_rawDesc
)

func file_pb_proto_player_proto_rawDescGZIP() []byte {
	file_pb_proto_player_proto_rawDescOnce.Do(func() {
		file_pb_proto_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_proto_player_proto_rawDescData)
	})
	return file_pb_proto_player_proto_rawDescData
}

var file_pb_proto_player_proto_msgTypes = make([]protoimpl.MessageInfo, 53)
var file_pb_proto_player_proto_goTypes = []interface{}{
	(*PlayerReq)(nil),            // 0: pb.PlayerReq
	(*PlayerRes)(nil),            // 1: pb.PlayerRes
	(*CreatePlayerReq)(nil),      // 2: pb.CreatePlayerReq
	(*GetPlayerReq)(nil),         // 3: pb.GetPlayerReq
	(*ChangeAvatarReq)(nil),      // 4: pb.ChangeAvatarReq
	(*ChangeNameReq)(nil),        // 5: pb.ChangeNameReq
	(*ChatAllReq)(nil),           // 6: pb.ChatAllReq
	(*GuildChatReq)(nil),         // 7: pb.GuildChatReq
	(*ChatPlayerReq)(nil),        // 8: pb.ChatPlayerReq
	(*PurchaseReq)(nil),          // 9: pb.PurchaseReq
	(*PurchaseGiftReq)(nil),      // 10: pb.PurchaseGiftReq
	(*GetsPlayerGoodsReq)(nil),   // 11: pb.GetsPlayerGoodsReq
	(*RecycleReq)(nil),           // 12: pb.RecycleReq
	(*GetsPlayerSoulReq)(nil),    // 13: pb.GetsPlayerSoulReq
	(*GetsChapterBattleReq)(nil), // 14: pb.GetsChapterBattleReq
	(*GetBattleInfoReq)(nil),     // 15: pb.GetBattleInfoReq
	(*GetDeviceInfoReq)(nil),     // 16: pb.GetDeviceInfoReq
	(*GetDeviceUpgradeReq)(nil),  // 17: pb.GetDeviceUpgradeReq
	(*UpgradeDeviceReq)(nil),     // 18: pb.UpgradeDeviceReq
	(*ResetDeviceReq)(nil),       // 19: pb.ResetDeviceReq
	(*GetResetDeviceReq)(nil),    // 20: pb.GetResetDeviceReq
	(*DrawSoulReq)(nil),          // 21: pb.DrawSoulReq
	(*GetsPlayerDeviceReq)(nil),  // 22: pb.GetsPlayerDeviceReq
	(*CreatePlayerRes)(nil),      // 23: pb.CreatePlayerRes
	(*GetPlayerRes)(nil),         // 24: pb.GetPlayerRes
	(*ChangeAvatarRes)(nil),      // 25: pb.ChangeAvatarRes
	(*ChangeNameRes)(nil),        // 26: pb.ChangeNameRes
	(*ChatAllRes)(nil),           // 27: pb.ChatAllRes
	(*GuildChatRes)(nil),         // 28: pb.GuildChatRes
	(*ChatPlayerRes)(nil),        // 29: pb.ChatPlayerRes
	(*PurchaseRes)(nil),          // 30: pb.PurchaseRes
	(*PurchaseGiftRes)(nil),      // 31: pb.PurchaseGiftRes
	(*GetsPlayerGoodsRes)(nil),   // 32: pb.GetsPlayerGoodsRes
	(*RecycleRes)(nil),           // 33: pb.RecycleRes
	(*GetsPlayerSoulRes)(nil),    // 34: pb.GetsPlayerSoulRes
	(*MoneyChangeNotify)(nil),    // 35: pb.MoneyChangeNotify
	(*GetsChapterBattleRes)(nil), // 36: pb.GetsChapterBattleRes
	(*GetBattleInfoRes)(nil),     // 37: pb.GetBattleInfoRes
	(*GetDeviceInfoRes)(nil),     // 38: pb.GetDeviceInfoRes
	(*GetDeviceUpgradeRes)(nil),  // 39: pb.GetDeviceUpgradeRes
	(*UpgradeDeviceRes)(nil),     // 40: pb.UpgradeDeviceRes
	(*ResetDeviceRes)(nil),       // 41: pb.ResetDeviceRes
	(*GetResetDeviceRes)(nil),    // 42: pb.GetResetDeviceRes
	(*DrawSoulRes)(nil),          // 43: pb.DrawSoulRes
	(*GetsPlayerDeviceRes)(nil),  // 44: pb.GetsPlayerDeviceRes
	(*KickOffNotify)(nil),        // 45: pb.KickOffNotify
	(*Chat)(nil),                 // 46: pb.Chat
	(*Battle)(nil),               // 47: pb.Battle
	(*PlayerDeviceInfo)(nil),     // 48: pb.PlayerDeviceInfo
	(*PlayerDevice)(nil),         // 49: pb.PlayerDevice
	(*NeedGoods)(nil),            // 50: pb.NeedGoods
	nil,                          // 51: pb.PlayerDevice.PropertiesEntry
	nil,                          // 52: pb.PlayerDevice.WordsEntry
	(Gender)(0),                  // 53: pb.Gender
	(*Result)(nil),               // 54: pb.Result
	(*BasePlayer)(nil),           // 55: pb.BasePlayer
	(*Money)(nil),                // 56: pb.Money
	(*PlayerGoods)(nil),          // 57: pb.PlayerGoods
	(*PlayerSoul)(nil),           // 58: pb.PlayerSoul
	(*FightPersonInfo)(nil),      // 59: pb.FightPersonInfo
	(*Reward)(nil),               // 60: pb.Reward
	(*Word)(nil),                 // 61: pb.Word
}
var file_pb_proto_player_proto_depIdxs = []int32{
	2,  // 0: pb.PlayerReq.create_player_req:type_name -> pb.CreatePlayerReq
	3,  // 1: pb.PlayerReq.get_player_req:type_name -> pb.GetPlayerReq
	4,  // 2: pb.PlayerReq.change_avatar_req:type_name -> pb.ChangeAvatarReq
	5,  // 3: pb.PlayerReq.change_name_req:type_name -> pb.ChangeNameReq
	6,  // 4: pb.PlayerReq.chat_all_req:type_name -> pb.ChatAllReq
	7,  // 5: pb.PlayerReq.guild_chat_req:type_name -> pb.GuildChatReq
	8,  // 6: pb.PlayerReq.chat_player_req:type_name -> pb.ChatPlayerReq
	9,  // 7: pb.PlayerReq.purchase_req:type_name -> pb.PurchaseReq
	10, // 8: pb.PlayerReq.purchase_gift_req:type_name -> pb.PurchaseGiftReq
	11, // 9: pb.PlayerReq.gets_player_goods_req:type_name -> pb.GetsPlayerGoodsReq
	12, // 10: pb.PlayerReq.recycle_req:type_name -> pb.RecycleReq
	13, // 11: pb.PlayerReq.gets_player_soul_req:type_name -> pb.GetsPlayerSoulReq
	14, // 12: pb.PlayerReq.gets_chapter_battle_req:type_name -> pb.GetsChapterBattleReq
	15, // 13: pb.PlayerReq.get_battle_info_req:type_name -> pb.GetBattleInfoReq
	16, // 14: pb.PlayerReq.get_device_info_req:type_name -> pb.GetDeviceInfoReq
	17, // 15: pb.PlayerReq.get_device_upgrade_req:type_name -> pb.GetDeviceUpgradeReq
	18, // 16: pb.PlayerReq.upgrade_device_req:type_name -> pb.UpgradeDeviceReq
	19, // 17: pb.PlayerReq.reset_device_req:type_name -> pb.ResetDeviceReq
	20, // 18: pb.PlayerReq.get_reset_device_req:type_name -> pb.GetResetDeviceReq
	21, // 19: pb.PlayerReq.draw_soul_req:type_name -> pb.DrawSoulReq
	22, // 20: pb.PlayerReq.gets_player_device_req:type_name -> pb.GetsPlayerDeviceReq
	23, // 21: pb.PlayerRes.create_player_res:type_name -> pb.CreatePlayerRes
	24, // 22: pb.PlayerRes.get_player_res:type_name -> pb.GetPlayerRes
	25, // 23: pb.PlayerRes.change_avatar_res:type_name -> pb.ChangeAvatarRes
	26, // 24: pb.PlayerRes.change_name_res:type_name -> pb.ChangeNameRes
	27, // 25: pb.PlayerRes.chat_all_res:type_name -> pb.ChatAllRes
	28, // 26: pb.PlayerRes.guild_chat_res:type_name -> pb.GuildChatRes
	29, // 27: pb.PlayerRes.chat_player_res:type_name -> pb.ChatPlayerRes
	30, // 28: pb.PlayerRes.purchase_res:type_name -> pb.PurchaseRes
	31, // 29: pb.PlayerRes.purchase_gift_res:type_name -> pb.PurchaseGiftRes
	32, // 30: pb.PlayerRes.gets_player_goods_res:type_name -> pb.GetsPlayerGoodsRes
	33, // 31: pb.PlayerRes.recycle_res:type_name -> pb.RecycleRes
	34, // 32: pb.PlayerRes.gets_player_soul_res:type_name -> pb.GetsPlayerSoulRes
	36, // 33: pb.PlayerRes.gets_chapter_battle_res:type_name -> pb.GetsChapterBattleRes
	37, // 34: pb.PlayerRes.get_battle_info_res:type_name -> pb.GetBattleInfoRes
	38, // 35: pb.PlayerRes.get_device_info_res:type_name -> pb.GetDeviceInfoRes
	39, // 36: pb.PlayerRes.get_device_upgrade_res:type_name -> pb.GetDeviceUpgradeRes
	40, // 37: pb.PlayerRes.upgrade_device_res:type_name -> pb.UpgradeDeviceRes
	41, // 38: pb.PlayerRes.reset_device_res:type_name -> pb.ResetDeviceRes
	42, // 39: pb.PlayerRes.get_reset_device_res:type_name -> pb.GetResetDeviceRes
	43, // 40: pb.PlayerRes.draw_soul_res:type_name -> pb.DrawSoulRes
	44, // 41: pb.PlayerRes.gets_playerDeviceRes:type_name -> pb.GetsPlayerDeviceRes
	35, // 42: pb.PlayerRes.money_change_notify:type_name -> pb.MoneyChangeNotify
	45, // 43: pb.PlayerRes.kick_off_notify:type_name -> pb.KickOffNotify
	53, // 44: pb.CreatePlayerReq.gender:type_name -> pb.Gender
	54, // 45: pb.CreatePlayerRes.result:type_name -> pb.Result
	54, // 46: pb.GetPlayerRes.result:type_name -> pb.Result
	55, // 47: pb.GetPlayerRes.player:type_name -> pb.BasePlayer
	56, // 48: pb.GetPlayerRes.moneys:type_name -> pb.Money
	54, // 49: pb.ChangeAvatarRes.result:type_name -> pb.Result
	54, // 50: pb.ChangeNameRes.result:type_name -> pb.Result
	46, // 51: pb.ChatAllRes.chat:type_name -> pb.Chat
	46, // 52: pb.GuildChatRes.chat:type_name -> pb.Chat
	46, // 53: pb.ChatPlayerRes.chat:type_name -> pb.Chat
	54, // 54: pb.PurchaseRes.result:type_name -> pb.Result
	54, // 55: pb.PurchaseGiftRes.result:type_name -> pb.Result
	57, // 56: pb.GetsPlayerGoodsRes.goods:type_name -> pb.PlayerGoods
	58, // 57: pb.GetsPlayerSoulRes.souls:type_name -> pb.PlayerSoul
	56, // 58: pb.MoneyChangeNotify.money:type_name -> pb.Money
	47, // 59: pb.GetsChapterBattleRes.battles:type_name -> pb.Battle
	59, // 60: pb.GetBattleInfoRes.defenses:type_name -> pb.FightPersonInfo
	60, // 61: pb.GetBattleInfoRes.victory:type_name -> pb.Reward
	60, // 62: pb.GetBattleInfoRes.defeat:type_name -> pb.Reward
	49, // 63: pb.GetDeviceInfoRes.device:type_name -> pb.PlayerDevice
	50, // 64: pb.GetDeviceUpgradeRes.need_goods:type_name -> pb.NeedGoods
	49, // 65: pb.GetDeviceUpgradeRes.device:type_name -> pb.PlayerDevice
	54, // 66: pb.UpgradeDeviceRes.result:type_name -> pb.Result
	49, // 67: pb.UpgradeDeviceRes.device:type_name -> pb.PlayerDevice
	54, // 68: pb.ResetDeviceRes.result:type_name -> pb.Result
	49, // 69: pb.ResetDeviceRes.device:type_name -> pb.PlayerDevice
	50, // 70: pb.ResetDeviceRes.return_goods:type_name -> pb.NeedGoods
	49, // 71: pb.GetResetDeviceRes.device:type_name -> pb.PlayerDevice
	50, // 72: pb.GetResetDeviceRes.return_goods:type_name -> pb.NeedGoods
	54, // 73: pb.DrawSoulRes.result:type_name -> pb.Result
	56, // 74: pb.DrawSoulRes.money:type_name -> pb.Money
	48, // 75: pb.GetsPlayerDeviceRes.devices:type_name -> pb.PlayerDeviceInfo
	57, // 76: pb.PlayerDeviceInfo.goods:type_name -> pb.PlayerGoods
	49, // 77: pb.PlayerDeviceInfo.device:type_name -> pb.PlayerDevice
	51, // 78: pb.PlayerDevice.properties:type_name -> pb.PlayerDevice.PropertiesEntry
	52, // 79: pb.PlayerDevice.words:type_name -> pb.PlayerDevice.WordsEntry
	61, // 80: pb.PlayerDevice.WordsEntry.value:type_name -> pb.Word
	81, // [81:81] is the sub-list for method output_type
	81, // [81:81] is the sub-list for method input_type
	81, // [81:81] is the sub-list for extension type_name
	81, // [81:81] is the sub-list for extension extendee
	0,  // [0:81] is the sub-list for field type_name
}

func init() { file_pb_proto_player_proto_init() }
func file_pb_proto_player_proto_init() {
	if File_pb_proto_player_proto != nil {
		return
	}
	file_pb_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_proto_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPlayerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerGoodsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerSoulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsChapterBattleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBattleInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResetDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawSoulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAvatarRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNameRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatAllRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildChatRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPlayerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseGiftRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerGoodsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerSoulRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsChapterBattleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBattleInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceUpgradeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResetDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawSoulRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPlayerDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOffNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Battle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_player_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NeedGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_proto_player_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PlayerReq_CreatePlayerReq)(nil),
		(*PlayerReq_GetPlayerReq)(nil),
		(*PlayerReq_ChangeAvatarReq)(nil),
		(*PlayerReq_ChangeNameReq)(nil),
		(*PlayerReq_ChatAllReq)(nil),
		(*PlayerReq_GuildChatReq)(nil),
		(*PlayerReq_ChatPlayerReq)(nil),
		(*PlayerReq_PurchaseReq)(nil),
		(*PlayerReq_PurchaseGiftReq)(nil),
		(*PlayerReq_GetsPlayerGoodsReq)(nil),
		(*PlayerReq_RecycleReq)(nil),
		(*PlayerReq_GetsPlayerSoulReq)(nil),
		(*PlayerReq_GetsChapterBattleReq)(nil),
		(*PlayerReq_GetBattleInfoReq)(nil),
		(*PlayerReq_GetDeviceInfoReq)(nil),
		(*PlayerReq_GetDeviceUpgradeReq)(nil),
		(*PlayerReq_UpgradeDeviceReq)(nil),
		(*PlayerReq_ResetDeviceReq)(nil),
		(*PlayerReq_GetResetDeviceReq_)(nil),
		(*PlayerReq_DrawSoulReq)(nil),
		(*PlayerReq_GetsPlayerDeviceReq)(nil),
	}
	file_pb_proto_player_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PlayerRes_CreatePlayerRes)(nil),
		(*PlayerRes_GetPlayerRes)(nil),
		(*PlayerRes_ChangeAvatarRes)(nil),
		(*PlayerRes_ChangeNameRes)(nil),
		(*PlayerRes_ChatAllRes)(nil),
		(*PlayerRes_GuildChatRes)(nil),
		(*PlayerRes_ChatPlayerRes)(nil),
		(*PlayerRes_PurchaseRes)(nil),
		(*PlayerRes_PurchaseGiftRes)(nil),
		(*PlayerRes_GetsPlayerGoodsRes)(nil),
		(*PlayerRes_RecycleRes)(nil),
		(*PlayerRes_GetsPlayerSoulRes)(nil),
		(*PlayerRes_GetsChapterBattleRes)(nil),
		(*PlayerRes_GetBattleInfoRes)(nil),
		(*PlayerRes_GetDeviceInfoRes)(nil),
		(*PlayerRes_GetDeviceUpgradeRes)(nil),
		(*PlayerRes_UpgradeDeviceRes)(nil),
		(*PlayerRes_ResetDeviceRes)(nil),
		(*PlayerRes_GetResetDeviceRes_)(nil),
		(*PlayerRes_DrawSoulRes)(nil),
		(*PlayerRes_GetsPlayerDeviceRes)(nil),
		(*PlayerRes_MoneyChangeNotify)(nil),
		(*PlayerRes_KickOffNotify)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_proto_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   53,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_proto_player_proto_goTypes,
		DependencyIndexes: file_pb_proto_player_proto_depIdxs,
		MessageInfos:      file_pb_proto_player_proto_msgTypes,
	}.Build()
	File_pb_proto_player_proto = out.File
	file_pb_proto_player_proto_rawDesc = nil
	file_pb_proto_player_proto_goTypes = nil
	file_pb_proto_player_proto_depIdxs = nil
}
