// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: pb/proto/person.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*PersonReq_GetsPersonReq
	//	*PersonReq_GetPersonReq
	//	*PersonReq_DrawPersonReq
	//	*PersonReq_GetPersonUpgradeReq
	//	*PersonReq_UpgradePersonReq
	//	*PersonReq_AddPersonPointReq
	//	*PersonReq_LoadDeviceReq
	//	*PersonReq_UnloadDeviceReq
	//	*PersonReq_GetEducateEffectReq
	//	*PersonReq_EducateReq
	//	*PersonReq_GenealogyReq
	//	*PersonReq_ResetPersonReq
	//	*PersonReq_LightSkillTreeReq
	//	*PersonReq_LoadSoulReq
	//	*PersonReq_UnloadSoulReq
	//	*PersonReq_GetsPersonSoulReq
	//	*PersonReq_RecyclePersonReq
	//	*PersonReq_GetLineupReq
	//	*PersonReq_LineupPersonReq
	//	*PersonReq_GetsDeploymentReq
	//	*PersonReq_StudySoulsReq
	//	*PersonReq_SwitchDeploymentReq
	//	*PersonReq_UpgradeDeploymentReq
	//	*PersonReq_UnlineupPersonReq
	//	*PersonReq_UpgradeSkillTreeReq
	//	*PersonReq_SetInheritWordReq
	//	*PersonReq_LoadPersonSkillReq
	//	*PersonReq_UnloadPersonSkillReq
	//	*PersonReq_ResetPersonAddPointReq
	Req isPersonReq_Req `protobuf_oneof:"req"`
}

func (x *PersonReq) Reset() {
	*x = PersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonReq) ProtoMessage() {}

func (x *PersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonReq.ProtoReflect.Descriptor instead.
func (*PersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{0}
}

func (m *PersonReq) GetReq() isPersonReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *PersonReq) GetGetsPersonReq() *GetsPersonReq {
	if x, ok := x.GetReq().(*PersonReq_GetsPersonReq); ok {
		return x.GetsPersonReq
	}
	return nil
}

func (x *PersonReq) GetGetPersonReq() *GetPersonReq {
	if x, ok := x.GetReq().(*PersonReq_GetPersonReq); ok {
		return x.GetPersonReq
	}
	return nil
}

func (x *PersonReq) GetDrawPersonReq() *DrawPersonReq {
	if x, ok := x.GetReq().(*PersonReq_DrawPersonReq); ok {
		return x.DrawPersonReq
	}
	return nil
}

func (x *PersonReq) GetGetPersonUpgradeReq() *GetPersonUpgradeReq {
	if x, ok := x.GetReq().(*PersonReq_GetPersonUpgradeReq); ok {
		return x.GetPersonUpgradeReq
	}
	return nil
}

func (x *PersonReq) GetUpgradePersonReq() *UpgradePersonReq {
	if x, ok := x.GetReq().(*PersonReq_UpgradePersonReq); ok {
		return x.UpgradePersonReq
	}
	return nil
}

func (x *PersonReq) GetAddPersonPointReq() *AddPersonPointReq {
	if x, ok := x.GetReq().(*PersonReq_AddPersonPointReq); ok {
		return x.AddPersonPointReq
	}
	return nil
}

func (x *PersonReq) GetLoadDeviceReq() *LoadDeviceReq {
	if x, ok := x.GetReq().(*PersonReq_LoadDeviceReq); ok {
		return x.LoadDeviceReq
	}
	return nil
}

func (x *PersonReq) GetUnloadDeviceReq() *UnloadDeviceReq {
	if x, ok := x.GetReq().(*PersonReq_UnloadDeviceReq); ok {
		return x.UnloadDeviceReq
	}
	return nil
}

func (x *PersonReq) GetGetEducateEffectReq() *GetEducateEffectReq {
	if x, ok := x.GetReq().(*PersonReq_GetEducateEffectReq); ok {
		return x.GetEducateEffectReq
	}
	return nil
}

func (x *PersonReq) GetEducateReq() *EducateReq {
	if x, ok := x.GetReq().(*PersonReq_EducateReq); ok {
		return x.EducateReq
	}
	return nil
}

func (x *PersonReq) GetGenealogyReq() *GenealogyReq {
	if x, ok := x.GetReq().(*PersonReq_GenealogyReq); ok {
		return x.GenealogyReq
	}
	return nil
}

func (x *PersonReq) GetResetPersonReq() *ResetPersonReq {
	if x, ok := x.GetReq().(*PersonReq_ResetPersonReq); ok {
		return x.ResetPersonReq
	}
	return nil
}

func (x *PersonReq) GetLightSkillTreeReq() *LightSkillTreeReq {
	if x, ok := x.GetReq().(*PersonReq_LightSkillTreeReq); ok {
		return x.LightSkillTreeReq
	}
	return nil
}

func (x *PersonReq) GetLoadSoulReq() *LoadSoulReq {
	if x, ok := x.GetReq().(*PersonReq_LoadSoulReq); ok {
		return x.LoadSoulReq
	}
	return nil
}

func (x *PersonReq) GetUnloadSoulReq() *UnloadSoulReq {
	if x, ok := x.GetReq().(*PersonReq_UnloadSoulReq); ok {
		return x.UnloadSoulReq
	}
	return nil
}

func (x *PersonReq) GetGetsPersonSoulReq() *GetsPersonSoulReq {
	if x, ok := x.GetReq().(*PersonReq_GetsPersonSoulReq); ok {
		return x.GetsPersonSoulReq
	}
	return nil
}

func (x *PersonReq) GetRecyclePersonReq() *RecyclePersonReq {
	if x, ok := x.GetReq().(*PersonReq_RecyclePersonReq); ok {
		return x.RecyclePersonReq
	}
	return nil
}

func (x *PersonReq) GetGetLineupReq() *GetLineupReq {
	if x, ok := x.GetReq().(*PersonReq_GetLineupReq); ok {
		return x.GetLineupReq
	}
	return nil
}

func (x *PersonReq) GetLineupPersonReq() *LineupPersonReq {
	if x, ok := x.GetReq().(*PersonReq_LineupPersonReq); ok {
		return x.LineupPersonReq
	}
	return nil
}

func (x *PersonReq) GetGetsDeploymentReq() *GetsDeploymentReq {
	if x, ok := x.GetReq().(*PersonReq_GetsDeploymentReq); ok {
		return x.GetsDeploymentReq
	}
	return nil
}

func (x *PersonReq) GetStudySoulsReq() *StudySoulsReq {
	if x, ok := x.GetReq().(*PersonReq_StudySoulsReq); ok {
		return x.StudySoulsReq
	}
	return nil
}

func (x *PersonReq) GetSwitchDeploymentReq() *SwitchDeploymentReq {
	if x, ok := x.GetReq().(*PersonReq_SwitchDeploymentReq); ok {
		return x.SwitchDeploymentReq
	}
	return nil
}

func (x *PersonReq) GetUpgradeDeploymentReq() *UpgradeDeploymentReq {
	if x, ok := x.GetReq().(*PersonReq_UpgradeDeploymentReq); ok {
		return x.UpgradeDeploymentReq
	}
	return nil
}

func (x *PersonReq) GetUnlineupPersonReq() *UnlineupPersonReq {
	if x, ok := x.GetReq().(*PersonReq_UnlineupPersonReq); ok {
		return x.UnlineupPersonReq
	}
	return nil
}

func (x *PersonReq) GetUpgradeSkillTreeReq() *UpgradeSkillTreeReq {
	if x, ok := x.GetReq().(*PersonReq_UpgradeSkillTreeReq); ok {
		return x.UpgradeSkillTreeReq
	}
	return nil
}

func (x *PersonReq) GetSetInheritWordReq() *SetInheritWordReq {
	if x, ok := x.GetReq().(*PersonReq_SetInheritWordReq); ok {
		return x.SetInheritWordReq
	}
	return nil
}

func (x *PersonReq) GetLoadPersonSkillReq() *LoadPersonSkillReq {
	if x, ok := x.GetReq().(*PersonReq_LoadPersonSkillReq); ok {
		return x.LoadPersonSkillReq
	}
	return nil
}

func (x *PersonReq) GetUnloadPersonSkillReq() *UnLoadPersonSkillReq {
	if x, ok := x.GetReq().(*PersonReq_UnloadPersonSkillReq); ok {
		return x.UnloadPersonSkillReq
	}
	return nil
}

func (x *PersonReq) GetResetPersonAddPointReq() *ResetPersonAddPointReq {
	if x, ok := x.GetReq().(*PersonReq_ResetPersonAddPointReq); ok {
		return x.ResetPersonAddPointReq
	}
	return nil
}

type isPersonReq_Req interface {
	isPersonReq_Req()
}

type PersonReq_GetsPersonReq struct {
	GetsPersonReq *GetsPersonReq `protobuf:"bytes,1,opt,name=gets_person_req,json=getsPersonReq,proto3,oneof"` //获取族人
}

type PersonReq_GetPersonReq struct {
	GetPersonReq *GetPersonReq `protobuf:"bytes,2,opt,name=get_person_req,json=getPersonReq,proto3,oneof"` //获取族人属性
}

type PersonReq_DrawPersonReq struct {
	DrawPersonReq *DrawPersonReq `protobuf:"bytes,3,opt,name=draw_person_req,json=drawPersonReq,proto3,oneof"` //繁衍族人,不传值时为祈求族人
}

type PersonReq_GetPersonUpgradeReq struct {
	GetPersonUpgradeReq *GetPersonUpgradeReq `protobuf:"bytes,4,opt,name=get_person_upgrade_req,json=getPersonUpgradeReq,proto3,oneof"` //获取升级信息
}

type PersonReq_UpgradePersonReq struct {
	UpgradePersonReq *UpgradePersonReq `protobuf:"bytes,5,opt,name=upgrade_person_req,json=upgradePersonReq,proto3,oneof"` //族人使用经验书升级
}

type PersonReq_AddPersonPointReq struct {
	AddPersonPointReq *AddPersonPointReq `protobuf:"bytes,6,opt,name=add_person_point_req,json=addPersonPointReq,proto3,oneof"` //加点
}

type PersonReq_LoadDeviceReq struct {
	LoadDeviceReq *LoadDeviceReq `protobuf:"bytes,7,opt,name=load_device_req,json=loadDeviceReq,proto3,oneof"` //装载（更换）设备
}

type PersonReq_UnloadDeviceReq struct {
	UnloadDeviceReq *UnloadDeviceReq `protobuf:"bytes,8,opt,name=unload_device_req,json=unloadDeviceReq,proto3,oneof"` //卸载设备
}

type PersonReq_GetEducateEffectReq struct {
	GetEducateEffectReq *GetEducateEffectReq `protobuf:"bytes,9,opt,name=get_educate_effect_req,json=getEducateEffectReq,proto3,oneof"` //获取培养效果
}

type PersonReq_EducateReq struct {
	EducateReq *EducateReq `protobuf:"bytes,10,opt,name=educate_req,json=educateReq,proto3,oneof"` //培养
}

type PersonReq_GenealogyReq struct {
	GenealogyReq *GenealogyReq `protobuf:"bytes,11,opt,name=genealogy_req,json=genealogyReq,proto3,oneof"` //族谱
}

type PersonReq_ResetPersonReq struct {
	ResetPersonReq *ResetPersonReq `protobuf:"bytes,12,opt,name=reset_person_req,json=resetPersonReq,proto3,oneof"` //重置族人
}

type PersonReq_LightSkillTreeReq struct {
	LightSkillTreeReq *LightSkillTreeReq `protobuf:"bytes,13,opt,name=light_skill_tree_req,json=lightSkillTreeReq,proto3,oneof"` //点亮技能树
}

type PersonReq_LoadSoulReq struct {
	LoadSoulReq *LoadSoulReq `protobuf:"bytes,14,opt,name=load_soul_req,json=loadSoulReq,proto3,oneof"` //装载（更换）契约
}

type PersonReq_UnloadSoulReq struct {
	UnloadSoulReq *UnloadSoulReq `protobuf:"bytes,15,opt,name=unload_soul_req,json=unloadSoulReq,proto3,oneof"` //卸载契约
}

type PersonReq_GetsPersonSoulReq struct {
	GetsPersonSoulReq *GetsPersonSoulReq `protobuf:"bytes,16,opt,name=gets_person_soul_req,json=getsPersonSoulReq,proto3,oneof"` //获取契约
}

type PersonReq_RecyclePersonReq struct {
	RecyclePersonReq *RecyclePersonReq `protobuf:"bytes,17,opt,name=recycle_person_req,json=recyclePersonReq,proto3,oneof"` //系统回收
}

type PersonReq_GetLineupReq struct {
	GetLineupReq *GetLineupReq `protobuf:"bytes,18,opt,name=get_lineup_req,json=getLineupReq,proto3,oneof"` //获取阵容
}

type PersonReq_LineupPersonReq struct {
	LineupPersonReq *LineupPersonReq `protobuf:"bytes,19,opt,name=lineup_person_req,json=lineupPersonReq,proto3,oneof"` //上阵族人
}

type PersonReq_GetsDeploymentReq struct {
	GetsDeploymentReq *GetsDeploymentReq `protobuf:"bytes,20,opt,name=gets_deployment_req,json=getsDeploymentReq,proto3,oneof"` //获取阵法
}

type PersonReq_StudySoulsReq struct {
	StudySoulsReq *StudySoulsReq `protobuf:"bytes,21,opt,name=study_souls_req,json=studySoulsReq,proto3,oneof"` //学习契约
}

type PersonReq_SwitchDeploymentReq struct {
	SwitchDeploymentReq *SwitchDeploymentReq `protobuf:"bytes,22,opt,name=switch_deployment_req,json=switchDeploymentReq,proto3,oneof"` //切换阵法
}

type PersonReq_UpgradeDeploymentReq struct {
	UpgradeDeploymentReq *UpgradeDeploymentReq `protobuf:"bytes,23,opt,name=upgrade_deployment_req,json=upgradeDeploymentReq,proto3,oneof"` //升级阵法
}

type PersonReq_UnlineupPersonReq struct {
	UnlineupPersonReq *UnlineupPersonReq `protobuf:"bytes,24,opt,name=unlineup_person_req,json=unlineupPersonReq,proto3,oneof"` //上阵族人
}

type PersonReq_UpgradeSkillTreeReq struct {
	UpgradeSkillTreeReq *UpgradeSkillTreeReq `protobuf:"bytes,25,opt,name=upgrade_skill_tree_req,json=upgradeSkillTreeReq,proto3,oneof"` //升级技能树
}

type PersonReq_SetInheritWordReq struct {
	SetInheritWordReq *SetInheritWordReq `protobuf:"bytes,26,opt,name=set_inherit_word_req,json=setInheritWordReq,proto3,oneof"` //设置传承词条
}

type PersonReq_LoadPersonSkillReq struct {
	LoadPersonSkillReq *LoadPersonSkillReq `protobuf:"bytes,27,opt,name=load_person_skill_req,json=loadPersonSkillReq,proto3,oneof"` //装载技能
}

type PersonReq_UnloadPersonSkillReq struct {
	UnloadPersonSkillReq *UnLoadPersonSkillReq `protobuf:"bytes,28,opt,name=unload_person_skill_req,json=unloadPersonSkillReq,proto3,oneof"` //卸载技能
}

type PersonReq_ResetPersonAddPointReq struct {
	ResetPersonAddPointReq *ResetPersonAddPointReq `protobuf:"bytes,29,opt,name=reset_person_add_point_req,json=resetPersonAddPointReq,proto3,oneof"` //重置族人加点属性
}

func (*PersonReq_GetsPersonReq) isPersonReq_Req() {}

func (*PersonReq_GetPersonReq) isPersonReq_Req() {}

func (*PersonReq_DrawPersonReq) isPersonReq_Req() {}

func (*PersonReq_GetPersonUpgradeReq) isPersonReq_Req() {}

func (*PersonReq_UpgradePersonReq) isPersonReq_Req() {}

func (*PersonReq_AddPersonPointReq) isPersonReq_Req() {}

func (*PersonReq_LoadDeviceReq) isPersonReq_Req() {}

func (*PersonReq_UnloadDeviceReq) isPersonReq_Req() {}

func (*PersonReq_GetEducateEffectReq) isPersonReq_Req() {}

func (*PersonReq_EducateReq) isPersonReq_Req() {}

func (*PersonReq_GenealogyReq) isPersonReq_Req() {}

func (*PersonReq_ResetPersonReq) isPersonReq_Req() {}

func (*PersonReq_LightSkillTreeReq) isPersonReq_Req() {}

func (*PersonReq_LoadSoulReq) isPersonReq_Req() {}

func (*PersonReq_UnloadSoulReq) isPersonReq_Req() {}

func (*PersonReq_GetsPersonSoulReq) isPersonReq_Req() {}

func (*PersonReq_RecyclePersonReq) isPersonReq_Req() {}

func (*PersonReq_GetLineupReq) isPersonReq_Req() {}

func (*PersonReq_LineupPersonReq) isPersonReq_Req() {}

func (*PersonReq_GetsDeploymentReq) isPersonReq_Req() {}

func (*PersonReq_StudySoulsReq) isPersonReq_Req() {}

func (*PersonReq_SwitchDeploymentReq) isPersonReq_Req() {}

func (*PersonReq_UpgradeDeploymentReq) isPersonReq_Req() {}

func (*PersonReq_UnlineupPersonReq) isPersonReq_Req() {}

func (*PersonReq_UpgradeSkillTreeReq) isPersonReq_Req() {}

func (*PersonReq_SetInheritWordReq) isPersonReq_Req() {}

func (*PersonReq_LoadPersonSkillReq) isPersonReq_Req() {}

func (*PersonReq_UnloadPersonSkillReq) isPersonReq_Req() {}

func (*PersonReq_ResetPersonAddPointReq) isPersonReq_Req() {}

type PersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//
	//	*PersonRes_GetsPersonRes
	//	*PersonRes_GetPersonRes
	//	*PersonRes_DrawPersonRes
	//	*PersonRes_GetPersonUpgradeRes
	//	*PersonRes_UpgradePersonRes
	//	*PersonRes_AddPersonPointRes
	//	*PersonRes_LoadDeviceRes
	//	*PersonRes_UnloadDeviceRes
	//	*PersonRes_GetEducateEffectRes
	//	*PersonRes_EducateRes
	//	*PersonRes_GenealogyRes
	//	*PersonRes_ResetPersonRes
	//	*PersonRes_LightSkillTreeRes
	//	*PersonRes_LoadSoulRes
	//	*PersonRes_UnloadSoulRes
	//	*PersonRes_GetsPersonSoulRes
	//	*PersonRes_RecyclePersonRes
	//	*PersonRes_GetLineupRes
	//	*PersonRes_LineupPersonRes
	//	*PersonRes_GetsDeploymentRes
	//	*PersonRes_StudySoulsRes
	//	*PersonRes_SwitchDeploymentRes
	//	*PersonRes_UpgradeDeploymentRes
	//	*PersonRes_UnlineupPersonRes
	//	*PersonRes_UpgradeSkillTreeRes
	//	*PersonRes_SetInheritWordRes
	//	*PersonRes_LoadPersonSkillRes
	//	*PersonRes_UnloadPersonSkillRes
	//	*PersonRes_ResetPersonAddPointRes
	Res isPersonRes_Res `protobuf_oneof:"res"`
}

func (x *PersonRes) Reset() {
	*x = PersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonRes) ProtoMessage() {}

func (x *PersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonRes.ProtoReflect.Descriptor instead.
func (*PersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{1}
}

func (m *PersonRes) GetRes() isPersonRes_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *PersonRes) GetGetsPersonRes() *GetsPersonRes {
	if x, ok := x.GetRes().(*PersonRes_GetsPersonRes); ok {
		return x.GetsPersonRes
	}
	return nil
}

func (x *PersonRes) GetGetPersonRes() *GetPersonRes {
	if x, ok := x.GetRes().(*PersonRes_GetPersonRes); ok {
		return x.GetPersonRes
	}
	return nil
}

func (x *PersonRes) GetDrawPersonRes() *DrawPersonRes {
	if x, ok := x.GetRes().(*PersonRes_DrawPersonRes); ok {
		return x.DrawPersonRes
	}
	return nil
}

func (x *PersonRes) GetGetPersonUpgradeRes() *GetPersonUpgradeRes {
	if x, ok := x.GetRes().(*PersonRes_GetPersonUpgradeRes); ok {
		return x.GetPersonUpgradeRes
	}
	return nil
}

func (x *PersonRes) GetUpgradePersonRes() *UpgradePersonRes {
	if x, ok := x.GetRes().(*PersonRes_UpgradePersonRes); ok {
		return x.UpgradePersonRes
	}
	return nil
}

func (x *PersonRes) GetAddPersonPointRes() *AddPersonPointRes {
	if x, ok := x.GetRes().(*PersonRes_AddPersonPointRes); ok {
		return x.AddPersonPointRes
	}
	return nil
}

func (x *PersonRes) GetLoadDeviceRes() *LoadDeviceRes {
	if x, ok := x.GetRes().(*PersonRes_LoadDeviceRes); ok {
		return x.LoadDeviceRes
	}
	return nil
}

func (x *PersonRes) GetUnloadDeviceRes() *UnloadDeviceRes {
	if x, ok := x.GetRes().(*PersonRes_UnloadDeviceRes); ok {
		return x.UnloadDeviceRes
	}
	return nil
}

func (x *PersonRes) GetGetEducateEffectRes() *GetEducateEffectRes {
	if x, ok := x.GetRes().(*PersonRes_GetEducateEffectRes); ok {
		return x.GetEducateEffectRes
	}
	return nil
}

func (x *PersonRes) GetEducateRes() *EducateRes {
	if x, ok := x.GetRes().(*PersonRes_EducateRes); ok {
		return x.EducateRes
	}
	return nil
}

func (x *PersonRes) GetGenealogyRes() *GenealogyRes {
	if x, ok := x.GetRes().(*PersonRes_GenealogyRes); ok {
		return x.GenealogyRes
	}
	return nil
}

func (x *PersonRes) GetResetPersonRes() *ResetPersonRes {
	if x, ok := x.GetRes().(*PersonRes_ResetPersonRes); ok {
		return x.ResetPersonRes
	}
	return nil
}

func (x *PersonRes) GetLightSkillTreeRes() *LightSkillTreeRes {
	if x, ok := x.GetRes().(*PersonRes_LightSkillTreeRes); ok {
		return x.LightSkillTreeRes
	}
	return nil
}

func (x *PersonRes) GetLoadSoulRes() *LoadSoulRes {
	if x, ok := x.GetRes().(*PersonRes_LoadSoulRes); ok {
		return x.LoadSoulRes
	}
	return nil
}

func (x *PersonRes) GetUnloadSoulRes() *UnloadSoulRes {
	if x, ok := x.GetRes().(*PersonRes_UnloadSoulRes); ok {
		return x.UnloadSoulRes
	}
	return nil
}

func (x *PersonRes) GetGetsPersonSoulRes() *GetsPersonSoulRes {
	if x, ok := x.GetRes().(*PersonRes_GetsPersonSoulRes); ok {
		return x.GetsPersonSoulRes
	}
	return nil
}

func (x *PersonRes) GetRecyclePersonRes() *RecyclePersonRes {
	if x, ok := x.GetRes().(*PersonRes_RecyclePersonRes); ok {
		return x.RecyclePersonRes
	}
	return nil
}

func (x *PersonRes) GetGetLineupRes() *GetLineupRes {
	if x, ok := x.GetRes().(*PersonRes_GetLineupRes); ok {
		return x.GetLineupRes
	}
	return nil
}

func (x *PersonRes) GetLineupPersonRes() *LineupPersonRes {
	if x, ok := x.GetRes().(*PersonRes_LineupPersonRes); ok {
		return x.LineupPersonRes
	}
	return nil
}

func (x *PersonRes) GetGetsDeploymentRes() *GetsDeploymentRes {
	if x, ok := x.GetRes().(*PersonRes_GetsDeploymentRes); ok {
		return x.GetsDeploymentRes
	}
	return nil
}

func (x *PersonRes) GetStudySoulsRes() *StudySoulsRes {
	if x, ok := x.GetRes().(*PersonRes_StudySoulsRes); ok {
		return x.StudySoulsRes
	}
	return nil
}

func (x *PersonRes) GetSwitchDeploymentRes() *SwitchDeploymentRes {
	if x, ok := x.GetRes().(*PersonRes_SwitchDeploymentRes); ok {
		return x.SwitchDeploymentRes
	}
	return nil
}

func (x *PersonRes) GetUpgradeDeploymentRes() *UpgradeDeploymentRes {
	if x, ok := x.GetRes().(*PersonRes_UpgradeDeploymentRes); ok {
		return x.UpgradeDeploymentRes
	}
	return nil
}

func (x *PersonRes) GetUnlineupPersonRes() *UnlineupPersonRes {
	if x, ok := x.GetRes().(*PersonRes_UnlineupPersonRes); ok {
		return x.UnlineupPersonRes
	}
	return nil
}

func (x *PersonRes) GetUpgradeSkillTreeRes() *UpgradeSkillTreeRes {
	if x, ok := x.GetRes().(*PersonRes_UpgradeSkillTreeRes); ok {
		return x.UpgradeSkillTreeRes
	}
	return nil
}

func (x *PersonRes) GetSetInheritWordRes() *SetInheritWordRes {
	if x, ok := x.GetRes().(*PersonRes_SetInheritWordRes); ok {
		return x.SetInheritWordRes
	}
	return nil
}

func (x *PersonRes) GetLoadPersonSkillRes() *LoadPersonSkillRes {
	if x, ok := x.GetRes().(*PersonRes_LoadPersonSkillRes); ok {
		return x.LoadPersonSkillRes
	}
	return nil
}

func (x *PersonRes) GetUnloadPersonSkillRes() *UnLoadPersonSkillRes {
	if x, ok := x.GetRes().(*PersonRes_UnloadPersonSkillRes); ok {
		return x.UnloadPersonSkillRes
	}
	return nil
}

func (x *PersonRes) GetResetPersonAddPointRes() *ResetPersonAddPointRes {
	if x, ok := x.GetRes().(*PersonRes_ResetPersonAddPointRes); ok {
		return x.ResetPersonAddPointRes
	}
	return nil
}

type isPersonRes_Res interface {
	isPersonRes_Res()
}

type PersonRes_GetsPersonRes struct {
	GetsPersonRes *GetsPersonRes `protobuf:"bytes,1,opt,name=gets_person_res,json=getsPersonRes,proto3,oneof"` //获取族人
}

type PersonRes_GetPersonRes struct {
	GetPersonRes *GetPersonRes `protobuf:"bytes,2,opt,name=get_person_res,json=getPersonRes,proto3,oneof"` //获取族人属性
}

type PersonRes_DrawPersonRes struct {
	DrawPersonRes *DrawPersonRes `protobuf:"bytes,3,opt,name=draw_person_res,json=drawPersonRes,proto3,oneof"` //繁衍族人
}

type PersonRes_GetPersonUpgradeRes struct {
	GetPersonUpgradeRes *GetPersonUpgradeRes `protobuf:"bytes,4,opt,name=get_person_upgrade_res,json=getPersonUpgradeRes,proto3,oneof"` //获取升级信息
}

type PersonRes_UpgradePersonRes struct {
	UpgradePersonRes *UpgradePersonRes `protobuf:"bytes,5,opt,name=upgrade_person_res,json=upgradePersonRes,proto3,oneof"` //族人使用经验书升级
}

type PersonRes_AddPersonPointRes struct {
	AddPersonPointRes *AddPersonPointRes `protobuf:"bytes,6,opt,name=add_person_point_res,json=addPersonPointRes,proto3,oneof"` //加点
}

type PersonRes_LoadDeviceRes struct {
	LoadDeviceRes *LoadDeviceRes `protobuf:"bytes,7,opt,name=load_device_res,json=loadDeviceRes,proto3,oneof"` //装载（更换）设备
}

type PersonRes_UnloadDeviceRes struct {
	UnloadDeviceRes *UnloadDeviceRes `protobuf:"bytes,8,opt,name=unload_device_res,json=unloadDeviceRes,proto3,oneof"` //卸载设备
}

type PersonRes_GetEducateEffectRes struct {
	GetEducateEffectRes *GetEducateEffectRes `protobuf:"bytes,9,opt,name=get_educate_effect_res,json=getEducateEffectRes,proto3,oneof"` //获取培养效果
}

type PersonRes_EducateRes struct {
	EducateRes *EducateRes `protobuf:"bytes,10,opt,name=educate_res,json=educateRes,proto3,oneof"` //培养
}

type PersonRes_GenealogyRes struct {
	GenealogyRes *GenealogyRes `protobuf:"bytes,11,opt,name=genealogy_res,json=genealogyRes,proto3,oneof"` //族谱
}

type PersonRes_ResetPersonRes struct {
	ResetPersonRes *ResetPersonRes `protobuf:"bytes,12,opt,name=reset_person_res,json=resetPersonRes,proto3,oneof"` //重置族人
}

type PersonRes_LightSkillTreeRes struct {
	LightSkillTreeRes *LightSkillTreeRes `protobuf:"bytes,13,opt,name=light_skill_tree_res,json=lightSkillTreeRes,proto3,oneof"` //点亮技能树
}

type PersonRes_LoadSoulRes struct {
	LoadSoulRes *LoadSoulRes `protobuf:"bytes,14,opt,name=load_soul_res,json=loadSoulRes,proto3,oneof"` //装载（更换）契约
}

type PersonRes_UnloadSoulRes struct {
	UnloadSoulRes *UnloadSoulRes `protobuf:"bytes,15,opt,name=unload_soul_res,json=unloadSoulRes,proto3,oneof"` //卸载契约
}

type PersonRes_GetsPersonSoulRes struct {
	GetsPersonSoulRes *GetsPersonSoulRes `protobuf:"bytes,16,opt,name=gets_person_soul_res,json=getsPersonSoulRes,proto3,oneof"` //获取契约
}

type PersonRes_RecyclePersonRes struct {
	RecyclePersonRes *RecyclePersonRes `protobuf:"bytes,17,opt,name=recycle_person_res,json=recyclePersonRes,proto3,oneof"` //系统回收
}

type PersonRes_GetLineupRes struct {
	GetLineupRes *GetLineupRes `protobuf:"bytes,18,opt,name=get_lineup_res,json=getLineupRes,proto3,oneof"` //获取阵容
}

type PersonRes_LineupPersonRes struct {
	LineupPersonRes *LineupPersonRes `protobuf:"bytes,19,opt,name=lineup_person_res,json=lineupPersonRes,proto3,oneof"` //上阵族人
}

type PersonRes_GetsDeploymentRes struct {
	GetsDeploymentRes *GetsDeploymentRes `protobuf:"bytes,20,opt,name=gets_deployment_res,json=getsDeploymentRes,proto3,oneof"` //获取阵法
}

type PersonRes_StudySoulsRes struct {
	StudySoulsRes *StudySoulsRes `protobuf:"bytes,21,opt,name=study_souls_res,json=studySoulsRes,proto3,oneof"` //学习契约
}

type PersonRes_SwitchDeploymentRes struct {
	SwitchDeploymentRes *SwitchDeploymentRes `protobuf:"bytes,22,opt,name=switch_deployment_res,json=switchDeploymentRes,proto3,oneof"` //切换阵法
}

type PersonRes_UpgradeDeploymentRes struct {
	UpgradeDeploymentRes *UpgradeDeploymentRes `protobuf:"bytes,23,opt,name=upgrade_deployment_res,json=upgradeDeploymentRes,proto3,oneof"` //升级阵法
}

type PersonRes_UnlineupPersonRes struct {
	UnlineupPersonRes *UnlineupPersonRes `protobuf:"bytes,24,opt,name=unlineup_person_res,json=unlineupPersonRes,proto3,oneof"` //上阵族人
}

type PersonRes_UpgradeSkillTreeRes struct {
	UpgradeSkillTreeRes *UpgradeSkillTreeRes `protobuf:"bytes,25,opt,name=upgrade_skill_tree_res,json=upgradeSkillTreeRes,proto3,oneof"` //升级技能树
}

type PersonRes_SetInheritWordRes struct {
	SetInheritWordRes *SetInheritWordRes `protobuf:"bytes,26,opt,name=set_inherit_word_res,json=setInheritWordRes,proto3,oneof"` //设置传承词条
}

type PersonRes_LoadPersonSkillRes struct {
	LoadPersonSkillRes *LoadPersonSkillRes `protobuf:"bytes,27,opt,name=load_person_skill_res,json=loadPersonSkillRes,proto3,oneof"` //装载技能
}

type PersonRes_UnloadPersonSkillRes struct {
	UnloadPersonSkillRes *UnLoadPersonSkillRes `protobuf:"bytes,28,opt,name=unload_person_skill_res,json=unloadPersonSkillRes,proto3,oneof"` //卸载技能
}

type PersonRes_ResetPersonAddPointRes struct {
	ResetPersonAddPointRes *ResetPersonAddPointRes `protobuf:"bytes,29,opt,name=reset_person_add_point_res,json=resetPersonAddPointRes,proto3,oneof"` //重置族人加点属性
}

func (*PersonRes_GetsPersonRes) isPersonRes_Res() {}

func (*PersonRes_GetPersonRes) isPersonRes_Res() {}

func (*PersonRes_DrawPersonRes) isPersonRes_Res() {}

func (*PersonRes_GetPersonUpgradeRes) isPersonRes_Res() {}

func (*PersonRes_UpgradePersonRes) isPersonRes_Res() {}

func (*PersonRes_AddPersonPointRes) isPersonRes_Res() {}

func (*PersonRes_LoadDeviceRes) isPersonRes_Res() {}

func (*PersonRes_UnloadDeviceRes) isPersonRes_Res() {}

func (*PersonRes_GetEducateEffectRes) isPersonRes_Res() {}

func (*PersonRes_EducateRes) isPersonRes_Res() {}

func (*PersonRes_GenealogyRes) isPersonRes_Res() {}

func (*PersonRes_ResetPersonRes) isPersonRes_Res() {}

func (*PersonRes_LightSkillTreeRes) isPersonRes_Res() {}

func (*PersonRes_LoadSoulRes) isPersonRes_Res() {}

func (*PersonRes_UnloadSoulRes) isPersonRes_Res() {}

func (*PersonRes_GetsPersonSoulRes) isPersonRes_Res() {}

func (*PersonRes_RecyclePersonRes) isPersonRes_Res() {}

func (*PersonRes_GetLineupRes) isPersonRes_Res() {}

func (*PersonRes_LineupPersonRes) isPersonRes_Res() {}

func (*PersonRes_GetsDeploymentRes) isPersonRes_Res() {}

func (*PersonRes_StudySoulsRes) isPersonRes_Res() {}

func (*PersonRes_SwitchDeploymentRes) isPersonRes_Res() {}

func (*PersonRes_UpgradeDeploymentRes) isPersonRes_Res() {}

func (*PersonRes_UnlineupPersonRes) isPersonRes_Res() {}

func (*PersonRes_UpgradeSkillTreeRes) isPersonRes_Res() {}

func (*PersonRes_SetInheritWordRes) isPersonRes_Res() {}

func (*PersonRes_LoadPersonSkillRes) isPersonRes_Res() {}

func (*PersonRes_UnloadPersonSkillRes) isPersonRes_Res() {}

func (*PersonRes_ResetPersonAddPointRes) isPersonRes_Res() {}

// ////////////////////////////////////////////////////
type GetsPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"idle"
	Idle bool `protobuf:"varint,1,opt,name=idle,proto3" json:"idle"`
}

func (x *GetsPersonReq) Reset() {
	*x = GetsPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPersonReq) ProtoMessage() {}

func (x *GetsPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPersonReq.ProtoReflect.Descriptor instead.
func (*GetsPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{2}
}

func (x *GetsPersonReq) GetIdle() bool {
	if x != nil {
		return x.Idle
	}
	return false
}

type GetPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
}

func (x *GetPersonReq) Reset() {
	*x = GetPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonReq) ProtoMessage() {}

func (x *GetPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonReq.ProtoReflect.Descriptor instead.
func (*GetPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{3}
}

func (x *GetPersonReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type DrawPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"parent_id"
	ParentId int64 `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id"` //父辈ID
}

func (x *DrawPersonReq) Reset() {
	*x = DrawPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPersonReq) ProtoMessage() {}

func (x *DrawPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPersonReq.ProtoReflect.Descriptor instead.
func (*DrawPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{4}
}

func (x *DrawPersonReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type GetPersonUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
}

func (x *GetPersonUpgradeReq) Reset() {
	*x = GetPersonUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonUpgradeReq) ProtoMessage() {}

func (x *GetPersonUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonUpgradeReq.ProtoReflect.Descriptor instead.
func (*GetPersonUpgradeReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{5}
}

func (x *GetPersonUpgradeReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type UpgradePersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"book_count"
	BookCount int32 `protobuf:"varint,2,opt,name=book_count,json=bookCount,proto3" json:"book_count"`
}

func (x *UpgradePersonReq) Reset() {
	*x = UpgradePersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePersonReq) ProtoMessage() {}

func (x *UpgradePersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePersonReq.ProtoReflect.Descriptor instead.
func (*UpgradePersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{6}
}

func (x *UpgradePersonReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UpgradePersonReq) GetBookCount() int32 {
	if x != nil {
		return x.BookCount
	}
	return 0
}

type AddPersonPointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=PersonId,proto3" json:"PersonId"`
	// @inject_tag: json:"points"
	Points map[int32]int32 `protobuf:"bytes,2,rep,name=points,proto3" json:"points" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //key-属性,val-当前加的点
}

func (x *AddPersonPointReq) Reset() {
	*x = AddPersonPointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPersonPointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonPointReq) ProtoMessage() {}

func (x *AddPersonPointReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonPointReq.ProtoReflect.Descriptor instead.
func (*AddPersonPointReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{7}
}

func (x *AddPersonPointReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *AddPersonPointReq) GetPoints() map[int32]int32 {
	if x != nil {
		return x.Points
	}
	return nil
}

type LoadDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"`
	// @inject_tag: json:"player_goods_id"
	PlayerGoodsId int64 `protobuf:"varint,3,opt,name=player_goods_id,json=playerGoodsId,proto3" json:"player_goods_id"` //玩家的goods id
}

func (x *LoadDeviceReq) Reset() {
	*x = LoadDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDeviceReq) ProtoMessage() {}

func (x *LoadDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDeviceReq.ProtoReflect.Descriptor instead.
func (*LoadDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{8}
}

func (x *LoadDeviceReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *LoadDeviceReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *LoadDeviceReq) GetPlayerGoodsId() int64 {
	if x != nil {
		return x.PlayerGoodsId
	}
	return 0
}

type UnloadDeviceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"`
}

func (x *UnloadDeviceReq) Reset() {
	*x = UnloadDeviceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadDeviceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadDeviceReq) ProtoMessage() {}

func (x *UnloadDeviceReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadDeviceReq.ProtoReflect.Descriptor instead.
func (*UnloadDeviceReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{9}
}

func (x *UnloadDeviceReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UnloadDeviceReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type GetsPersonSoulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,2,opt,name=quality,proto3" json:"quality"` //品质 （0-全部，1-普通，2-稀有，3-史诗，4-传说）
	// @inject_tag: json:"sub_device_type"
	SubDeviceType int32 `protobuf:"varint,3,opt,name=sub_device_type,json=subDeviceType,proto3" json:"sub_device_type"` //适用的武器
	// @inject_tag: json:"unload"
	Unload bool `protobuf:"varint,4,opt,name=unload,proto3" json:"unload"` //只获取未装载的
}

func (x *GetsPersonSoulReq) Reset() {
	*x = GetsPersonSoulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPersonSoulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPersonSoulReq) ProtoMessage() {}

func (x *GetsPersonSoulReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPersonSoulReq.ProtoReflect.Descriptor instead.
func (*GetsPersonSoulReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{10}
}

func (x *GetsPersonSoulReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *GetsPersonSoulReq) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *GetsPersonSoulReq) GetSubDeviceType() int32 {
	if x != nil {
		return x.SubDeviceType
	}
	return 0
}

func (x *GetsPersonSoulReq) GetUnload() bool {
	if x != nil {
		return x.Unload
	}
	return false
}

type LoadSoulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"soul_id"
	SoulId int32 `protobuf:"varint,2,opt,name=soul_id,json=soulId,proto3" json:"soul_id"` // soul id
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,3,opt,name=pos,proto3" json:"pos"`
}

func (x *LoadSoulReq) Reset() {
	*x = LoadSoulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSoulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSoulReq) ProtoMessage() {}

func (x *LoadSoulReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSoulReq.ProtoReflect.Descriptor instead.
func (*LoadSoulReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{11}
}

func (x *LoadSoulReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *LoadSoulReq) GetSoulId() int32 {
	if x != nil {
		return x.SoulId
	}
	return 0
}

func (x *LoadSoulReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type UnloadSoulReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"`
}

func (x *UnloadSoulReq) Reset() {
	*x = UnloadSoulReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadSoulReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadSoulReq) ProtoMessage() {}

func (x *UnloadSoulReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadSoulReq.ProtoReflect.Descriptor instead.
func (*UnloadSoulReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{12}
}

func (x *UnloadSoulReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UnloadSoulReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type RecyclePersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
}

func (x *RecyclePersonReq) Reset() {
	*x = RecyclePersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclePersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclePersonReq) ProtoMessage() {}

func (x *RecyclePersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclePersonReq.ProtoReflect.Descriptor instead.
func (*RecyclePersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{13}
}

func (x *RecyclePersonReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type GetEducateEffectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"teacher_id"
	TeacherId int64 `protobuf:"varint,1,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id"` //教师
	// @inject_tag: json:"educate_type"
	EducateType int32 `protobuf:"varint,2,opt,name=educate_type,json=educateType,proto3" json:"educate_type"` //培养类型 0-农业，1-工业，2-管理，3-贸易，4-军事，5-战斗
}

func (x *GetEducateEffectReq) Reset() {
	*x = GetEducateEffectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEducateEffectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEducateEffectReq) ProtoMessage() {}

func (x *GetEducateEffectReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEducateEffectReq.ProtoReflect.Descriptor instead.
func (*GetEducateEffectReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{14}
}

func (x *GetEducateEffectReq) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *GetEducateEffectReq) GetEducateType() int32 {
	if x != nil {
		return x.EducateType
	}
	return 0
}

type EducateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //被培养对象
	// @inject_tag: json:"teacher_id"
	TeacherId int64 `protobuf:"varint,2,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id"` //教师
	// @inject_tag: json:"educate_type"
	EducateType int32 `protobuf:"varint,3,opt,name=educate_type,json=educateType,proto3" json:"educate_type"` //培养类型 0-农业，1-工业，2-管理，3-贸易，4-军事，5-战斗
}

func (x *EducateReq) Reset() {
	*x = EducateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EducateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EducateReq) ProtoMessage() {}

func (x *EducateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EducateReq.ProtoReflect.Descriptor instead.
func (*EducateReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{15}
}

func (x *EducateReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *EducateReq) GetTeacherId() int64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *EducateReq) GetEducateType() int32 {
	if x != nil {
		return x.EducateType
	}
	return 0
}

type GenealogyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
}

func (x *GenealogyReq) Reset() {
	*x = GenealogyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenealogyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenealogyReq) ProtoMessage() {}

func (x *GenealogyReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenealogyReq.ProtoReflect.Descriptor instead.
func (*GenealogyReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{16}
}

func (x *GenealogyReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type GetLineupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLineupReq) Reset() {
	*x = GetLineupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLineupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLineupReq) ProtoMessage() {}

func (x *GetLineupReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLineupReq.ProtoReflect.Descriptor instead.
func (*GetLineupReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{17}
}

type LineupPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"` //位置
}

func (x *LineupPersonReq) Reset() {
	*x = LineupPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineupPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineupPersonReq) ProtoMessage() {}

func (x *LineupPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineupPersonReq.ProtoReflect.Descriptor instead.
func (*LineupPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{18}
}

func (x *LineupPersonReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *LineupPersonReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type GetsDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetsDeploymentReq) Reset() {
	*x = GetsDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsDeploymentReq) ProtoMessage() {}

func (x *GetsDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsDeploymentReq.ProtoReflect.Descriptor instead.
func (*GetsDeploymentReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{19}
}

type StudySoulsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
	// @inject_tag: json:"soul_id"
	SoulId int32 `protobuf:"varint,2,opt,name=soul_id,json=soulId,proto3" json:"soul_id"` // soul_id
}

func (x *StudySoulsReq) Reset() {
	*x = StudySoulsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudySoulsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudySoulsReq) ProtoMessage() {}

func (x *StudySoulsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudySoulsReq.ProtoReflect.Descriptor instead.
func (*StudySoulsReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{20}
}

func (x *StudySoulsReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *StudySoulsReq) GetSoulId() int32 {
	if x != nil {
		return x.SoulId
	}
	return 0
}

type SwitchDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"deployment_id"
	DeploymentId int32 `protobuf:"varint,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id"` //阵法ID
}

func (x *SwitchDeploymentReq) Reset() {
	*x = SwitchDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDeploymentReq) ProtoMessage() {}

func (x *SwitchDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDeploymentReq.ProtoReflect.Descriptor instead.
func (*SwitchDeploymentReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{21}
}

func (x *SwitchDeploymentReq) GetDeploymentId() int32 {
	if x != nil {
		return x.DeploymentId
	}
	return 0
}

type UpgradeDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"deployment_id"
	DeploymentId int32 `protobuf:"varint,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id"` //阵法ID
}

func (x *UpgradeDeploymentReq) Reset() {
	*x = UpgradeDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDeploymentReq) ProtoMessage() {}

func (x *UpgradeDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDeploymentReq.ProtoReflect.Descriptor instead.
func (*UpgradeDeploymentReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{22}
}

func (x *UpgradeDeploymentReq) GetDeploymentId() int32 {
	if x != nil {
		return x.DeploymentId
	}
	return 0
}

type UnlineupPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"` //位置
}

func (x *UnlineupPersonReq) Reset() {
	*x = UnlineupPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlineupPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlineupPersonReq) ProtoMessage() {}

func (x *UnlineupPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlineupPersonReq.ProtoReflect.Descriptor instead.
func (*UnlineupPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{23}
}

func (x *UnlineupPersonReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type ResetPersonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
}

func (x *ResetPersonReq) Reset() {
	*x = ResetPersonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPersonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonReq) ProtoMessage() {}

func (x *ResetPersonReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonReq.ProtoReflect.Descriptor instead.
func (*ResetPersonReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{24}
}

func (x *ResetPersonReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type LightSkillTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
	// @inject_tag: json:"tree_id"
	TreeId int32 `protobuf:"varint,2,opt,name=tree_id,json=treeId,proto3" json:"tree_id"` //树
	// @inject_tag: json:"layer_id"
	LayerId int32 `protobuf:"varint,3,opt,name=layer_id,json=layerId,proto3" json:"layer_id"` //层数
	// @inject_tag: json:"skill_id"
	SkillId int32 `protobuf:"varint,4,opt,name=skill_id,json=skillId,proto3" json:"skill_id"` //技能ID
}

func (x *LightSkillTreeReq) Reset() {
	*x = LightSkillTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightSkillTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightSkillTreeReq) ProtoMessage() {}

func (x *LightSkillTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightSkillTreeReq.ProtoReflect.Descriptor instead.
func (*LightSkillTreeReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{25}
}

func (x *LightSkillTreeReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *LightSkillTreeReq) GetTreeId() int32 {
	if x != nil {
		return x.TreeId
	}
	return 0
}

func (x *LightSkillTreeReq) GetLayerId() int32 {
	if x != nil {
		return x.LayerId
	}
	return 0
}

func (x *LightSkillTreeReq) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

type UpgradeSkillTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"book_count"
	BookCount int32 `protobuf:"varint,2,opt,name=book_count,json=bookCount,proto3" json:"book_count"`
	// @inject_tag: json:"skill_tree"
	SkillTree int32 `protobuf:"varint,3,opt,name=skill_tree,json=skillTree,proto3" json:"skill_tree"`
}

func (x *UpgradeSkillTreeReq) Reset() {
	*x = UpgradeSkillTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeSkillTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSkillTreeReq) ProtoMessage() {}

func (x *UpgradeSkillTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSkillTreeReq.ProtoReflect.Descriptor instead.
func (*UpgradeSkillTreeReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{26}
}

func (x *UpgradeSkillTreeReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UpgradeSkillTreeReq) GetBookCount() int32 {
	if x != nil {
		return x.BookCount
	}
	return 0
}

func (x *UpgradeSkillTreeReq) GetSkillTree() int32 {
	if x != nil {
		return x.SkillTree
	}
	return 0
}

type SetInheritWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"word_id"
	WordId int32 `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id"`
}

func (x *SetInheritWordReq) Reset() {
	*x = SetInheritWordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInheritWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInheritWordReq) ProtoMessage() {}

func (x *SetInheritWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInheritWordReq.ProtoReflect.Descriptor instead.
func (*SetInheritWordReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{27}
}

func (x *SetInheritWordReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *SetInheritWordReq) GetWordId() int32 {
	if x != nil {
		return x.WordId
	}
	return 0
}

type LoadPersonSkillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"skill_id"
	SkillId int32 `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id"` // skill_id
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,3,opt,name=pos,proto3" json:"pos"` //同样位置有技能直接替换  1 2 3pos位置
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
}

func (x *LoadPersonSkillReq) Reset() {
	*x = LoadPersonSkillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadPersonSkillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPersonSkillReq) ProtoMessage() {}

func (x *LoadPersonSkillReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPersonSkillReq.ProtoReflect.Descriptor instead.
func (*LoadPersonSkillReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{28}
}

func (x *LoadPersonSkillReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *LoadPersonSkillReq) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *LoadPersonSkillReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *LoadPersonSkillReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ResetPersonAddPointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
}

func (x *ResetPersonAddPointReq) Reset() {
	*x = ResetPersonAddPointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPersonAddPointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonAddPointReq) ProtoMessage() {}

func (x *ResetPersonAddPointReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonAddPointReq.ProtoReflect.Descriptor instead.
func (*ResetPersonAddPointReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{29}
}

func (x *ResetPersonAddPointReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

type UnLoadPersonSkillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"` // 1 2 3pos位置
}

func (x *UnLoadPersonSkillReq) Reset() {
	*x = UnLoadPersonSkillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadPersonSkillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadPersonSkillReq) ProtoMessage() {}

func (x *UnLoadPersonSkillReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadPersonSkillReq.ProtoReflect.Descriptor instead.
func (*UnLoadPersonSkillReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{30}
}

func (x *UnLoadPersonSkillReq) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *UnLoadPersonSkillReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

// ////////////////////////////////////////////////////
type GetsPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"persons"
	Persons []*Person `protobuf:"bytes,1,rep,name=persons,proto3" json:"persons"`
}

func (x *GetsPersonRes) Reset() {
	*x = GetsPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPersonRes) ProtoMessage() {}

func (x *GetsPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPersonRes.ProtoReflect.Descriptor instead.
func (*GetsPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{31}
}

func (x *GetsPersonRes) GetPersons() []*Person {
	if x != nil {
		return x.Persons
	}
	return nil
}

type GetPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"persons"
	Person *PersonInfo `protobuf:"bytes,1,opt,name=person,proto3" json:"person"`
}

func (x *GetPersonRes) Reset() {
	*x = GetPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonRes) ProtoMessage() {}

func (x *GetPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonRes.ProtoReflect.Descriptor instead.
func (*GetPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{32}
}

func (x *GetPersonRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type DrawPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person_info"
	PersonInfo *PersonInfo `protobuf:"bytes,2,opt,name=person_info,json=personInfo,proto3" json:"person_info"`
}

func (x *DrawPersonRes) Reset() {
	*x = DrawPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawPersonRes) ProtoMessage() {}

func (x *DrawPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawPersonRes.ProtoReflect.Descriptor instead.
func (*DrawPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{33}
}

func (x *DrawPersonRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DrawPersonRes) GetPersonInfo() *PersonInfo {
	if x != nil {
		return x.PersonInfo
	}
	return nil
}

type GetPersonUpgradeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"book_count"
	BookCount int32 `protobuf:"varint,2,opt,name=book_count,json=bookCount,proto3" json:"book_count"`
	// @inject_tag: json:"upgrade_count"
	UpgradeCount int32 `protobuf:"varint,3,opt,name=upgrade_count,json=upgradeCount,proto3" json:"upgrade_count"`
}

func (x *GetPersonUpgradeRes) Reset() {
	*x = GetPersonUpgradeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonUpgradeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonUpgradeRes) ProtoMessage() {}

func (x *GetPersonUpgradeRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonUpgradeRes.ProtoReflect.Descriptor instead.
func (*GetPersonUpgradeRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{34}
}

func (x *GetPersonUpgradeRes) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *GetPersonUpgradeRes) GetBookCount() int32 {
	if x != nil {
		return x.BookCount
	}
	return 0
}

func (x *GetPersonUpgradeRes) GetUpgradeCount() int32 {
	if x != nil {
		return x.UpgradeCount
	}
	return 0
}

type UpgradePersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
	// @inject_tag: json:"book_count"
	UsedBookCount int32 `protobuf:"varint,3,opt,name=used_book_count,json=usedBookCount,proto3" json:"used_book_count"` //实际使用的经验书
	// @inject_tag: json:"upgrade_count"
	UpgradeCount int32 `protobuf:"varint,4,opt,name=upgrade_count,json=upgradeCount,proto3" json:"upgrade_count"` //升级等级
}

func (x *UpgradePersonRes) Reset() {
	*x = UpgradePersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePersonRes) ProtoMessage() {}

func (x *UpgradePersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePersonRes.ProtoReflect.Descriptor instead.
func (*UpgradePersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{35}
}

func (x *UpgradePersonRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpgradePersonRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *UpgradePersonRes) GetUsedBookCount() int32 {
	if x != nil {
		return x.UsedBookCount
	}
	return 0
}

func (x *UpgradePersonRes) GetUpgradeCount() int32 {
	if x != nil {
		return x.UpgradeCount
	}
	return 0
}

type AddPersonPointRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *AddPersonPointRes) Reset() {
	*x = AddPersonPointRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPersonPointRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPersonPointRes) ProtoMessage() {}

func (x *AddPersonPointRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPersonPointRes.ProtoReflect.Descriptor instead.
func (*AddPersonPointRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{36}
}

func (x *AddPersonPointRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AddPersonPointRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type LoadDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *LoadDeviceRes) Reset() {
	*x = LoadDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDeviceRes) ProtoMessage() {}

func (x *LoadDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDeviceRes.ProtoReflect.Descriptor instead.
func (*LoadDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{37}
}

func (x *LoadDeviceRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LoadDeviceRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type UnloadDeviceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *UnloadDeviceRes) Reset() {
	*x = UnloadDeviceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadDeviceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadDeviceRes) ProtoMessage() {}

func (x *UnloadDeviceRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadDeviceRes.ProtoReflect.Descriptor instead.
func (*UnloadDeviceRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{38}
}

func (x *UnloadDeviceRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UnloadDeviceRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type GetsPersonSoulRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"`
	// @inject_tag: json:"quality"
	Quality int32 `protobuf:"varint,2,opt,name=quality,proto3" json:"quality"` //品质 （0-全部，1-普通，2-稀有，3-史诗，4-传说）
	// @inject_tag: json:"sub_device_type"
	SubDeviceType int32 `protobuf:"varint,3,opt,name=sub_device_type,json=subDeviceType,proto3" json:"sub_device_type"` //适用的武器
	// @inject_tag: json:"unload"
	Unload bool `protobuf:"varint,4,opt,name=unload,proto3" json:"unload"` //只获取未装载的
	// @inject_tag: json:"souls"
	Souls []*PersonSoul `protobuf:"bytes,5,rep,name=souls,proto3" json:"souls"`
}

func (x *GetsPersonSoulRes) Reset() {
	*x = GetsPersonSoulRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsPersonSoulRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsPersonSoulRes) ProtoMessage() {}

func (x *GetsPersonSoulRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsPersonSoulRes.ProtoReflect.Descriptor instead.
func (*GetsPersonSoulRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{39}
}

func (x *GetsPersonSoulRes) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *GetsPersonSoulRes) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *GetsPersonSoulRes) GetSubDeviceType() int32 {
	if x != nil {
		return x.SubDeviceType
	}
	return 0
}

func (x *GetsPersonSoulRes) GetUnload() bool {
	if x != nil {
		return x.Unload
	}
	return false
}

func (x *GetsPersonSoulRes) GetSouls() []*PersonSoul {
	if x != nil {
		return x.Souls
	}
	return nil
}

type LoadSoulRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *LoadSoulRes) Reset() {
	*x = LoadSoulRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSoulRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSoulRes) ProtoMessage() {}

func (x *LoadSoulRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSoulRes.ProtoReflect.Descriptor instead.
func (*LoadSoulRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{40}
}

func (x *LoadSoulRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LoadSoulRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type UnloadSoulRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *UnloadSoulRes) Reset() {
	*x = UnloadSoulRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadSoulRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadSoulRes) ProtoMessage() {}

func (x *UnloadSoulRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadSoulRes.ProtoReflect.Descriptor instead.
func (*UnloadSoulRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{41}
}

func (x *UnloadSoulRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UnloadSoulRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type RecyclePersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *RecyclePersonRes) Reset() {
	*x = RecyclePersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclePersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclePersonRes) ProtoMessage() {}

func (x *RecyclePersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclePersonRes.ProtoReflect.Descriptor instead.
func (*RecyclePersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{42}
}

func (x *RecyclePersonRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetEducateEffectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"success"
	Success int32 `protobuf:"varint,1,opt,name=success,proto3" json:"success"` //成功概率（百分比）
	// @inject_tag: json:"properties"
	Properties map[int32]float32 `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` //增加属性
}

func (x *GetEducateEffectRes) Reset() {
	*x = GetEducateEffectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEducateEffectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEducateEffectRes) ProtoMessage() {}

func (x *GetEducateEffectRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEducateEffectRes.ProtoReflect.Descriptor instead.
func (*GetEducateEffectRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{43}
}

func (x *GetEducateEffectRes) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *GetEducateEffectRes) GetProperties() map[int32]float32 {
	if x != nil {
		return x.Properties
	}
	return nil
}

type EducateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //培养结果
	// @inject_tag: json:"properties"
	Properties map[int32]float32 `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` //增加属性
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,3,opt,name=person,proto3" json:"person"` //族人信息
}

func (x *EducateRes) Reset() {
	*x = EducateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EducateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EducateRes) ProtoMessage() {}

func (x *EducateRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EducateRes.ProtoReflect.Descriptor instead.
func (*EducateRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{44}
}

func (x *EducateRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EducateRes) GetProperties() map[int32]float32 {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *EducateRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type GenealogyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int64 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //族人ID
	// @inject_tag: json:"parent"
	Parent *Person `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent"` //父辈
	// @inject_tag: json:"brothers"
	Brothers []*Person `protobuf:"bytes,3,rep,name=brothers,proto3" json:"brothers"` //兄弟
	// @inject_tag: json:"sons"
	Sons []*Person `protobuf:"bytes,4,rep,name=sons,proto3" json:"sons"` //儿子
}

func (x *GenealogyRes) Reset() {
	*x = GenealogyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenealogyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenealogyRes) ProtoMessage() {}

func (x *GenealogyRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenealogyRes.ProtoReflect.Descriptor instead.
func (*GenealogyRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{45}
}

func (x *GenealogyRes) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *GenealogyRes) GetParent() *Person {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *GenealogyRes) GetBrothers() []*Person {
	if x != nil {
		return x.Brothers
	}
	return nil
}

func (x *GenealogyRes) GetSons() []*Person {
	if x != nil {
		return x.Sons
	}
	return nil
}

type GetLineupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"lineup"
	Lineup *LineupInfo `protobuf:"bytes,1,opt,name=lineup,proto3" json:"lineup"` //阵容
	// @inject_tag: json:"deployment"
	Deployment *Deployment `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment"` //阵法
}

func (x *GetLineupRes) Reset() {
	*x = GetLineupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLineupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLineupRes) ProtoMessage() {}

func (x *GetLineupRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLineupRes.ProtoReflect.Descriptor instead.
func (*GetLineupRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{46}
}

func (x *GetLineupRes) GetLineup() *LineupInfo {
	if x != nil {
		return x.Lineup
	}
	return nil
}

func (x *GetLineupRes) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type LineupPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"lineup"
	Lineup *LineupInfo `protobuf:"bytes,1,opt,name=lineup,proto3" json:"lineup"` //阵容
}

func (x *LineupPersonRes) Reset() {
	*x = LineupPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineupPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineupPersonRes) ProtoMessage() {}

func (x *LineupPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineupPersonRes.ProtoReflect.Descriptor instead.
func (*LineupPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{47}
}

func (x *LineupPersonRes) GetLineup() *LineupInfo {
	if x != nil {
		return x.Lineup
	}
	return nil
}

type GetsDeploymentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"deployments"
	Deployments []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments"` //阵法
}

func (x *GetsDeploymentRes) Reset() {
	*x = GetsDeploymentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsDeploymentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsDeploymentRes) ProtoMessage() {}

func (x *GetsDeploymentRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsDeploymentRes.ProtoReflect.Descriptor instead.
func (*GetsDeploymentRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{48}
}

func (x *GetsDeploymentRes) GetDeployments() []*Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

type StudySoulsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *StudySoulsRes) Reset() {
	*x = StudySoulsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudySoulsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudySoulsRes) ProtoMessage() {}

func (x *StudySoulsRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudySoulsRes.ProtoReflect.Descriptor instead.
func (*StudySoulsRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{49}
}

func (x *StudySoulsRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SwitchDeploymentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"lineup"
	Lineup *LineupInfo `protobuf:"bytes,2,opt,name=lineup,proto3" json:"lineup"` //阵容
	// @inject_tag: json:"deployment"
	Deployment *Deployment `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment"` //阵法
}

func (x *SwitchDeploymentRes) Reset() {
	*x = SwitchDeploymentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDeploymentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDeploymentRes) ProtoMessage() {}

func (x *SwitchDeploymentRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDeploymentRes.ProtoReflect.Descriptor instead.
func (*SwitchDeploymentRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{50}
}

func (x *SwitchDeploymentRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SwitchDeploymentRes) GetLineup() *LineupInfo {
	if x != nil {
		return x.Lineup
	}
	return nil
}

func (x *SwitchDeploymentRes) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type UpgradeDeploymentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"deployment"
	Deployment *Deployment `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment"` //阵法
}

func (x *UpgradeDeploymentRes) Reset() {
	*x = UpgradeDeploymentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeDeploymentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeDeploymentRes) ProtoMessage() {}

func (x *UpgradeDeploymentRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeDeploymentRes.ProtoReflect.Descriptor instead.
func (*UpgradeDeploymentRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{51}
}

func (x *UpgradeDeploymentRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpgradeDeploymentRes) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type UnlineupPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"lineup"
	Lineup *LineupInfo `protobuf:"bytes,1,opt,name=lineup,proto3" json:"lineup"` //阵容
}

func (x *UnlineupPersonRes) Reset() {
	*x = UnlineupPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlineupPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlineupPersonRes) ProtoMessage() {}

func (x *UnlineupPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlineupPersonRes.ProtoReflect.Descriptor instead.
func (*UnlineupPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{52}
}

func (x *UnlineupPersonRes) GetLineup() *LineupInfo {
	if x != nil {
		return x.Lineup
	}
	return nil
}

type ResetPersonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"` //族人
}

func (x *ResetPersonRes) Reset() {
	*x = ResetPersonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPersonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonRes) ProtoMessage() {}

func (x *ResetPersonRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonRes.ProtoReflect.Descriptor instead.
func (*ResetPersonRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{53}
}

func (x *ResetPersonRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResetPersonRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type LightSkillTreeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"` //族人
}

func (x *LightSkillTreeRes) Reset() {
	*x = LightSkillTreeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LightSkillTreeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LightSkillTreeRes) ProtoMessage() {}

func (x *LightSkillTreeRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LightSkillTreeRes.ProtoReflect.Descriptor instead.
func (*LightSkillTreeRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{54}
}

func (x *LightSkillTreeRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LightSkillTreeRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type UpgradeSkillTreeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
	// @inject_tag: json:"book_count"
	UsedBookCount int32 `protobuf:"varint,3,opt,name=used_book_count,json=usedBookCount,proto3" json:"used_book_count"` //实际使用的经验书
}

func (x *UpgradeSkillTreeRes) Reset() {
	*x = UpgradeSkillTreeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeSkillTreeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeSkillTreeRes) ProtoMessage() {}

func (x *UpgradeSkillTreeRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeSkillTreeRes.ProtoReflect.Descriptor instead.
func (*UpgradeSkillTreeRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{55}
}

func (x *UpgradeSkillTreeRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpgradeSkillTreeRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *UpgradeSkillTreeRes) GetUsedBookCount() int32 {
	if x != nil {
		return x.UsedBookCount
	}
	return 0
}

type SetInheritWordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *SetInheritWordRes) Reset() {
	*x = SetInheritWordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetInheritWordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetInheritWordRes) ProtoMessage() {}

func (x *SetInheritWordRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetInheritWordRes.ProtoReflect.Descriptor instead.
func (*SetInheritWordRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{56}
}

func (x *SetInheritWordRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type LoadPersonSkillRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *LoadPersonSkillRes) Reset() {
	*x = LoadPersonSkillRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadPersonSkillRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadPersonSkillRes) ProtoMessage() {}

func (x *LoadPersonSkillRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadPersonSkillRes.ProtoReflect.Descriptor instead.
func (*LoadPersonSkillRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{57}
}

func (x *LoadPersonSkillRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LoadPersonSkillRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type UnLoadPersonSkillRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"`
}

func (x *UnLoadPersonSkillRes) Reset() {
	*x = UnLoadPersonSkillRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLoadPersonSkillRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLoadPersonSkillRes) ProtoMessage() {}

func (x *UnLoadPersonSkillRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLoadPersonSkillRes.ProtoReflect.Descriptor instead.
func (*UnLoadPersonSkillRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{58}
}

func (x *UnLoadPersonSkillRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UnLoadPersonSkillRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type ResetPersonAddPointRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"person"
	Person *PersonInfo `protobuf:"bytes,2,opt,name=person,proto3" json:"person"` //族人
}

func (x *ResetPersonAddPointRes) Reset() {
	*x = ResetPersonAddPointRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPersonAddPointRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPersonAddPointRes) ProtoMessage() {}

func (x *ResetPersonAddPointRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPersonAddPointRes.ProtoReflect.Descriptor instead.
func (*ResetPersonAddPointRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{59}
}

func (x *ResetPersonAddPointRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ResetPersonAddPointRes) GetPerson() *PersonInfo {
	if x != nil {
		return x.Person
	}
	return nil
}

type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"deployment_id"
	DeploymentId int32 `protobuf:"varint,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id"` //阵法Id
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"` //等级
	// @inject_tag: json:"max_level"
	MaxLevel int32 `protobuf:"varint,3,opt,name=max_level,json=maxLevel,proto3" json:"max_level"` //最大等级
	// @inject_tag: json:"positions"
	Positions map[int32]*DeploymentPos `protobuf:"bytes,4,rep,name=positions,proto3" json:"positions" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //位置信息 key:pos 1-9
	// @inject_tag: json:"max_extra"
	MaxExtra map[int32]int32 `protobuf:"bytes,5,rep,name=max_extra,json=maxExtra,proto3" json:"max_extra" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //満级加成
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{60}
}

func (x *Deployment) GetDeploymentId() int32 {
	if x != nil {
		return x.DeploymentId
	}
	return 0
}

func (x *Deployment) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Deployment) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *Deployment) GetPositions() map[int32]*DeploymentPos {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *Deployment) GetMaxExtra() map[int32]int32 {
	if x != nil {
		return x.MaxExtra
	}
	return nil
}

type DeploymentPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"property_extra"
	PropertyExtra map[int32]float32 `protobuf:"bytes,1,rep,name=property_extra,json=propertyExtra,proto3" json:"property_extra" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` //属性加成
	// @inject_tag: json:"affect_extra"
	AffectExtra map[int32]float32 `protobuf:"bytes,2,rep,name=affect_extra,json=affectExtra,proto3" json:"affect_extra" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` //效果加成
}

func (x *DeploymentPos) Reset() {
	*x = DeploymentPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_person_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentPos) ProtoMessage() {}

func (x *DeploymentPos) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_person_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentPos.ProtoReflect.Descriptor instead.
func (*DeploymentPos) Descriptor() ([]byte, []int) {
	return file_pb_proto_person_proto_rawDescGZIP(), []int{61}
}

func (x *DeploymentPos) GetPropertyExtra() map[int32]float32 {
	if x != nil {
		return x.PropertyExtra
	}
	return nil
}

func (x *DeploymentPos) GetAffectExtra() map[int32]float32 {
	if x != nil {
		return x.AffectExtra
	}
	return nil
}

var File_pb_proto_person_proto protoreflect.FileDescriptor

var file_pb_proto_person_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x15, 0x70, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf1, 0x0f, 0x0a, 0x09, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x3b, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d,
	0x67, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x64, 0x72, 0x61, 0x77, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x13, 0x67, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x12, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x14, 0x61, 0x64,
	0x64, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x11, 0x61, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x41, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x13, 0x67, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x61,
	0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x3e, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x48, 0x0a, 0x14, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x6c,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x48,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x6f,
	0x75, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x6c,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x38,
	0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x41, 0x0a, 0x11, 0x6c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x13, 0x67,
	0x65, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x6f,
	0x75, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x6f, 0x75, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x6f, 0x75, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x50, 0x0a, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x47, 0x0a, 0x13, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x65,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x14, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x15, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x51, 0x0a, 0x17, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x22, 0xf1, 0x0f, 0x0a, 0x09, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x67,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x64,
	0x72, 0x61, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x48,
	0x0a, 0x14, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f,
	0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x0a, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x67,
	0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53,
	0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f,
	0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c,
	0x67, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11,
	0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f,
	0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x73, 0x6f, 0x75, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x6f, 0x75, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x6f, 0x75,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x13, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x14, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x75,
	0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x75, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x4e, 0x0a, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x68, 0x65, 0x72,
	0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x15, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x17, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x1a, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x22,
	0x2b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0d,
	0x44, 0x72, 0x61, 0x77, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e,
	0x0a, 0x10, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5,
	0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x22, 0x40,
	0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x22, 0x8a, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x55, 0x0a,
	0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x75,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x6c,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f,
	0x75, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6b,
	0x0a, 0x0a, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x61, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x45, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x6f, 0x75, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x6c, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x13, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x25, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x11, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x72, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x13, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x70, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x35, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x14, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x73, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x36,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x0d, 0x44, 0x72, 0x61, 0x77, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x75, 0x73, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x0d, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x22, 0x5d, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22,
	0xb0, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x05,
	0x73, 0x6f, 0x75, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x05, 0x73, 0x6f, 0x75,
	0x6c, 0x73, 0x22, 0x59, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x10, 0x52, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74,
	0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd7, 0x01, 0x0a,
	0x0a, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x61,
	0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x62, 0x72, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x6f, 0x6e, 0x73,
	0x22, 0x66, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x53, 0x6f, 0x75, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x91, 0x01, 0x0a, 0x13, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x6c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x3b, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x22, 0x5c, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x11, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x42, 0x6f,
	0x6f, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x49, 0x6e,
	0x68, 0x65, 0x72, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x60, 0x0a, 0x12, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x14, 0x55, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0xea, 0x02, 0x0a,
	0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x39, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x78, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x4f, 0x0a, 0x0e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d,
	0x4d, 0x61, 0x78, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x45, 0x0a, 0x0c, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x73, 0x2e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x40, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pb_proto_person_proto_rawDescOnce sync.Once
	file_pb_proto_person_proto_rawDescData = file_pb_proto_person_proto_rawDesc
)

func file_pb_proto_person_proto_rawDescGZIP() []byte {
	file_pb_proto_person_proto_rawDescOnce.Do(func() {
		file_pb_proto_person_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_proto_person_proto_rawDescData)
	})
	return file_pb_proto_person_proto_rawDescData
}

var file_pb_proto_person_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_pb_proto_person_proto_goTypes = []interface{}{
	(*PersonReq)(nil),              // 0: pb.PersonReq
	(*PersonRes)(nil),              // 1: pb.PersonRes
	(*GetsPersonReq)(nil),          // 2: pb.GetsPersonReq
	(*GetPersonReq)(nil),           // 3: pb.GetPersonReq
	(*DrawPersonReq)(nil),          // 4: pb.DrawPersonReq
	(*GetPersonUpgradeReq)(nil),    // 5: pb.GetPersonUpgradeReq
	(*UpgradePersonReq)(nil),       // 6: pb.UpgradePersonReq
	(*AddPersonPointReq)(nil),      // 7: pb.AddPersonPointReq
	(*LoadDeviceReq)(nil),          // 8: pb.LoadDeviceReq
	(*UnloadDeviceReq)(nil),        // 9: pb.UnloadDeviceReq
	(*GetsPersonSoulReq)(nil),      // 10: pb.GetsPersonSoulReq
	(*LoadSoulReq)(nil),            // 11: pb.LoadSoulReq
	(*UnloadSoulReq)(nil),          // 12: pb.UnloadSoulReq
	(*RecyclePersonReq)(nil),       // 13: pb.RecyclePersonReq
	(*GetEducateEffectReq)(nil),    // 14: pb.GetEducateEffectReq
	(*EducateReq)(nil),             // 15: pb.EducateReq
	(*GenealogyReq)(nil),           // 16: pb.GenealogyReq
	(*GetLineupReq)(nil),           // 17: pb.GetLineupReq
	(*LineupPersonReq)(nil),        // 18: pb.LineupPersonReq
	(*GetsDeploymentReq)(nil),      // 19: pb.GetsDeploymentReq
	(*StudySoulsReq)(nil),          // 20: pb.StudySoulsReq
	(*SwitchDeploymentReq)(nil),    // 21: pb.SwitchDeploymentReq
	(*UpgradeDeploymentReq)(nil),   // 22: pb.UpgradeDeploymentReq
	(*UnlineupPersonReq)(nil),      // 23: pb.UnlineupPersonReq
	(*ResetPersonReq)(nil),         // 24: pb.ResetPersonReq
	(*LightSkillTreeReq)(nil),      // 25: pb.LightSkillTreeReq
	(*UpgradeSkillTreeReq)(nil),    // 26: pb.UpgradeSkillTreeReq
	(*SetInheritWordReq)(nil),      // 27: pb.SetInheritWordReq
	(*LoadPersonSkillReq)(nil),     // 28: pb.LoadPersonSkillReq
	(*ResetPersonAddPointReq)(nil), // 29: pb.ResetPersonAddPointReq
	(*UnLoadPersonSkillReq)(nil),   // 30: pb.UnLoadPersonSkillReq
	(*GetsPersonRes)(nil),          // 31: pb.GetsPersonRes
	(*GetPersonRes)(nil),           // 32: pb.GetPersonRes
	(*DrawPersonRes)(nil),          // 33: pb.DrawPersonRes
	(*GetPersonUpgradeRes)(nil),    // 34: pb.GetPersonUpgradeRes
	(*UpgradePersonRes)(nil),       // 35: pb.UpgradePersonRes
	(*AddPersonPointRes)(nil),      // 36: pb.AddPersonPointRes
	(*LoadDeviceRes)(nil),          // 37: pb.LoadDeviceRes
	(*UnloadDeviceRes)(nil),        // 38: pb.UnloadDeviceRes
	(*GetsPersonSoulRes)(nil),      // 39: pb.GetsPersonSoulRes
	(*LoadSoulRes)(nil),            // 40: pb.LoadSoulRes
	(*UnloadSoulRes)(nil),          // 41: pb.UnloadSoulRes
	(*RecyclePersonRes)(nil),       // 42: pb.RecyclePersonRes
	(*GetEducateEffectRes)(nil),    // 43: pb.GetEducateEffectRes
	(*EducateRes)(nil),             // 44: pb.EducateRes
	(*GenealogyRes)(nil),           // 45: pb.GenealogyRes
	(*GetLineupRes)(nil),           // 46: pb.GetLineupRes
	(*LineupPersonRes)(nil),        // 47: pb.LineupPersonRes
	(*GetsDeploymentRes)(nil),      // 48: pb.GetsDeploymentRes
	(*StudySoulsRes)(nil),          // 49: pb.StudySoulsRes
	(*SwitchDeploymentRes)(nil),    // 50: pb.SwitchDeploymentRes
	(*UpgradeDeploymentRes)(nil),   // 51: pb.UpgradeDeploymentRes
	(*UnlineupPersonRes)(nil),      // 52: pb.UnlineupPersonRes
	(*ResetPersonRes)(nil),         // 53: pb.ResetPersonRes
	(*LightSkillTreeRes)(nil),      // 54: pb.LightSkillTreeRes
	(*UpgradeSkillTreeRes)(nil),    // 55: pb.UpgradeSkillTreeRes
	(*SetInheritWordRes)(nil),      // 56: pb.SetInheritWordRes
	(*LoadPersonSkillRes)(nil),     // 57: pb.LoadPersonSkillRes
	(*UnLoadPersonSkillRes)(nil),   // 58: pb.UnLoadPersonSkillRes
	(*ResetPersonAddPointRes)(nil), // 59: pb.ResetPersonAddPointRes
	(*Deployment)(nil),             // 60: pb.Deployment
	(*DeploymentPos)(nil),          // 61: pb.DeploymentPos
	nil,                            // 62: pb.AddPersonPointReq.PointsEntry
	nil,                            // 63: pb.GetEducateEffectRes.PropertiesEntry
	nil,                            // 64: pb.EducateRes.PropertiesEntry
	nil,                            // 65: pb.Deployment.PositionsEntry
	nil,                            // 66: pb.Deployment.MaxExtraEntry
	nil,                            // 67: pb.DeploymentPos.PropertyExtraEntry
	nil,                            // 68: pb.DeploymentPos.AffectExtraEntry
	(*Person)(nil),                 // 69: pb.Person
	(*PersonInfo)(nil),             // 70: pb.PersonInfo
	(*Result)(nil),                 // 71: pb.Result
	(*PersonSoul)(nil),             // 72: pb.PersonSoul
	(*LineupInfo)(nil),             // 73: pb.LineupInfo
}
var file_pb_proto_person_proto_depIdxs = []int32{
	2,   // 0: pb.PersonReq.gets_person_req:type_name -> pb.GetsPersonReq
	3,   // 1: pb.PersonReq.get_person_req:type_name -> pb.GetPersonReq
	4,   // 2: pb.PersonReq.draw_person_req:type_name -> pb.DrawPersonReq
	5,   // 3: pb.PersonReq.get_person_upgrade_req:type_name -> pb.GetPersonUpgradeReq
	6,   // 4: pb.PersonReq.upgrade_person_req:type_name -> pb.UpgradePersonReq
	7,   // 5: pb.PersonReq.add_person_point_req:type_name -> pb.AddPersonPointReq
	8,   // 6: pb.PersonReq.load_device_req:type_name -> pb.LoadDeviceReq
	9,   // 7: pb.PersonReq.unload_device_req:type_name -> pb.UnloadDeviceReq
	14,  // 8: pb.PersonReq.get_educate_effect_req:type_name -> pb.GetEducateEffectReq
	15,  // 9: pb.PersonReq.educate_req:type_name -> pb.EducateReq
	16,  // 10: pb.PersonReq.genealogy_req:type_name -> pb.GenealogyReq
	24,  // 11: pb.PersonReq.reset_person_req:type_name -> pb.ResetPersonReq
	25,  // 12: pb.PersonReq.light_skill_tree_req:type_name -> pb.LightSkillTreeReq
	11,  // 13: pb.PersonReq.load_soul_req:type_name -> pb.LoadSoulReq
	12,  // 14: pb.PersonReq.unload_soul_req:type_name -> pb.UnloadSoulReq
	10,  // 15: pb.PersonReq.gets_person_soul_req:type_name -> pb.GetsPersonSoulReq
	13,  // 16: pb.PersonReq.recycle_person_req:type_name -> pb.RecyclePersonReq
	17,  // 17: pb.PersonReq.get_lineup_req:type_name -> pb.GetLineupReq
	18,  // 18: pb.PersonReq.lineup_person_req:type_name -> pb.LineupPersonReq
	19,  // 19: pb.PersonReq.gets_deployment_req:type_name -> pb.GetsDeploymentReq
	20,  // 20: pb.PersonReq.study_souls_req:type_name -> pb.StudySoulsReq
	21,  // 21: pb.PersonReq.switch_deployment_req:type_name -> pb.SwitchDeploymentReq
	22,  // 22: pb.PersonReq.upgrade_deployment_req:type_name -> pb.UpgradeDeploymentReq
	23,  // 23: pb.PersonReq.unlineup_person_req:type_name -> pb.UnlineupPersonReq
	26,  // 24: pb.PersonReq.upgrade_skill_tree_req:type_name -> pb.UpgradeSkillTreeReq
	27,  // 25: pb.PersonReq.set_inherit_word_req:type_name -> pb.SetInheritWordReq
	28,  // 26: pb.PersonReq.load_person_skill_req:type_name -> pb.LoadPersonSkillReq
	30,  // 27: pb.PersonReq.unload_person_skill_req:type_name -> pb.UnLoadPersonSkillReq
	29,  // 28: pb.PersonReq.reset_person_add_point_req:type_name -> pb.ResetPersonAddPointReq
	31,  // 29: pb.PersonRes.gets_person_res:type_name -> pb.GetsPersonRes
	32,  // 30: pb.PersonRes.get_person_res:type_name -> pb.GetPersonRes
	33,  // 31: pb.PersonRes.draw_person_res:type_name -> pb.DrawPersonRes
	34,  // 32: pb.PersonRes.get_person_upgrade_res:type_name -> pb.GetPersonUpgradeRes
	35,  // 33: pb.PersonRes.upgrade_person_res:type_name -> pb.UpgradePersonRes
	36,  // 34: pb.PersonRes.add_person_point_res:type_name -> pb.AddPersonPointRes
	37,  // 35: pb.PersonRes.load_device_res:type_name -> pb.LoadDeviceRes
	38,  // 36: pb.PersonRes.unload_device_res:type_name -> pb.UnloadDeviceRes
	43,  // 37: pb.PersonRes.get_educate_effect_res:type_name -> pb.GetEducateEffectRes
	44,  // 38: pb.PersonRes.educate_res:type_name -> pb.EducateRes
	45,  // 39: pb.PersonRes.genealogy_res:type_name -> pb.GenealogyRes
	53,  // 40: pb.PersonRes.reset_person_res:type_name -> pb.ResetPersonRes
	54,  // 41: pb.PersonRes.light_skill_tree_res:type_name -> pb.LightSkillTreeRes
	40,  // 42: pb.PersonRes.load_soul_res:type_name -> pb.LoadSoulRes
	41,  // 43: pb.PersonRes.unload_soul_res:type_name -> pb.UnloadSoulRes
	39,  // 44: pb.PersonRes.gets_person_soul_res:type_name -> pb.GetsPersonSoulRes
	42,  // 45: pb.PersonRes.recycle_person_res:type_name -> pb.RecyclePersonRes
	46,  // 46: pb.PersonRes.get_lineup_res:type_name -> pb.GetLineupRes
	47,  // 47: pb.PersonRes.lineup_person_res:type_name -> pb.LineupPersonRes
	48,  // 48: pb.PersonRes.gets_deployment_res:type_name -> pb.GetsDeploymentRes
	49,  // 49: pb.PersonRes.study_souls_res:type_name -> pb.StudySoulsRes
	50,  // 50: pb.PersonRes.switch_deployment_res:type_name -> pb.SwitchDeploymentRes
	51,  // 51: pb.PersonRes.upgrade_deployment_res:type_name -> pb.UpgradeDeploymentRes
	52,  // 52: pb.PersonRes.unlineup_person_res:type_name -> pb.UnlineupPersonRes
	55,  // 53: pb.PersonRes.upgrade_skill_tree_res:type_name -> pb.UpgradeSkillTreeRes
	56,  // 54: pb.PersonRes.set_inherit_word_res:type_name -> pb.SetInheritWordRes
	57,  // 55: pb.PersonRes.load_person_skill_res:type_name -> pb.LoadPersonSkillRes
	58,  // 56: pb.PersonRes.unload_person_skill_res:type_name -> pb.UnLoadPersonSkillRes
	59,  // 57: pb.PersonRes.reset_person_add_point_res:type_name -> pb.ResetPersonAddPointRes
	62,  // 58: pb.AddPersonPointReq.points:type_name -> pb.AddPersonPointReq.PointsEntry
	69,  // 59: pb.GetsPersonRes.persons:type_name -> pb.Person
	70,  // 60: pb.GetPersonRes.person:type_name -> pb.PersonInfo
	71,  // 61: pb.DrawPersonRes.result:type_name -> pb.Result
	70,  // 62: pb.DrawPersonRes.person_info:type_name -> pb.PersonInfo
	71,  // 63: pb.UpgradePersonRes.result:type_name -> pb.Result
	70,  // 64: pb.UpgradePersonRes.person:type_name -> pb.PersonInfo
	71,  // 65: pb.AddPersonPointRes.result:type_name -> pb.Result
	70,  // 66: pb.AddPersonPointRes.person:type_name -> pb.PersonInfo
	71,  // 67: pb.LoadDeviceRes.result:type_name -> pb.Result
	70,  // 68: pb.LoadDeviceRes.person:type_name -> pb.PersonInfo
	71,  // 69: pb.UnloadDeviceRes.result:type_name -> pb.Result
	70,  // 70: pb.UnloadDeviceRes.person:type_name -> pb.PersonInfo
	72,  // 71: pb.GetsPersonSoulRes.souls:type_name -> pb.PersonSoul
	71,  // 72: pb.LoadSoulRes.result:type_name -> pb.Result
	70,  // 73: pb.LoadSoulRes.person:type_name -> pb.PersonInfo
	71,  // 74: pb.UnloadSoulRes.result:type_name -> pb.Result
	70,  // 75: pb.UnloadSoulRes.person:type_name -> pb.PersonInfo
	71,  // 76: pb.RecyclePersonRes.result:type_name -> pb.Result
	63,  // 77: pb.GetEducateEffectRes.properties:type_name -> pb.GetEducateEffectRes.PropertiesEntry
	71,  // 78: pb.EducateRes.result:type_name -> pb.Result
	64,  // 79: pb.EducateRes.properties:type_name -> pb.EducateRes.PropertiesEntry
	70,  // 80: pb.EducateRes.person:type_name -> pb.PersonInfo
	69,  // 81: pb.GenealogyRes.parent:type_name -> pb.Person
	69,  // 82: pb.GenealogyRes.brothers:type_name -> pb.Person
	69,  // 83: pb.GenealogyRes.sons:type_name -> pb.Person
	73,  // 84: pb.GetLineupRes.lineup:type_name -> pb.LineupInfo
	60,  // 85: pb.GetLineupRes.deployment:type_name -> pb.Deployment
	73,  // 86: pb.LineupPersonRes.lineup:type_name -> pb.LineupInfo
	60,  // 87: pb.GetsDeploymentRes.deployments:type_name -> pb.Deployment
	71,  // 88: pb.StudySoulsRes.result:type_name -> pb.Result
	71,  // 89: pb.SwitchDeploymentRes.result:type_name -> pb.Result
	73,  // 90: pb.SwitchDeploymentRes.lineup:type_name -> pb.LineupInfo
	60,  // 91: pb.SwitchDeploymentRes.deployment:type_name -> pb.Deployment
	71,  // 92: pb.UpgradeDeploymentRes.result:type_name -> pb.Result
	60,  // 93: pb.UpgradeDeploymentRes.deployment:type_name -> pb.Deployment
	73,  // 94: pb.UnlineupPersonRes.lineup:type_name -> pb.LineupInfo
	71,  // 95: pb.ResetPersonRes.result:type_name -> pb.Result
	70,  // 96: pb.ResetPersonRes.person:type_name -> pb.PersonInfo
	71,  // 97: pb.LightSkillTreeRes.result:type_name -> pb.Result
	70,  // 98: pb.LightSkillTreeRes.person:type_name -> pb.PersonInfo
	71,  // 99: pb.UpgradeSkillTreeRes.result:type_name -> pb.Result
	70,  // 100: pb.UpgradeSkillTreeRes.person:type_name -> pb.PersonInfo
	71,  // 101: pb.SetInheritWordRes.result:type_name -> pb.Result
	71,  // 102: pb.LoadPersonSkillRes.result:type_name -> pb.Result
	70,  // 103: pb.LoadPersonSkillRes.person:type_name -> pb.PersonInfo
	71,  // 104: pb.UnLoadPersonSkillRes.result:type_name -> pb.Result
	70,  // 105: pb.UnLoadPersonSkillRes.person:type_name -> pb.PersonInfo
	71,  // 106: pb.ResetPersonAddPointRes.result:type_name -> pb.Result
	70,  // 107: pb.ResetPersonAddPointRes.person:type_name -> pb.PersonInfo
	65,  // 108: pb.Deployment.positions:type_name -> pb.Deployment.PositionsEntry
	66,  // 109: pb.Deployment.max_extra:type_name -> pb.Deployment.MaxExtraEntry
	67,  // 110: pb.DeploymentPos.property_extra:type_name -> pb.DeploymentPos.PropertyExtraEntry
	68,  // 111: pb.DeploymentPos.affect_extra:type_name -> pb.DeploymentPos.AffectExtraEntry
	61,  // 112: pb.Deployment.PositionsEntry.value:type_name -> pb.DeploymentPos
	113, // [113:113] is the sub-list for method output_type
	113, // [113:113] is the sub-list for method input_type
	113, // [113:113] is the sub-list for extension type_name
	113, // [113:113] is the sub-list for extension extendee
	0,   // [0:113] is the sub-list for field type_name
}

func init() { file_pb_proto_person_proto_init() }
func file_pb_proto_person_proto_init() {
	if File_pb_proto_person_proto != nil {
		return
	}
	file_pb_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_proto_person_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPersonPointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadDeviceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPersonSoulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSoulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadSoulReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecyclePersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEducateEffectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EducateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenealogyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLineupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineupPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudySoulsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlineupPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPersonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightSkillTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeSkillTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInheritWordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadPersonSkillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPersonAddPointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadPersonSkillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonUpgradeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPersonPointRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadDeviceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsPersonSoulRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSoulRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadSoulRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecyclePersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEducateEffectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EducateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenealogyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLineupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineupPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsDeploymentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudySoulsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDeploymentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeDeploymentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlineupPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPersonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LightSkillTreeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeSkillTreeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetInheritWordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadPersonSkillRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLoadPersonSkillRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPersonAddPointRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_person_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_proto_person_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PersonReq_GetsPersonReq)(nil),
		(*PersonReq_GetPersonReq)(nil),
		(*PersonReq_DrawPersonReq)(nil),
		(*PersonReq_GetPersonUpgradeReq)(nil),
		(*PersonReq_UpgradePersonReq)(nil),
		(*PersonReq_AddPersonPointReq)(nil),
		(*PersonReq_LoadDeviceReq)(nil),
		(*PersonReq_UnloadDeviceReq)(nil),
		(*PersonReq_GetEducateEffectReq)(nil),
		(*PersonReq_EducateReq)(nil),
		(*PersonReq_GenealogyReq)(nil),
		(*PersonReq_ResetPersonReq)(nil),
		(*PersonReq_LightSkillTreeReq)(nil),
		(*PersonReq_LoadSoulReq)(nil),
		(*PersonReq_UnloadSoulReq)(nil),
		(*PersonReq_GetsPersonSoulReq)(nil),
		(*PersonReq_RecyclePersonReq)(nil),
		(*PersonReq_GetLineupReq)(nil),
		(*PersonReq_LineupPersonReq)(nil),
		(*PersonReq_GetsDeploymentReq)(nil),
		(*PersonReq_StudySoulsReq)(nil),
		(*PersonReq_SwitchDeploymentReq)(nil),
		(*PersonReq_UpgradeDeploymentReq)(nil),
		(*PersonReq_UnlineupPersonReq)(nil),
		(*PersonReq_UpgradeSkillTreeReq)(nil),
		(*PersonReq_SetInheritWordReq)(nil),
		(*PersonReq_LoadPersonSkillReq)(nil),
		(*PersonReq_UnloadPersonSkillReq)(nil),
		(*PersonReq_ResetPersonAddPointReq)(nil),
	}
	file_pb_proto_person_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PersonRes_GetsPersonRes)(nil),
		(*PersonRes_GetPersonRes)(nil),
		(*PersonRes_DrawPersonRes)(nil),
		(*PersonRes_GetPersonUpgradeRes)(nil),
		(*PersonRes_UpgradePersonRes)(nil),
		(*PersonRes_AddPersonPointRes)(nil),
		(*PersonRes_LoadDeviceRes)(nil),
		(*PersonRes_UnloadDeviceRes)(nil),
		(*PersonRes_GetEducateEffectRes)(nil),
		(*PersonRes_EducateRes)(nil),
		(*PersonRes_GenealogyRes)(nil),
		(*PersonRes_ResetPersonRes)(nil),
		(*PersonRes_LightSkillTreeRes)(nil),
		(*PersonRes_LoadSoulRes)(nil),
		(*PersonRes_UnloadSoulRes)(nil),
		(*PersonRes_GetsPersonSoulRes)(nil),
		(*PersonRes_RecyclePersonRes)(nil),
		(*PersonRes_GetLineupRes)(nil),
		(*PersonRes_LineupPersonRes)(nil),
		(*PersonRes_GetsDeploymentRes)(nil),
		(*PersonRes_StudySoulsRes)(nil),
		(*PersonRes_SwitchDeploymentRes)(nil),
		(*PersonRes_UpgradeDeploymentRes)(nil),
		(*PersonRes_UnlineupPersonRes)(nil),
		(*PersonRes_UpgradeSkillTreeRes)(nil),
		(*PersonRes_SetInheritWordRes)(nil),
		(*PersonRes_LoadPersonSkillRes)(nil),
		(*PersonRes_UnloadPersonSkillRes)(nil),
		(*PersonRes_ResetPersonAddPointRes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_proto_person_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_proto_person_proto_goTypes,
		DependencyIndexes: file_pb_proto_person_proto_depIdxs,
		MessageInfos:      file_pb_proto_person_proto_msgTypes,
	}.Build()
	File_pb_proto_person_proto = out.File
	file_pb_proto_person_proto_rawDesc = nil
	file_pb_proto_person_proto_goTypes = nil
	file_pb_proto_person_proto_depIdxs = nil
}
