// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: pb/proto/land.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EffectType int32

const (
	EffectType_Hurt EffectType = 0 //伤害
	EffectType_Heal EffectType = 1 //冶疗
)

// Enum value maps for EffectType.
var (
	EffectType_name = map[int32]string{
		0: "Hurt",
		1: "Heal",
	}
	EffectType_value = map[string]int32{
		"Hurt": 0,
		"Heal": 1,
	}
)

func (x EffectType) Enum() *EffectType {
	p := new(EffectType)
	*p = x
	return p
}

func (x EffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_proto_land_proto_enumTypes[0].Descriptor()
}

func (EffectType) Type() protoreflect.EnumType {
	return &file_pb_proto_land_proto_enumTypes[0]
}

func (x EffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EffectType.Descriptor instead.
func (EffectType) EnumDescriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{0}
}

type LandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*LandReq_EnterLandReq
	//	*LandReq_ExitLandReq
	//	*LandReq_ScanLandReq
	//	*LandReq_SetTradeDestReq
	//	*LandReq_GotoTradeDestReq
	//	*LandReq_DeclareWarReq
	//	*LandReq_GotoWarReq
	//	*LandReq_StopWarReq
	//	*LandReq_PurchaseCargoReq
	//	*LandReq_SaleCargoReq
	//	*LandReq_GetsCityBankReq
	//	*LandReq_InvestReq
	//	*LandReq_EscapeReq
	//	*LandReq_GetsCityCommodityReq
	//	*LandReq_GetsCityPurchaseReq
	//	*LandReq_UnsetTradeDestReq
	//	*LandReq_CreateLandBuildReq
	//	*LandReq_UpgradeLandBuildReq
	//	*LandReq_MergeLandBuildReq
	//	*LandReq_DeleteLandBuildReq
	//	*LandReq_PlayerFightReportListReq
	//	*LandReq_PlayerFightReportByFightIdReq
	Req isLandReq_Req `protobuf_oneof:"req"`
}

func (x *LandReq) Reset() {
	*x = LandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandReq) ProtoMessage() {}

func (x *LandReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandReq.ProtoReflect.Descriptor instead.
func (*LandReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{0}
}

func (m *LandReq) GetReq() isLandReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *LandReq) GetEnterLandReq() *EnterLandReq {
	if x, ok := x.GetReq().(*LandReq_EnterLandReq); ok {
		return x.EnterLandReq
	}
	return nil
}

func (x *LandReq) GetExitLandReq() *ExitLandReq {
	if x, ok := x.GetReq().(*LandReq_ExitLandReq); ok {
		return x.ExitLandReq
	}
	return nil
}

func (x *LandReq) GetScanLandReq() *ScanLandReq {
	if x, ok := x.GetReq().(*LandReq_ScanLandReq); ok {
		return x.ScanLandReq
	}
	return nil
}

func (x *LandReq) GetSetTradeDestReq() *SetTradeDestReq {
	if x, ok := x.GetReq().(*LandReq_SetTradeDestReq); ok {
		return x.SetTradeDestReq
	}
	return nil
}

func (x *LandReq) GetGotoTradeDestReq() *GotoTradeDestReq {
	if x, ok := x.GetReq().(*LandReq_GotoTradeDestReq); ok {
		return x.GotoTradeDestReq
	}
	return nil
}

func (x *LandReq) GetDeclareWarReq() *DeclareWarReq {
	if x, ok := x.GetReq().(*LandReq_DeclareWarReq); ok {
		return x.DeclareWarReq
	}
	return nil
}

func (x *LandReq) GetGotoWarReq() *GotoWarReq {
	if x, ok := x.GetReq().(*LandReq_GotoWarReq); ok {
		return x.GotoWarReq
	}
	return nil
}

func (x *LandReq) GetStopWarReq() *StopWarReq {
	if x, ok := x.GetReq().(*LandReq_StopWarReq); ok {
		return x.StopWarReq
	}
	return nil
}

func (x *LandReq) GetPurchaseCargoReq() *PurchaseCargoReq {
	if x, ok := x.GetReq().(*LandReq_PurchaseCargoReq); ok {
		return x.PurchaseCargoReq
	}
	return nil
}

func (x *LandReq) GetSaleCargoReq() *SaleCargoReq {
	if x, ok := x.GetReq().(*LandReq_SaleCargoReq); ok {
		return x.SaleCargoReq
	}
	return nil
}

func (x *LandReq) GetGetsCityBankReq() *GetsCityBankReq {
	if x, ok := x.GetReq().(*LandReq_GetsCityBankReq); ok {
		return x.GetsCityBankReq
	}
	return nil
}

func (x *LandReq) GetInvestReq() *InvestReq {
	if x, ok := x.GetReq().(*LandReq_InvestReq); ok {
		return x.InvestReq
	}
	return nil
}

func (x *LandReq) GetEscapeReq() *EscapeReq {
	if x, ok := x.GetReq().(*LandReq_EscapeReq); ok {
		return x.EscapeReq
	}
	return nil
}

func (x *LandReq) GetGetsCityCommodityReq() *GetsCityCommodityReq {
	if x, ok := x.GetReq().(*LandReq_GetsCityCommodityReq); ok {
		return x.GetsCityCommodityReq
	}
	return nil
}

func (x *LandReq) GetGetsCityPurchaseReq() *GetsCityPurchaseReq {
	if x, ok := x.GetReq().(*LandReq_GetsCityPurchaseReq); ok {
		return x.GetsCityPurchaseReq
	}
	return nil
}

func (x *LandReq) GetUnsetTradeDestReq() *UnsetTradeDestReq {
	if x, ok := x.GetReq().(*LandReq_UnsetTradeDestReq); ok {
		return x.UnsetTradeDestReq
	}
	return nil
}

func (x *LandReq) GetCreateLandBuildReq() *CreateLandBuildReq {
	if x, ok := x.GetReq().(*LandReq_CreateLandBuildReq); ok {
		return x.CreateLandBuildReq
	}
	return nil
}

func (x *LandReq) GetUpgradeLandBuildReq() *UpgradeLandBuildReq {
	if x, ok := x.GetReq().(*LandReq_UpgradeLandBuildReq); ok {
		return x.UpgradeLandBuildReq
	}
	return nil
}

func (x *LandReq) GetMergeLandBuildReq() *MergeLandBuildReq {
	if x, ok := x.GetReq().(*LandReq_MergeLandBuildReq); ok {
		return x.MergeLandBuildReq
	}
	return nil
}

func (x *LandReq) GetDeleteLandBuildReq() *DeleteLandBuildReq {
	if x, ok := x.GetReq().(*LandReq_DeleteLandBuildReq); ok {
		return x.DeleteLandBuildReq
	}
	return nil
}

func (x *LandReq) GetPlayerFightReportListReq() *PlayerFightReportListReq {
	if x, ok := x.GetReq().(*LandReq_PlayerFightReportListReq); ok {
		return x.PlayerFightReportListReq
	}
	return nil
}

func (x *LandReq) GetPlayerFightReportByFightIdReq() *PlayerFightReportByFightIdReq {
	if x, ok := x.GetReq().(*LandReq_PlayerFightReportByFightIdReq); ok {
		return x.PlayerFightReportByFightIdReq
	}
	return nil
}

type isLandReq_Req interface {
	isLandReq_Req()
}

type LandReq_EnterLandReq struct {
	EnterLandReq *EnterLandReq `protobuf:"bytes,1,opt,name=enter_land_req,json=enterLandReq,proto3,oneof"` //进入大陆
}

type LandReq_ExitLandReq struct {
	ExitLandReq *ExitLandReq `protobuf:"bytes,2,opt,name=exit_land_req,json=exitLandReq,proto3,oneof"` //离开大陆
}

type LandReq_ScanLandReq struct {
	ScanLandReq *ScanLandReq `protobuf:"bytes,3,opt,name=scan_land_req,json=scanLandReq,proto3,oneof"` //大陆
}

type LandReq_SetTradeDestReq struct {
	SetTradeDestReq *SetTradeDestReq `protobuf:"bytes,4,opt,name=set_trade_dest_req,json=setTradeDestReq,proto3,oneof"` //设置贸易目的城市
}

type LandReq_GotoTradeDestReq struct {
	GotoTradeDestReq *GotoTradeDestReq `protobuf:"bytes,5,opt,name=goto_trade_dest_req,json=gotoTradeDestReq,proto3,oneof"` //出发去目的城市
}

type LandReq_DeclareWarReq struct {
	DeclareWarReq *DeclareWarReq `protobuf:"bytes,6,opt,name=declare_war_req,json=declareWarReq,proto3,oneof"` // 宣战
}

type LandReq_GotoWarReq struct {
	GotoWarReq *GotoWarReq `protobuf:"bytes,7,opt,name=goto_war_req,json=gotoWarReq,proto3,oneof"` //出征
}

type LandReq_StopWarReq struct {
	StopWarReq *StopWarReq `protobuf:"bytes,8,opt,name=stop_war_req,json=stopWarReq,proto3,oneof"` //停战
}

type LandReq_PurchaseCargoReq struct {
	PurchaseCargoReq *PurchaseCargoReq `protobuf:"bytes,9,opt,name=purchase_cargo_req,json=purchaseCargoReq,proto3,oneof"` //购入货物
}

type LandReq_SaleCargoReq struct {
	SaleCargoReq *SaleCargoReq `protobuf:"bytes,10,opt,name=sale_cargo_req,json=saleCargoReq,proto3,oneof"` //售卖货物
}

type LandReq_GetsCityBankReq struct {
	GetsCityBankReq *GetsCityBankReq `protobuf:"bytes,11,opt,name=gets_city_bank_req,json=getsCityBankReq,proto3,oneof"` //获取城市银行
}

type LandReq_InvestReq struct {
	InvestReq *InvestReq `protobuf:"bytes,12,opt,name=invest_req,json=investReq,proto3,oneof"` //投资
}

type LandReq_EscapeReq struct {
	EscapeReq *EscapeReq `protobuf:"bytes,13,opt,name=escape_req,json=escapeReq,proto3,oneof"` //逃跑
}

type LandReq_GetsCityCommodityReq struct {
	GetsCityCommodityReq *GetsCityCommodityReq `protobuf:"bytes,14,opt,name=gets_city_commodity_req,json=getsCityCommodityReq,proto3,oneof"` //获取城市商品
}

type LandReq_GetsCityPurchaseReq struct {
	GetsCityPurchaseReq *GetsCityPurchaseReq `protobuf:"bytes,15,opt,name=gets_city_purchase_req,json=getsCityPurchaseReq,proto3,oneof"` //获取城市收购品
}

type LandReq_UnsetTradeDestReq struct {
	UnsetTradeDestReq *UnsetTradeDestReq `protobuf:"bytes,16,opt,name=unset_trade_dest_req,json=unsetTradeDestReq,proto3,oneof"` //取消设置贸易目的城市
}

type LandReq_CreateLandBuildReq struct {
	CreateLandBuildReq *CreateLandBuildReq `protobuf:"bytes,17,opt,name=create_land_build_req,json=createLandBuildReq,proto3,oneof"` //建造建筑
}

type LandReq_UpgradeLandBuildReq struct {
	UpgradeLandBuildReq *UpgradeLandBuildReq `protobuf:"bytes,18,opt,name=upgrade_land_build_req,json=upgradeLandBuildReq,proto3,oneof"` //升级建筑
}

type LandReq_MergeLandBuildReq struct {
	MergeLandBuildReq *MergeLandBuildReq `protobuf:"bytes,19,opt,name=merge_land_build_req,json=mergeLandBuildReq,proto3,oneof"` //合并建筑
}

type LandReq_DeleteLandBuildReq struct {
	DeleteLandBuildReq *DeleteLandBuildReq `protobuf:"bytes,20,opt,name=delete_land_build_req,json=deleteLandBuildReq,proto3,oneof"` //拆除建筑
}

type LandReq_PlayerFightReportListReq struct {
	PlayerFightReportListReq *PlayerFightReportListReq `protobuf:"bytes,21,opt,name=player_fight_report_list_req,json=playerFightReportListReq,proto3,oneof"` //获取用户战报列表
}

type LandReq_PlayerFightReportByFightIdReq struct {
	PlayerFightReportByFightIdReq *PlayerFightReportByFightIdReq `protobuf:"bytes,22,opt,name=player_fight_report_by_fight_id_req,json=playerFightReportByFightIdReq,proto3,oneof"` //获取单条用户战报内容
}

func (*LandReq_EnterLandReq) isLandReq_Req() {}

func (*LandReq_ExitLandReq) isLandReq_Req() {}

func (*LandReq_ScanLandReq) isLandReq_Req() {}

func (*LandReq_SetTradeDestReq) isLandReq_Req() {}

func (*LandReq_GotoTradeDestReq) isLandReq_Req() {}

func (*LandReq_DeclareWarReq) isLandReq_Req() {}

func (*LandReq_GotoWarReq) isLandReq_Req() {}

func (*LandReq_StopWarReq) isLandReq_Req() {}

func (*LandReq_PurchaseCargoReq) isLandReq_Req() {}

func (*LandReq_SaleCargoReq) isLandReq_Req() {}

func (*LandReq_GetsCityBankReq) isLandReq_Req() {}

func (*LandReq_InvestReq) isLandReq_Req() {}

func (*LandReq_EscapeReq) isLandReq_Req() {}

func (*LandReq_GetsCityCommodityReq) isLandReq_Req() {}

func (*LandReq_GetsCityPurchaseReq) isLandReq_Req() {}

func (*LandReq_UnsetTradeDestReq) isLandReq_Req() {}

func (*LandReq_CreateLandBuildReq) isLandReq_Req() {}

func (*LandReq_UpgradeLandBuildReq) isLandReq_Req() {}

func (*LandReq_MergeLandBuildReq) isLandReq_Req() {}

func (*LandReq_DeleteLandBuildReq) isLandReq_Req() {}

func (*LandReq_PlayerFightReportListReq) isLandReq_Req() {}

func (*LandReq_PlayerFightReportByFightIdReq) isLandReq_Req() {}

type LandRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//
	//	*LandRes_EnterLandRes
	//	*LandRes_ExitLandRes
	//	*LandRes_ScanLandRes
	//	*LandRes_SetTradeDestRes
	//	*LandRes_GotoTradeDestRes
	//	*LandRes_DeclareWarRes
	//	*LandRes_GotoWarRes
	//	*LandRes_StopWarRes
	//	*LandRes_PurchaseCargoRes
	//	*LandRes_SaleCargoRes
	//	*LandRes_GetsCityBankRes
	//	*LandRes_InvestRes
	//	*LandRes_EscapeRes
	//	*LandRes_GetsCityCommodityRes
	//	*LandRes_GetsCityPurchaseRes
	//	*LandRes_UnsetTradeDestRes
	//	*LandRes_CreateLandBuildRes
	//	*LandRes_UpgradeLandBuildRes
	//	*LandRes_MergeLandBuildRes
	//	*LandRes_DeleteLandBuildRes
	//	*LandRes_TradeTeamNotify
	//	*LandRes_GuildCombatNotify
	//	*LandRes_ArmyArrivedNotify
	//	*LandRes_LandArmyNotify
	//	*LandRes_ArmyStatusNotify
	//	*LandRes_TradeEventNotify
	//	*LandRes_TradeTeamStatusNotify
	//	*LandRes_VisibleBuildsNotify
	//	*LandRes_VisibleTradeTeamNotify
	//	*LandRes_VisibleArmyNotify
	//	*LandRes_VisibleCombatNotify
	//	*LandRes_GuildParcelNotify
	//	*LandRes_EnterOverNotify
	//	*LandRes_ScanOverNotify
	//	*LandRes_LandBuildChangeNotify
	//	*LandRes_ParcelGuildNotify
	//	*LandRes_CombatStartOverNotify
	//	*LandRes_CombatReportNotify
	//	*LandRes_PlayerFightReportListRes
	//	*LandRes_PlayerFightReportByFightIdRes
	Res isLandRes_Res `protobuf_oneof:"res"`
}

func (x *LandRes) Reset() {
	*x = LandRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandRes) ProtoMessage() {}

func (x *LandRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandRes.ProtoReflect.Descriptor instead.
func (*LandRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{1}
}

func (m *LandRes) GetRes() isLandRes_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *LandRes) GetEnterLandRes() *EnterLandRes {
	if x, ok := x.GetRes().(*LandRes_EnterLandRes); ok {
		return x.EnterLandRes
	}
	return nil
}

func (x *LandRes) GetExitLandRes() *ExitLandRes {
	if x, ok := x.GetRes().(*LandRes_ExitLandRes); ok {
		return x.ExitLandRes
	}
	return nil
}

func (x *LandRes) GetScanLandRes() *ScanLandRes {
	if x, ok := x.GetRes().(*LandRes_ScanLandRes); ok {
		return x.ScanLandRes
	}
	return nil
}

func (x *LandRes) GetSetTradeDestRes() *SetTradeDestRes {
	if x, ok := x.GetRes().(*LandRes_SetTradeDestRes); ok {
		return x.SetTradeDestRes
	}
	return nil
}

func (x *LandRes) GetGotoTradeDestRes() *GotoTradeDestRes {
	if x, ok := x.GetRes().(*LandRes_GotoTradeDestRes); ok {
		return x.GotoTradeDestRes
	}
	return nil
}

func (x *LandRes) GetDeclareWarRes() *DeclareWarRes {
	if x, ok := x.GetRes().(*LandRes_DeclareWarRes); ok {
		return x.DeclareWarRes
	}
	return nil
}

func (x *LandRes) GetGotoWarRes() *GotoWarRes {
	if x, ok := x.GetRes().(*LandRes_GotoWarRes); ok {
		return x.GotoWarRes
	}
	return nil
}

func (x *LandRes) GetStopWarRes() *StopWarRes {
	if x, ok := x.GetRes().(*LandRes_StopWarRes); ok {
		return x.StopWarRes
	}
	return nil
}

func (x *LandRes) GetPurchaseCargoRes() *PurchaseCargoRes {
	if x, ok := x.GetRes().(*LandRes_PurchaseCargoRes); ok {
		return x.PurchaseCargoRes
	}
	return nil
}

func (x *LandRes) GetSaleCargoRes() *SaleCargoRes {
	if x, ok := x.GetRes().(*LandRes_SaleCargoRes); ok {
		return x.SaleCargoRes
	}
	return nil
}

func (x *LandRes) GetGetsCityBankRes() *GetsCityBankRes {
	if x, ok := x.GetRes().(*LandRes_GetsCityBankRes); ok {
		return x.GetsCityBankRes
	}
	return nil
}

func (x *LandRes) GetInvestRes() *InvestRes {
	if x, ok := x.GetRes().(*LandRes_InvestRes); ok {
		return x.InvestRes
	}
	return nil
}

func (x *LandRes) GetEscapeRes() *EscapeRes {
	if x, ok := x.GetRes().(*LandRes_EscapeRes); ok {
		return x.EscapeRes
	}
	return nil
}

func (x *LandRes) GetGetsCityCommodityRes() *GetsCityCommodityRes {
	if x, ok := x.GetRes().(*LandRes_GetsCityCommodityRes); ok {
		return x.GetsCityCommodityRes
	}
	return nil
}

func (x *LandRes) GetGetsCityPurchaseRes() *GetsCityPurchaseRes {
	if x, ok := x.GetRes().(*LandRes_GetsCityPurchaseRes); ok {
		return x.GetsCityPurchaseRes
	}
	return nil
}

func (x *LandRes) GetUnsetTradeDestRes() *UnsetTradeDestRes {
	if x, ok := x.GetRes().(*LandRes_UnsetTradeDestRes); ok {
		return x.UnsetTradeDestRes
	}
	return nil
}

func (x *LandRes) GetCreateLandBuildRes() *CreateLandBuildRes {
	if x, ok := x.GetRes().(*LandRes_CreateLandBuildRes); ok {
		return x.CreateLandBuildRes
	}
	return nil
}

func (x *LandRes) GetUpgradeLandBuildRes() *UpgradeLandBuildRes {
	if x, ok := x.GetRes().(*LandRes_UpgradeLandBuildRes); ok {
		return x.UpgradeLandBuildRes
	}
	return nil
}

func (x *LandRes) GetMergeLandBuildRes() *MergeLandBuildRes {
	if x, ok := x.GetRes().(*LandRes_MergeLandBuildRes); ok {
		return x.MergeLandBuildRes
	}
	return nil
}

func (x *LandRes) GetDeleteLandBuildRes() *DeleteLandBuildRes {
	if x, ok := x.GetRes().(*LandRes_DeleteLandBuildRes); ok {
		return x.DeleteLandBuildRes
	}
	return nil
}

func (x *LandRes) GetTradeTeamNotify() *TradeTeamNotify {
	if x, ok := x.GetRes().(*LandRes_TradeTeamNotify); ok {
		return x.TradeTeamNotify
	}
	return nil
}

func (x *LandRes) GetGuildCombatNotify() *GuildCombatNotify {
	if x, ok := x.GetRes().(*LandRes_GuildCombatNotify); ok {
		return x.GuildCombatNotify
	}
	return nil
}

func (x *LandRes) GetArmyArrivedNotify() *ArmyArrivedNotify {
	if x, ok := x.GetRes().(*LandRes_ArmyArrivedNotify); ok {
		return x.ArmyArrivedNotify
	}
	return nil
}

func (x *LandRes) GetLandArmyNotify() *LandArmyNotify {
	if x, ok := x.GetRes().(*LandRes_LandArmyNotify); ok {
		return x.LandArmyNotify
	}
	return nil
}

func (x *LandRes) GetArmyStatusNotify() *ArmyStatusNotify {
	if x, ok := x.GetRes().(*LandRes_ArmyStatusNotify); ok {
		return x.ArmyStatusNotify
	}
	return nil
}

func (x *LandRes) GetTradeEventNotify() *TradeEventNotify {
	if x, ok := x.GetRes().(*LandRes_TradeEventNotify); ok {
		return x.TradeEventNotify
	}
	return nil
}

func (x *LandRes) GetTradeTeamStatusNotify() *TradeTeamStatusNotify {
	if x, ok := x.GetRes().(*LandRes_TradeTeamStatusNotify); ok {
		return x.TradeTeamStatusNotify
	}
	return nil
}

func (x *LandRes) GetVisibleBuildsNotify() *VisibleBuildsNotify {
	if x, ok := x.GetRes().(*LandRes_VisibleBuildsNotify); ok {
		return x.VisibleBuildsNotify
	}
	return nil
}

func (x *LandRes) GetVisibleTradeTeamNotify() *VisibleTradeTeamNotify {
	if x, ok := x.GetRes().(*LandRes_VisibleTradeTeamNotify); ok {
		return x.VisibleTradeTeamNotify
	}
	return nil
}

func (x *LandRes) GetVisibleArmyNotify() *VisibleArmyNotify {
	if x, ok := x.GetRes().(*LandRes_VisibleArmyNotify); ok {
		return x.VisibleArmyNotify
	}
	return nil
}

func (x *LandRes) GetVisibleCombatNotify() *VisibleCombatNotify {
	if x, ok := x.GetRes().(*LandRes_VisibleCombatNotify); ok {
		return x.VisibleCombatNotify
	}
	return nil
}

func (x *LandRes) GetGuildParcelNotify() *GuildParcelNotify {
	if x, ok := x.GetRes().(*LandRes_GuildParcelNotify); ok {
		return x.GuildParcelNotify
	}
	return nil
}

func (x *LandRes) GetEnterOverNotify() *EnterOverNotify {
	if x, ok := x.GetRes().(*LandRes_EnterOverNotify); ok {
		return x.EnterOverNotify
	}
	return nil
}

func (x *LandRes) GetScanOverNotify() *ScanOverNotify {
	if x, ok := x.GetRes().(*LandRes_ScanOverNotify); ok {
		return x.ScanOverNotify
	}
	return nil
}

func (x *LandRes) GetLandBuildChangeNotify() *LandBuildChangeNotify {
	if x, ok := x.GetRes().(*LandRes_LandBuildChangeNotify); ok {
		return x.LandBuildChangeNotify
	}
	return nil
}

func (x *LandRes) GetParcelGuildNotify() *ParcelGuildNotify {
	if x, ok := x.GetRes().(*LandRes_ParcelGuildNotify); ok {
		return x.ParcelGuildNotify
	}
	return nil
}

func (x *LandRes) GetCombatStartOverNotify() *CombatStartOverNotify {
	if x, ok := x.GetRes().(*LandRes_CombatStartOverNotify); ok {
		return x.CombatStartOverNotify
	}
	return nil
}

func (x *LandRes) GetCombatReportNotify() *CombatReportNotify {
	if x, ok := x.GetRes().(*LandRes_CombatReportNotify); ok {
		return x.CombatReportNotify
	}
	return nil
}

func (x *LandRes) GetPlayerFightReportListRes() *PlayerFightReportListRes {
	if x, ok := x.GetRes().(*LandRes_PlayerFightReportListRes); ok {
		return x.PlayerFightReportListRes
	}
	return nil
}

func (x *LandRes) GetPlayerFightReportByFightIdRes() *PlayerFightReportByFightIdRes {
	if x, ok := x.GetRes().(*LandRes_PlayerFightReportByFightIdRes); ok {
		return x.PlayerFightReportByFightIdRes
	}
	return nil
}

type isLandRes_Res interface {
	isLandRes_Res()
}

type LandRes_EnterLandRes struct {
	EnterLandRes *EnterLandRes `protobuf:"bytes,1,opt,name=enter_land_res,json=enterLandRes,proto3,oneof"` //进入大陆
}

type LandRes_ExitLandRes struct {
	ExitLandRes *ExitLandRes `protobuf:"bytes,2,opt,name=exit_land_res,json=exitLandRes,proto3,oneof"` //离开大陆
}

type LandRes_ScanLandRes struct {
	ScanLandRes *ScanLandRes `protobuf:"bytes,3,opt,name=scan_land_res,json=scanLandRes,proto3,oneof"` //大陆
}

type LandRes_SetTradeDestRes struct {
	SetTradeDestRes *SetTradeDestRes `protobuf:"bytes,4,opt,name=set_trade_dest_res,json=setTradeDestRes,proto3,oneof"` //设置贸易目的城市
}

type LandRes_GotoTradeDestRes struct {
	GotoTradeDestRes *GotoTradeDestRes `protobuf:"bytes,5,opt,name=goto_trade_dest_res,json=gotoTradeDestRes,proto3,oneof"` //出发去目的城市
}

type LandRes_DeclareWarRes struct {
	DeclareWarRes *DeclareWarRes `protobuf:"bytes,6,opt,name=declare_war_res,json=declareWarRes,proto3,oneof"` // 宣战
}

type LandRes_GotoWarRes struct {
	GotoWarRes *GotoWarRes `protobuf:"bytes,7,opt,name=goto_war_res,json=gotoWarRes,proto3,oneof"` //出征
}

type LandRes_StopWarRes struct {
	StopWarRes *StopWarRes `protobuf:"bytes,8,opt,name=stop_war_res,json=stopWarRes,proto3,oneof"` //停战
}

type LandRes_PurchaseCargoRes struct {
	PurchaseCargoRes *PurchaseCargoRes `protobuf:"bytes,9,opt,name=purchase_cargo_res,json=purchaseCargoRes,proto3,oneof"` //购入货物
}

type LandRes_SaleCargoRes struct {
	SaleCargoRes *SaleCargoRes `protobuf:"bytes,10,opt,name=sale_cargo_res,json=saleCargoRes,proto3,oneof"` //售卖货物
}

type LandRes_GetsCityBankRes struct {
	GetsCityBankRes *GetsCityBankRes `protobuf:"bytes,11,opt,name=gets_city_bank_res,json=getsCityBankRes,proto3,oneof"` //获取城市银行
}

type LandRes_InvestRes struct {
	InvestRes *InvestRes `protobuf:"bytes,12,opt,name=invest_res,json=investRes,proto3,oneof"` //投资
}

type LandRes_EscapeRes struct {
	EscapeRes *EscapeRes `protobuf:"bytes,13,opt,name=escape_res,json=escapeRes,proto3,oneof"` //逃跑
}

type LandRes_GetsCityCommodityRes struct {
	GetsCityCommodityRes *GetsCityCommodityRes `protobuf:"bytes,14,opt,name=gets_city_commodity_res,json=getsCityCommodityRes,proto3,oneof"` //获取城市商品
}

type LandRes_GetsCityPurchaseRes struct {
	GetsCityPurchaseRes *GetsCityPurchaseRes `protobuf:"bytes,15,opt,name=gets_city_purchase_res,json=getsCityPurchaseRes,proto3,oneof"` //获取城市收购品
}

type LandRes_UnsetTradeDestRes struct {
	UnsetTradeDestRes *UnsetTradeDestRes `protobuf:"bytes,16,opt,name=unset_trade_dest_res,json=unsetTradeDestRes,proto3,oneof"` //取消设置贸易目的城市
}

type LandRes_CreateLandBuildRes struct {
	CreateLandBuildRes *CreateLandBuildRes `protobuf:"bytes,17,opt,name=create_land_build_res,json=createLandBuildRes,proto3,oneof"` //建造建筑
}

type LandRes_UpgradeLandBuildRes struct {
	UpgradeLandBuildRes *UpgradeLandBuildRes `protobuf:"bytes,18,opt,name=upgrade_land_build_res,json=upgradeLandBuildRes,proto3,oneof"` //升级建筑
}

type LandRes_MergeLandBuildRes struct {
	MergeLandBuildRes *MergeLandBuildRes `protobuf:"bytes,19,opt,name=merge_land_build_res,json=mergeLandBuildRes,proto3,oneof"` //合并建筑
}

type LandRes_DeleteLandBuildRes struct {
	DeleteLandBuildRes *DeleteLandBuildRes `protobuf:"bytes,20,opt,name=delete_land_build_res,json=deleteLandBuildRes,proto3,oneof"` //拆除建筑
}

type LandRes_TradeTeamNotify struct {
	TradeTeamNotify *TradeTeamNotify `protobuf:"bytes,100,opt,name=trade_team_notify,json=tradeTeamNotify,proto3,oneof"` //同步贸易队状态
}

type LandRes_GuildCombatNotify struct {
	GuildCombatNotify *GuildCombatNotify `protobuf:"bytes,101,opt,name=guild_combat_notify,json=guildCombatNotify,proto3,oneof"` //同步战争状态
}

type LandRes_ArmyArrivedNotify struct {
	ArmyArrivedNotify *ArmyArrivedNotify `protobuf:"bytes,102,opt,name=army_arrived_notify,json=armyArrivedNotify,proto3,oneof"` // 部队到达通知
}

type LandRes_LandArmyNotify struct {
	LandArmyNotify *LandArmyNotify `protobuf:"bytes,103,opt,name=land_army_notify,json=landArmyNotify,proto3,oneof"` //部队移动通知
}

type LandRes_ArmyStatusNotify struct {
	ArmyStatusNotify *ArmyStatusNotify `protobuf:"bytes,104,opt,name=army_status_notify,json=armyStatusNotify,proto3,oneof"` // 部队状态变更
}

type LandRes_TradeEventNotify struct {
	TradeEventNotify *TradeEventNotify `protobuf:"bytes,106,opt,name=trade_event_notify,json=tradeEventNotify,proto3,oneof"` //贸易事件通知
}

type LandRes_TradeTeamStatusNotify struct {
	TradeTeamStatusNotify *TradeTeamStatusNotify `protobuf:"bytes,107,opt,name=trade_team_status_notify,json=tradeTeamStatusNotify,proto3,oneof"` //贸易队状态变更
}

type LandRes_VisibleBuildsNotify struct {
	VisibleBuildsNotify *VisibleBuildsNotify `protobuf:"bytes,108,opt,name=visible_builds_notify,json=visibleBuildsNotify,proto3,oneof"` //可视区域的建筑
}

type LandRes_VisibleTradeTeamNotify struct {
	VisibleTradeTeamNotify *VisibleTradeTeamNotify `protobuf:"bytes,109,opt,name=visible_trade_team_notify,json=visibleTradeTeamNotify,proto3,oneof"` //可视区域的贸易队
}

type LandRes_VisibleArmyNotify struct {
	VisibleArmyNotify *VisibleArmyNotify `protobuf:"bytes,110,opt,name=visible_army_notify,json=visibleArmyNotify,proto3,oneof"` //可视区域的部队
}

type LandRes_VisibleCombatNotify struct {
	VisibleCombatNotify *VisibleCombatNotify `protobuf:"bytes,111,opt,name=visible_combat_notify,json=visibleCombatNotify,proto3,oneof"` //可视区域的战斗
}

type LandRes_GuildParcelNotify struct {
	GuildParcelNotify *GuildParcelNotify `protobuf:"bytes,112,opt,name=guild_parcel_notify,json=guildParcelNotify,proto3,oneof"` //王国势力范围
}

type LandRes_EnterOverNotify struct {
	EnterOverNotify *EnterOverNotify `protobuf:"bytes,113,opt,name=enter_over_notify,json=enterOverNotify,proto3,oneof"` //进入结束通知
}

type LandRes_ScanOverNotify struct {
	ScanOverNotify *ScanOverNotify `protobuf:"bytes,114,opt,name=scan_over_notify,json=scanOverNotify,proto3,oneof"` //可以区域变更结束通知
}

type LandRes_LandBuildChangeNotify struct {
	LandBuildChangeNotify *LandBuildChangeNotify `protobuf:"bytes,115,opt,name=land_build_change_notify,json=landBuildChangeNotify,proto3,oneof"` //大陆建筑变更通知
}

type LandRes_ParcelGuildNotify struct {
	ParcelGuildNotify *ParcelGuildNotify `protobuf:"bytes,116,opt,name=parcel_guild_notify,json=parcelGuildNotify,proto3,oneof"` //通知地块势力
}

type LandRes_CombatStartOverNotify struct {
	CombatStartOverNotify *CombatStartOverNotify `protobuf:"bytes,120,opt,name=combat_start_over_notify,json=combatStartOverNotify,proto3,oneof"` //战斗开始结束通知
}

type LandRes_CombatReportNotify struct {
	CombatReportNotify *CombatReportNotify `protobuf:"bytes,117,opt,name=combat_report_notify,json=combatReportNotify,proto3,oneof"` //战报通知
}

type LandRes_PlayerFightReportListRes struct {
	PlayerFightReportListRes *PlayerFightReportListRes `protobuf:"bytes,118,opt,name=player_fight_report_list_res,json=playerFightReportListRes,proto3,oneof"` //获取用户战报列表
}

type LandRes_PlayerFightReportByFightIdRes struct {
	PlayerFightReportByFightIdRes *PlayerFightReportByFightIdRes `protobuf:"bytes,119,opt,name=player_fight_report_by_fight_id_res,json=playerFightReportByFightIdRes,proto3,oneof"` //获取单条用户战报内容
}

func (*LandRes_EnterLandRes) isLandRes_Res() {}

func (*LandRes_ExitLandRes) isLandRes_Res() {}

func (*LandRes_ScanLandRes) isLandRes_Res() {}

func (*LandRes_SetTradeDestRes) isLandRes_Res() {}

func (*LandRes_GotoTradeDestRes) isLandRes_Res() {}

func (*LandRes_DeclareWarRes) isLandRes_Res() {}

func (*LandRes_GotoWarRes) isLandRes_Res() {}

func (*LandRes_StopWarRes) isLandRes_Res() {}

func (*LandRes_PurchaseCargoRes) isLandRes_Res() {}

func (*LandRes_SaleCargoRes) isLandRes_Res() {}

func (*LandRes_GetsCityBankRes) isLandRes_Res() {}

func (*LandRes_InvestRes) isLandRes_Res() {}

func (*LandRes_EscapeRes) isLandRes_Res() {}

func (*LandRes_GetsCityCommodityRes) isLandRes_Res() {}

func (*LandRes_GetsCityPurchaseRes) isLandRes_Res() {}

func (*LandRes_UnsetTradeDestRes) isLandRes_Res() {}

func (*LandRes_CreateLandBuildRes) isLandRes_Res() {}

func (*LandRes_UpgradeLandBuildRes) isLandRes_Res() {}

func (*LandRes_MergeLandBuildRes) isLandRes_Res() {}

func (*LandRes_DeleteLandBuildRes) isLandRes_Res() {}

func (*LandRes_TradeTeamNotify) isLandRes_Res() {}

func (*LandRes_GuildCombatNotify) isLandRes_Res() {}

func (*LandRes_ArmyArrivedNotify) isLandRes_Res() {}

func (*LandRes_LandArmyNotify) isLandRes_Res() {}

func (*LandRes_ArmyStatusNotify) isLandRes_Res() {}

func (*LandRes_TradeEventNotify) isLandRes_Res() {}

func (*LandRes_TradeTeamStatusNotify) isLandRes_Res() {}

func (*LandRes_VisibleBuildsNotify) isLandRes_Res() {}

func (*LandRes_VisibleTradeTeamNotify) isLandRes_Res() {}

func (*LandRes_VisibleArmyNotify) isLandRes_Res() {}

func (*LandRes_VisibleCombatNotify) isLandRes_Res() {}

func (*LandRes_GuildParcelNotify) isLandRes_Res() {}

func (*LandRes_EnterOverNotify) isLandRes_Res() {}

func (*LandRes_ScanOverNotify) isLandRes_Res() {}

func (*LandRes_LandBuildChangeNotify) isLandRes_Res() {}

func (*LandRes_ParcelGuildNotify) isLandRes_Res() {}

func (*LandRes_CombatStartOverNotify) isLandRes_Res() {}

func (*LandRes_CombatReportNotify) isLandRes_Res() {}

func (*LandRes_PlayerFightReportListRes) isLandRes_Res() {}

func (*LandRes_PlayerFightReportByFightIdRes) isLandRes_Res() {}

// ----------------------------------------------------
type EnterLandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterLandReq) Reset() {
	*x = EnterLandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterLandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterLandReq) ProtoMessage() {}

func (x *EnterLandReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterLandReq.ProtoReflect.Descriptor instead.
func (*EnterLandReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{2}
}

type ExitLandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitLandReq) Reset() {
	*x = ExitLandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitLandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitLandReq) ProtoMessage() {}

func (x *ExitLandReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitLandReq.ProtoReflect.Descriptor instead.
func (*ExitLandReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{3}
}

type ScanLandReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
}

func (x *ScanLandReq) Reset() {
	*x = ScanLandReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanLandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanLandReq) ProtoMessage() {}

func (x *ScanLandReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanLandReq.ProtoReflect.Descriptor instead.
func (*ScanLandReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{4}
}

func (x *ScanLandReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type SetTradeDestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,1,opt,name=build_id,json=buildId,proto3" json:"build_id"` // 目的城市
}

func (x *SetTradeDestReq) Reset() {
	*x = SetTradeDestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTradeDestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTradeDestReq) ProtoMessage() {}

func (x *SetTradeDestReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTradeDestReq.ProtoReflect.Descriptor instead.
func (*SetTradeDestReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{5}
}

func (x *SetTradeDestReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

type GotoTradeDestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GotoTradeDestReq) Reset() {
	*x = GotoTradeDestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoTradeDestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoTradeDestReq) ProtoMessage() {}

func (x *GotoTradeDestReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoTradeDestReq.ProtoReflect.Descriptor instead.
func (*GotoTradeDestReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{6}
}

type DeclareWarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
}

func (x *DeclareWarReq) Reset() {
	*x = DeclareWarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareWarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareWarReq) ProtoMessage() {}

func (x *DeclareWarReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareWarReq.ProtoReflect.Descriptor instead.
func (*DeclareWarReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{7}
}

func (x *DeclareWarReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type GotoWarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"army_id"
	ArmyId int64 `protobuf:"varint,1,opt,name=army_id,json=armyId,proto3" json:"army_id"`
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"`
}

func (x *GotoWarReq) Reset() {
	*x = GotoWarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoWarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoWarReq) ProtoMessage() {}

func (x *GotoWarReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoWarReq.ProtoReflect.Descriptor instead.
func (*GotoWarReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{8}
}

func (x *GotoWarReq) GetArmyId() int64 {
	if x != nil {
		return x.ArmyId
	}
	return 0
}

func (x *GotoWarReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type StopWarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
}

func (x *StopWarReq) Reset() {
	*x = StopWarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopWarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopWarReq) ProtoMessage() {}

func (x *StopWarReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopWarReq.ProtoReflect.Descriptor instead.
func (*StopWarReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{9}
}

func (x *StopWarReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type PurchaseCargoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"cargo"
	Cargo *Cargo `protobuf:"bytes,1,opt,name=cargo,proto3" json:"cargo"`
}

func (x *PurchaseCargoReq) Reset() {
	*x = PurchaseCargoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseCargoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseCargoReq) ProtoMessage() {}

func (x *PurchaseCargoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseCargoReq.ProtoReflect.Descriptor instead.
func (*PurchaseCargoReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{10}
}

func (x *PurchaseCargoReq) GetCargo() *Cargo {
	if x != nil {
		return x.Cargo
	}
	return nil
}

type SaleCargoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"cargo"
	Cargo *Cargo `protobuf:"bytes,1,opt,name=cargo,proto3" json:"cargo"`
}

func (x *SaleCargoReq) Reset() {
	*x = SaleCargoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleCargoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleCargoReq) ProtoMessage() {}

func (x *SaleCargoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleCargoReq.ProtoReflect.Descriptor instead.
func (*SaleCargoReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{11}
}

func (x *SaleCargoReq) GetCargo() *Cargo {
	if x != nil {
		return x.Cargo
	}
	return nil
}

type InvestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,1,opt,name=build_id,json=buildId,proto3" json:"build_id"` //城市Id
	// @inject_tag: json:"invest_count"
	InvestCount int32 `protobuf:"varint,2,opt,name=invest_count,json=investCount,proto3" json:"invest_count"` //投资次数
}

func (x *InvestReq) Reset() {
	*x = InvestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestReq) ProtoMessage() {}

func (x *InvestReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestReq.ProtoReflect.Descriptor instead.
func (*InvestReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{12}
}

func (x *InvestReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *InvestReq) GetInvestCount() int32 {
	if x != nil {
		return x.InvestCount
	}
	return 0
}

type GetsCityBankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,1,opt,name=build_id,json=buildId,proto3" json:"build_id"` //城市Id
}

func (x *GetsCityBankReq) Reset() {
	*x = GetsCityBankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityBankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityBankReq) ProtoMessage() {}

func (x *GetsCityBankReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityBankReq.ProtoReflect.Descriptor instead.
func (*GetsCityBankReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{13}
}

func (x *GetsCityBankReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

type EscapeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EscapeReq) Reset() {
	*x = EscapeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscapeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscapeReq) ProtoMessage() {}

func (x *EscapeReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscapeReq.ProtoReflect.Descriptor instead.
func (*EscapeReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{14}
}

type GetsCityCommodityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,3,opt,name=build_id,json=buildId,proto3" json:"build_id"`
}

func (x *GetsCityCommodityReq) Reset() {
	*x = GetsCityCommodityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityCommodityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityCommodityReq) ProtoMessage() {}

func (x *GetsCityCommodityReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityCommodityReq.ProtoReflect.Descriptor instead.
func (*GetsCityCommodityReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{15}
}

func (x *GetsCityCommodityReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsCityCommodityReq) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsCityCommodityReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

type GetsCityPurchaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,3,opt,name=build_id,json=buildId,proto3" json:"build_id"`
}

func (x *GetsCityPurchaseReq) Reset() {
	*x = GetsCityPurchaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityPurchaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityPurchaseReq) ProtoMessage() {}

func (x *GetsCityPurchaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityPurchaseReq.ProtoReflect.Descriptor instead.
func (*GetsCityPurchaseReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{16}
}

func (x *GetsCityPurchaseReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsCityPurchaseReq) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsCityPurchaseReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

type UnsetTradeDestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsetTradeDestReq) Reset() {
	*x = UnsetTradeDestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetTradeDestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetTradeDestReq) ProtoMessage() {}

func (x *UnsetTradeDestReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetTradeDestReq.ProtoReflect.Descriptor instead.
func (*UnsetTradeDestReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{17}
}

type CreateLandBuildReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"` // 位置，只能建筑1x1的建筑
	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,2,opt,name=build_id,json=buildId,proto3" json:"build_id"` // 要建造的建筑ID
}

func (x *CreateLandBuildReq) Reset() {
	*x = CreateLandBuildReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLandBuildReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLandBuildReq) ProtoMessage() {}

func (x *CreateLandBuildReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLandBuildReq.ProtoReflect.Descriptor instead.
func (*CreateLandBuildReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{18}
}

func (x *CreateLandBuildReq) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *CreateLandBuildReq) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

type UpgradeLandBuildReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *UpgradeLandBuildReq) Reset() {
	*x = UpgradeLandBuildReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeLandBuildReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeLandBuildReq) ProtoMessage() {}

func (x *UpgradeLandBuildReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeLandBuildReq.ProtoReflect.Descriptor instead.
func (*UpgradeLandBuildReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{19}
}

func (x *UpgradeLandBuildReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MergeLandBuildReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"width"
	Width int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width"` // 合并的宽度
	// @inject_tag: json:"height"
	Height int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height"` // 合并的高度
	// @inject_tag: json:"ids"
	Ids []int32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids"` // 用于合并的建筑，同等级，同基础建筑
}

func (x *MergeLandBuildReq) Reset() {
	*x = MergeLandBuildReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeLandBuildReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeLandBuildReq) ProtoMessage() {}

func (x *MergeLandBuildReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeLandBuildReq.ProtoReflect.Descriptor instead.
func (*MergeLandBuildReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{20}
}

func (x *MergeLandBuildReq) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MergeLandBuildReq) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MergeLandBuildReq) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteLandBuildReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteLandBuildReq) Reset() {
	*x = DeleteLandBuildReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLandBuildReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLandBuildReq) ProtoMessage() {}

func (x *DeleteLandBuildReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLandBuildReq.ProtoReflect.Descriptor instead.
func (*DeleteLandBuildReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteLandBuildReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PlayerFightReportListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	PageNum  int32 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num"`
}

func (x *PlayerFightReportListReq) Reset() {
	*x = PlayerFightReportListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFightReportListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFightReportListReq) ProtoMessage() {}

func (x *PlayerFightReportListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFightReportListReq.ProtoReflect.Descriptor instead.
func (*PlayerFightReportListReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{22}
}

func (x *PlayerFightReportListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PlayerFightReportListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type PlayerFightReportByFightIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightId int64 `protobuf:"varint,1,opt,name=FightId,proto3" json:"FightId"`
}

func (x *PlayerFightReportByFightIdReq) Reset() {
	*x = PlayerFightReportByFightIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFightReportByFightIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFightReportByFightIdReq) ProtoMessage() {}

func (x *PlayerFightReportByFightIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFightReportByFightIdReq.ProtoReflect.Descriptor instead.
func (*PlayerFightReportByFightIdReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{23}
}

func (x *PlayerFightReportByFightIdReq) GetFightId() int64 {
	if x != nil {
		return x.FightId
	}
	return 0
}

// ----------------------------------------------------
type EnterLandRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"server_time"
	ServerTime int64 `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time"`
	// @inject_tag: json:"home"
	Home *Build `protobuf:"bytes,2,opt,name=home,proto3" json:"home"` //所在王国及主城
	// @inject_tag: json:"trade_team_status"
	TradeTeamStatus *TradeTeamStatus `protobuf:"bytes,3,opt,name=trade_team_status,json=tradeTeamStatus,proto3" json:"trade_team_status"` //贸易队状态
	// @inject_tag: json:"trade_team_event"
	TradeTeamEvent []*TradeTeamEvent `protobuf:"bytes,4,rep,name=trade_team_event,json=tradeTeamEvent,proto3" json:"trade_team_event"` //贸易队事件
	// @inject_tag: json:"trade_team"
	TradeTeam *TradeTeam `protobuf:"bytes,5,opt,name=trade_team,json=tradeTeam,proto3" json:"trade_team"` //贸易队
	// @inject_tag: json:"has_war"
	HasWar bool `protobuf:"varint,6,opt,name=has_war,json=hasWar,proto3" json:"has_war"` //是否有战役
	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,7,opt,name=pos,proto3" json:"pos"`
}

func (x *EnterLandRes) Reset() {
	*x = EnterLandRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterLandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterLandRes) ProtoMessage() {}

func (x *EnterLandRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterLandRes.ProtoReflect.Descriptor instead.
func (*EnterLandRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{24}
}

func (x *EnterLandRes) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *EnterLandRes) GetHome() *Build {
	if x != nil {
		return x.Home
	}
	return nil
}

func (x *EnterLandRes) GetTradeTeamStatus() *TradeTeamStatus {
	if x != nil {
		return x.TradeTeamStatus
	}
	return nil
}

func (x *EnterLandRes) GetTradeTeamEvent() []*TradeTeamEvent {
	if x != nil {
		return x.TradeTeamEvent
	}
	return nil
}

func (x *EnterLandRes) GetTradeTeam() *TradeTeam {
	if x != nil {
		return x.TradeTeam
	}
	return nil
}

func (x *EnterLandRes) GetHasWar() bool {
	if x != nil {
		return x.HasWar
	}
	return false
}

func (x *EnterLandRes) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type ExitLandRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitLandRes) Reset() {
	*x = ExitLandRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitLandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitLandRes) ProtoMessage() {}

func (x *ExitLandRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitLandRes.ProtoReflect.Descriptor instead.
func (*ExitLandRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{25}
}

type ScanLandRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pos"
	Pos int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
}

func (x *ScanLandRes) Reset() {
	*x = ScanLandRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanLandRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanLandRes) ProtoMessage() {}

func (x *ScanLandRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanLandRes.ProtoReflect.Descriptor instead.
func (*ScanLandRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{26}
}

func (x *ScanLandRes) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type SetTradeDestRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"team_status"
	TeamStatus *TradeTeamStatus `protobuf:"bytes,2,opt,name=team_status,json=teamStatus,proto3" json:"team_status"`
	// @inject_tag: json:"consume"
	Consume *Consume `protobuf:"bytes,3,opt,name=consume,proto3" json:"consume"` //消耗
}

func (x *SetTradeDestRes) Reset() {
	*x = SetTradeDestRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTradeDestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTradeDestRes) ProtoMessage() {}

func (x *SetTradeDestRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTradeDestRes.ProtoReflect.Descriptor instead.
func (*SetTradeDestRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{27}
}

func (x *SetTradeDestRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SetTradeDestRes) GetTeamStatus() *TradeTeamStatus {
	if x != nil {
		return x.TeamStatus
	}
	return nil
}

func (x *SetTradeDestRes) GetConsume() *Consume {
	if x != nil {
		return x.Consume
	}
	return nil
}

type UnsetTradeDestRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"team_status"
	TeamStatus *TradeTeamStatus `protobuf:"bytes,2,opt,name=team_status,json=teamStatus,proto3" json:"team_status"`
}

func (x *UnsetTradeDestRes) Reset() {
	*x = UnsetTradeDestRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetTradeDestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetTradeDestRes) ProtoMessage() {}

func (x *UnsetTradeDestRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetTradeDestRes.ProtoReflect.Descriptor instead.
func (*UnsetTradeDestRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{28}
}

func (x *UnsetTradeDestRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UnsetTradeDestRes) GetTeamStatus() *TradeTeamStatus {
	if x != nil {
		return x.TeamStatus
	}
	return nil
}

type GotoTradeDestRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"team_status"
	TeamStatus *TradeTeamStatus `protobuf:"bytes,2,opt,name=team_status,json=teamStatus,proto3" json:"team_status"`
	// @inject_tag: json:"trade_team"
	TradeTeam *LandTradeTeam `protobuf:"bytes,3,opt,name=trade_team,json=tradeTeam,proto3" json:"trade_team"`
}

func (x *GotoTradeDestRes) Reset() {
	*x = GotoTradeDestRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoTradeDestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoTradeDestRes) ProtoMessage() {}

func (x *GotoTradeDestRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoTradeDestRes.ProtoReflect.Descriptor instead.
func (*GotoTradeDestRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{29}
}

func (x *GotoTradeDestRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GotoTradeDestRes) GetTeamStatus() *TradeTeamStatus {
	if x != nil {
		return x.TeamStatus
	}
	return nil
}

func (x *GotoTradeDestRes) GetTradeTeam() *LandTradeTeam {
	if x != nil {
		return x.TradeTeam
	}
	return nil
}

type DeclareWarRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"` //结果
	// @inject_tag: json:"combat"
	Combat *GuildCombat `protobuf:"bytes,2,opt,name=combat,proto3" json:"combat"` //
}

func (x *DeclareWarRes) Reset() {
	*x = DeclareWarRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareWarRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareWarRes) ProtoMessage() {}

func (x *DeclareWarRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareWarRes.ProtoReflect.Descriptor instead.
func (*DeclareWarRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{30}
}

func (x *DeclareWarRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeclareWarRes) GetCombat() *GuildCombat {
	if x != nil {
		return x.Combat
	}
	return nil
}

type GotoWarRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"land_army"
	LandArmy *LandArmy `protobuf:"bytes,2,opt,name=land_army,json=landArmy,proto3" json:"land_army"`
}

func (x *GotoWarRes) Reset() {
	*x = GotoWarRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GotoWarRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GotoWarRes) ProtoMessage() {}

func (x *GotoWarRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GotoWarRes.ProtoReflect.Descriptor instead.
func (*GotoWarRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{31}
}

func (x *GotoWarRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GotoWarRes) GetLandArmy() *LandArmy {
	if x != nil {
		return x.LandArmy
	}
	return nil
}

type StopWarRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *StopWarRes) Reset() {
	*x = StopWarRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopWarRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopWarRes) ProtoMessage() {}

func (x *StopWarRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopWarRes.ProtoReflect.Descriptor instead.
func (*StopWarRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{32}
}

func (x *StopWarRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type TradeTeamNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"trade_team"
	TradeTeam *LandTradeTeam `protobuf:"bytes,1,opt,name=trade_team,json=tradeTeam,proto3" json:"trade_team"`
}

func (x *TradeTeamNotify) Reset() {
	*x = TradeTeamNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTeamNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTeamNotify) ProtoMessage() {}

func (x *TradeTeamNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTeamNotify.ProtoReflect.Descriptor instead.
func (*TradeTeamNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{33}
}

func (x *TradeTeamNotify) GetTradeTeam() *LandTradeTeam {
	if x != nil {
		return x.TradeTeam
	}
	return nil
}

type GuildCombatNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"combat"
	Combat *GuildCombat `protobuf:"bytes,1,opt,name=combat,proto3" json:"combat"`
}

func (x *GuildCombatNotify) Reset() {
	*x = GuildCombatNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildCombatNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildCombatNotify) ProtoMessage() {}

func (x *GuildCombatNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildCombatNotify.ProtoReflect.Descriptor instead.
func (*GuildCombatNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{34}
}

func (x *GuildCombatNotify) GetCombat() *GuildCombat {
	if x != nil {
		return x.Combat
	}
	return nil
}

type ArmyArrivedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"land_army"
	LandArmy *LandArmy `protobuf:"bytes,1,opt,name=land_army,json=landArmy,proto3" json:"land_army"`
}

func (x *ArmyArrivedNotify) Reset() {
	*x = ArmyArrivedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyArrivedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyArrivedNotify) ProtoMessage() {}

func (x *ArmyArrivedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyArrivedNotify.ProtoReflect.Descriptor instead.
func (*ArmyArrivedNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{35}
}

func (x *ArmyArrivedNotify) GetLandArmy() *LandArmy {
	if x != nil {
		return x.LandArmy
	}
	return nil
}

type LandArmyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"land_army"
	LandArmy *LandArmy `protobuf:"bytes,1,opt,name=land_army,json=landArmy,proto3" json:"land_army"`
}

func (x *LandArmyNotify) Reset() {
	*x = LandArmyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandArmyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandArmyNotify) ProtoMessage() {}

func (x *LandArmyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandArmyNotify.ProtoReflect.Descriptor instead.
func (*LandArmyNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{36}
}

func (x *LandArmyNotify) GetLandArmy() *LandArmy {
	if x != nil {
		return x.LandArmy
	}
	return nil
}

type ArmyStatusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"army"
	Army *Army `protobuf:"bytes,1,opt,name=army,proto3" json:"army"`
}

func (x *ArmyStatusNotify) Reset() {
	*x = ArmyStatusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArmyStatusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmyStatusNotify) ProtoMessage() {}

func (x *ArmyStatusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArmyStatusNotify.ProtoReflect.Descriptor instead.
func (*ArmyStatusNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{37}
}

func (x *ArmyStatusNotify) GetArmy() *Army {
	if x != nil {
		return x.Army
	}
	return nil
}

type TradeEventNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"trade_team_event"
	TradeTeamEvent *TradeTeamEvent `protobuf:"bytes,1,opt,name=trade_team_event,json=tradeTeamEvent,proto3" json:"trade_team_event"`
}

func (x *TradeEventNotify) Reset() {
	*x = TradeEventNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeEventNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeEventNotify) ProtoMessage() {}

func (x *TradeEventNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeEventNotify.ProtoReflect.Descriptor instead.
func (*TradeEventNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{38}
}

func (x *TradeEventNotify) GetTradeTeamEvent() *TradeTeamEvent {
	if x != nil {
		return x.TradeTeamEvent
	}
	return nil
}

type TradeTeamStatusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"trade_team_status"
	TradeTeamStatus *TradeTeamStatus `protobuf:"bytes,1,opt,name=trade_team_status,json=tradeTeamStatus,proto3" json:"trade_team_status"`
}

func (x *TradeTeamStatusNotify) Reset() {
	*x = TradeTeamStatusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTeamStatusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTeamStatusNotify) ProtoMessage() {}

func (x *TradeTeamStatusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTeamStatusNotify.ProtoReflect.Descriptor instead.
func (*TradeTeamStatusNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{39}
}

func (x *TradeTeamStatusNotify) GetTradeTeamStatus() *TradeTeamStatus {
	if x != nil {
		return x.TradeTeamStatus
	}
	return nil
}

type PurchaseCargoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"cargo"
	Cargo *Cargo `protobuf:"bytes,2,opt,name=cargo,proto3" json:"cargo"`
}

func (x *PurchaseCargoRes) Reset() {
	*x = PurchaseCargoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseCargoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseCargoRes) ProtoMessage() {}

func (x *PurchaseCargoRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseCargoRes.ProtoReflect.Descriptor instead.
func (*PurchaseCargoRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{40}
}

func (x *PurchaseCargoRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *PurchaseCargoRes) GetCargo() *Cargo {
	if x != nil {
		return x.Cargo
	}
	return nil
}

type SaleCargoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"cargo"
	Cargo *Cargo `protobuf:"bytes,2,opt,name=cargo,proto3" json:"cargo"`
}

func (x *SaleCargoRes) Reset() {
	*x = SaleCargoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleCargoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleCargoRes) ProtoMessage() {}

func (x *SaleCargoRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleCargoRes.ProtoReflect.Descriptor instead.
func (*SaleCargoRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{41}
}

func (x *SaleCargoRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SaleCargoRes) GetCargo() *Cargo {
	if x != nil {
		return x.Cargo
	}
	return nil
}

type InvestRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"bank_info"
	BankInfo *BankInfo `protobuf:"bytes,2,opt,name=bank_info,json=bankInfo,proto3" json:"bank_info"`
}

func (x *InvestRes) Reset() {
	*x = InvestRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestRes) ProtoMessage() {}

func (x *InvestRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestRes.ProtoReflect.Descriptor instead.
func (*InvestRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{42}
}

func (x *InvestRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InvestRes) GetBankInfo() *BankInfo {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

type GetsCityBankRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"bank_info"
	BankInfo *BankInfo `protobuf:"bytes,1,opt,name=bank_info,json=bankInfo,proto3" json:"bank_info"`
}

func (x *GetsCityBankRes) Reset() {
	*x = GetsCityBankRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityBankRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityBankRes) ProtoMessage() {}

func (x *GetsCityBankRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityBankRes.ProtoReflect.Descriptor instead.
func (*GetsCityBankRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{43}
}

func (x *GetsCityBankRes) GetBankInfo() *BankInfo {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

type EscapeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
}

func (x *EscapeRes) Reset() {
	*x = EscapeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EscapeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscapeRes) ProtoMessage() {}

func (x *EscapeRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscapeRes.ProtoReflect.Descriptor instead.
func (*EscapeRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{44}
}

func (x *EscapeRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetsCityCommodityRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,3,opt,name=build_id,json=buildId,proto3" json:"build_id"`
	// @inject_tag: json:"total"
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total"`
	// @inject_tag: json:"commodities"
	Commodities []*CityCommodity `protobuf:"bytes,5,rep,name=commodities,proto3" json:"commodities"`
}

func (x *GetsCityCommodityRes) Reset() {
	*x = GetsCityCommodityRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityCommodityRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityCommodityRes) ProtoMessage() {}

func (x *GetsCityCommodityRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityCommodityRes.ProtoReflect.Descriptor instead.
func (*GetsCityCommodityRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{45}
}

func (x *GetsCityCommodityRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsCityCommodityRes) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsCityCommodityRes) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *GetsCityCommodityRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetsCityCommodityRes) GetCommodities() []*CityCommodity {
	if x != nil {
		return x.Commodities
	}
	return nil
}

type GetsCityPurchaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	// @inject_tag: json:"per_page"
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	// @inject_tag: json:"build_id"
	BuildId int32 `protobuf:"varint,3,opt,name=build_id,json=buildId,proto3" json:"build_id"`
	// @inject_tag: json:"total"
	Total int32 `protobuf:"varint,4,opt,name=total,proto3" json:"total"`
	// @inject_tag: json:"purchases"
	Purchases []*CityPurchase `protobuf:"bytes,5,rep,name=purchases,proto3" json:"purchases"`
}

func (x *GetsCityPurchaseRes) Reset() {
	*x = GetsCityPurchaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCityPurchaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCityPurchaseRes) ProtoMessage() {}

func (x *GetsCityPurchaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCityPurchaseRes.ProtoReflect.Descriptor instead.
func (*GetsCityPurchaseRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{46}
}

func (x *GetsCityPurchaseRes) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetsCityPurchaseRes) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *GetsCityPurchaseRes) GetBuildId() int32 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *GetsCityPurchaseRes) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetsCityPurchaseRes) GetPurchases() []*CityPurchase {
	if x != nil {
		return x.Purchases
	}
	return nil
}

type VisibleBuildsNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"builds"
	Builds []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds"`
}

func (x *VisibleBuildsNotify) Reset() {
	*x = VisibleBuildsNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisibleBuildsNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibleBuildsNotify) ProtoMessage() {}

func (x *VisibleBuildsNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibleBuildsNotify.ProtoReflect.Descriptor instead.
func (*VisibleBuildsNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{47}
}

func (x *VisibleBuildsNotify) GetBuilds() []*Build {
	if x != nil {
		return x.Builds
	}
	return nil
}

type VisibleTradeTeamNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"trade_teams"
	TradeTeams []*LandTradeTeam `protobuf:"bytes,1,rep,name=trade_teams,json=tradeTeams,proto3" json:"trade_teams"`
}

func (x *VisibleTradeTeamNotify) Reset() {
	*x = VisibleTradeTeamNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisibleTradeTeamNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibleTradeTeamNotify) ProtoMessage() {}

func (x *VisibleTradeTeamNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibleTradeTeamNotify.ProtoReflect.Descriptor instead.
func (*VisibleTradeTeamNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{48}
}

func (x *VisibleTradeTeamNotify) GetTradeTeams() []*LandTradeTeam {
	if x != nil {
		return x.TradeTeams
	}
	return nil
}

type VisibleArmyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"armies"
	Armies []*LandArmy `protobuf:"bytes,1,rep,name=armies,proto3" json:"armies"`
}

func (x *VisibleArmyNotify) Reset() {
	*x = VisibleArmyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisibleArmyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibleArmyNotify) ProtoMessage() {}

func (x *VisibleArmyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibleArmyNotify.ProtoReflect.Descriptor instead.
func (*VisibleArmyNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{49}
}

func (x *VisibleArmyNotify) GetArmies() []*LandArmy {
	if x != nil {
		return x.Armies
	}
	return nil
}

type VisibleCombatNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"combats"
	Combats []*GuildCombat `protobuf:"bytes,1,rep,name=combats,proto3" json:"combats"` //战斗信息
}

func (x *VisibleCombatNotify) Reset() {
	*x = VisibleCombatNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisibleCombatNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibleCombatNotify) ProtoMessage() {}

func (x *VisibleCombatNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibleCombatNotify.ProtoReflect.Descriptor instead.
func (*VisibleCombatNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{50}
}

func (x *VisibleCombatNotify) GetCombats() []*GuildCombat {
	if x != nil {
		return x.Combats
	}
	return nil
}

type GuildParcelNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"guild_id"
	GuildId int32 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id"`
	// @inject_tag: json:"parcels"
	Parcels []byte `protobuf:"bytes,2,opt,name=parcels,proto3" json:"parcels"`
}

func (x *GuildParcelNotify) Reset() {
	*x = GuildParcelNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildParcelNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildParcelNotify) ProtoMessage() {}

func (x *GuildParcelNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildParcelNotify.ProtoReflect.Descriptor instead.
func (*GuildParcelNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{51}
}

func (x *GuildParcelNotify) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildParcelNotify) GetParcels() []byte {
	if x != nil {
		return x.Parcels
	}
	return nil
}

type EnterOverNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterOverNotify) Reset() {
	*x = EnterOverNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterOverNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterOverNotify) ProtoMessage() {}

func (x *EnterOverNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterOverNotify.ProtoReflect.Descriptor instead.
func (*EnterOverNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{52}
}

type ScanOverNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScanOverNotify) Reset() {
	*x = ScanOverNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanOverNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanOverNotify) ProtoMessage() {}

func (x *ScanOverNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanOverNotify.ProtoReflect.Descriptor instead.
func (*ScanOverNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{53}
}

type LandBuildChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builds []*Build `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds"` // 需要变更的建筑
}

func (x *LandBuildChangeNotify) Reset() {
	*x = LandBuildChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LandBuildChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandBuildChangeNotify) ProtoMessage() {}

func (x *LandBuildChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandBuildChangeNotify.ProtoReflect.Descriptor instead.
func (*LandBuildChangeNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{54}
}

func (x *LandBuildChangeNotify) GetBuilds() []*Build {
	if x != nil {
		return x.Builds
	}
	return nil
}

type ParcelGuildNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos        int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
	OldGuildId int32 `protobuf:"varint,2,opt,name=old_guild_id,json=oldGuildId,proto3" json:"old_guild_id"`
	NewGuildId int32 `protobuf:"varint,3,opt,name=new_guild_id,json=newGuildId,proto3" json:"new_guild_id"`
}

func (x *ParcelGuildNotify) Reset() {
	*x = ParcelGuildNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParcelGuildNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParcelGuildNotify) ProtoMessage() {}

func (x *ParcelGuildNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParcelGuildNotify.ProtoReflect.Descriptor instead.
func (*ParcelGuildNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{55}
}

func (x *ParcelGuildNotify) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *ParcelGuildNotify) GetOldGuildId() int32 {
	if x != nil {
		return x.OldGuildId
	}
	return 0
}

func (x *ParcelGuildNotify) GetNewGuildId() int32 {
	if x != nil {
		return x.NewGuildId
	}
	return 0
}

type CreateLandBuildRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"build"
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build"`
}

func (x *CreateLandBuildRes) Reset() {
	*x = CreateLandBuildRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLandBuildRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLandBuildRes) ProtoMessage() {}

func (x *CreateLandBuildRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLandBuildRes.ProtoReflect.Descriptor instead.
func (*CreateLandBuildRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{56}
}

func (x *CreateLandBuildRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreateLandBuildRes) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type UpgradeLandBuildRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"build"
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build"`
}

func (x *UpgradeLandBuildRes) Reset() {
	*x = UpgradeLandBuildRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeLandBuildRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeLandBuildRes) ProtoMessage() {}

func (x *UpgradeLandBuildRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeLandBuildRes.ProtoReflect.Descriptor instead.
func (*UpgradeLandBuildRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{57}
}

func (x *UpgradeLandBuildRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpgradeLandBuildRes) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type MergeLandBuildRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"build"
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build"`
}

func (x *MergeLandBuildRes) Reset() {
	*x = MergeLandBuildRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeLandBuildRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeLandBuildRes) ProtoMessage() {}

func (x *MergeLandBuildRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeLandBuildRes.ProtoReflect.Descriptor instead.
func (*MergeLandBuildRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{58}
}

func (x *MergeLandBuildRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *MergeLandBuildRes) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type DeleteLandBuildRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"build"
	Build *Build `protobuf:"bytes,2,opt,name=build,proto3" json:"build"`
}

func (x *DeleteLandBuildRes) Reset() {
	*x = DeleteLandBuildRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLandBuildRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLandBuildRes) ProtoMessage() {}

func (x *DeleteLandBuildRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLandBuildRes.ProtoReflect.Descriptor instead.
func (*DeleteLandBuildRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteLandBuildRes) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DeleteLandBuildRes) GetBuild() *Build {
	if x != nil {
		return x.Build
	}
	return nil
}

type PlayerFightReportListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                 int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	PlayerFightReportList []*PlayerFightReport `protobuf:"bytes,1,rep,name=player_fight_report_list,json=playerFightReportList,proto3" json:"player_fight_report_list"`
}

func (x *PlayerFightReportListRes) Reset() {
	*x = PlayerFightReportListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFightReportListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFightReportListRes) ProtoMessage() {}

func (x *PlayerFightReportListRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFightReportListRes.ProtoReflect.Descriptor instead.
func (*PlayerFightReportListRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{60}
}

func (x *PlayerFightReportListRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PlayerFightReportListRes) GetPlayerFightReportList() []*PlayerFightReport {
	if x != nil {
		return x.PlayerFightReportList
	}
	return nil
}

type PlayerFightReportByFightIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerFightReport *PlayerFightReport `protobuf:"bytes,1,opt,name=player_fight_report,json=playerFightReport,proto3" json:"player_fight_report"`
}

func (x *PlayerFightReportByFightIdRes) Reset() {
	*x = PlayerFightReportByFightIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFightReportByFightIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFightReportByFightIdRes) ProtoMessage() {}

func (x *PlayerFightReportByFightIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFightReportByFightIdRes.ProtoReflect.Descriptor instead.
func (*PlayerFightReportByFightIdRes) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{61}
}

func (x *PlayerFightReportByFightIdRes) GetPlayerFightReport() *PlayerFightReport {
	if x != nil {
		return x.PlayerFightReport
	}
	return nil
}

type CombatReportNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos     int32            `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
	Reports *MapCombatReport `protobuf:"bytes,3,opt,name=reports,proto3" json:"reports"` //大地图战报
}

func (x *CombatReportNotify) Reset() {
	*x = CombatReportNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombatReportNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatReportNotify) ProtoMessage() {}

func (x *CombatReportNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatReportNotify.ProtoReflect.Descriptor instead.
func (*CombatReportNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{62}
}

func (x *CombatReportNotify) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *CombatReportNotify) GetReports() *MapCombatReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

type CombatStartOverNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos           int32 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos"`
	AttackArmyId  int64 `protobuf:"varint,2,opt,name=attack_army_id,json=attackArmyId,proto3" json:"attack_army_id"`    //攻击部队
	DefenseArmyId int64 `protobuf:"varint,3,opt,name=defense_army_id,json=defenseArmyId,proto3" json:"defense_army_id"` //防守部队
	Status        int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status"`                                      //1开始战斗 2结束战斗
}

func (x *CombatStartOverNotify) Reset() {
	*x = CombatStartOverNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombatStartOverNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatStartOverNotify) ProtoMessage() {}

func (x *CombatStartOverNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatStartOverNotify.ProtoReflect.Descriptor instead.
func (*CombatStartOverNotify) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{63}
}

func (x *CombatStartOverNotify) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *CombatStartOverNotify) GetAttackArmyId() int64 {
	if x != nil {
		return x.AttackArmyId
	}
	return 0
}

func (x *CombatStartOverNotify) GetDefenseArmyId() int64 {
	if x != nil {
		return x.DefenseArmyId
	}
	return 0
}

func (x *CombatStartOverNotify) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MapCombatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackArmyId            int64           `protobuf:"varint,2,opt,name=attack_army_id,json=attackArmyId,proto3" json:"attack_army_id"`                         //攻击部队
	DefenseArmyId           int64           `protobuf:"varint,3,opt,name=defense_army_id,json=defenseArmyId,proto3" json:"defense_army_id"`                      //防守部队
	AttackSkillIdList       []int64         `protobuf:"varint,4,rep,packed,name=attack_skill_id_list,json=attackSkillIdList,proto3" json:"attack_skill_id_list"` //本回合攻击部队放的技能ID
	DefenseSkillIdList      []int64         `protobuf:"varint,5,rep,packed,name=defense_skill_id_list,json=defenseSkillIdList,proto3" json:"defense_skill_id_list"`
	AttackPersonStatusList  []*PersonStatus `protobuf:"bytes,6,rep,name=attack_person_status_list,json=attackPersonStatusList,proto3" json:"attack_person_status_list"`
	DefensePersonStatusList []*PersonStatus `protobuf:"bytes,7,rep,name=defense_person_status_list,json=defensePersonStatusList,proto3" json:"defense_person_status_list"`
}

func (x *MapCombatReport) Reset() {
	*x = MapCombatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCombatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCombatReport) ProtoMessage() {}

func (x *MapCombatReport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCombatReport.ProtoReflect.Descriptor instead.
func (*MapCombatReport) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{64}
}

func (x *MapCombatReport) GetAttackArmyId() int64 {
	if x != nil {
		return x.AttackArmyId
	}
	return 0
}

func (x *MapCombatReport) GetDefenseArmyId() int64 {
	if x != nil {
		return x.DefenseArmyId
	}
	return 0
}

func (x *MapCombatReport) GetAttackSkillIdList() []int64 {
	if x != nil {
		return x.AttackSkillIdList
	}
	return nil
}

func (x *MapCombatReport) GetDefenseSkillIdList() []int64 {
	if x != nil {
		return x.DefenseSkillIdList
	}
	return nil
}

func (x *MapCombatReport) GetAttackPersonStatusList() []*PersonStatus {
	if x != nil {
		return x.AttackPersonStatusList
	}
	return nil
}

func (x *MapCombatReport) GetDefensePersonStatusList() []*PersonStatus {
	if x != nil {
		return x.DefensePersonStatusList
	}
	return nil
}

type FightReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttackArmyId  int64          `protobuf:"varint,1,opt,name=attack_army_id,json=attackArmyId,proto3" json:"attack_army_id"`    //攻击部队
	DefenseArmyId int64          `protobuf:"varint,2,opt,name=defense_army_id,json=defenseArmyId,proto3" json:"defense_army_id"` //防守部队
	Round         int32          `protobuf:"varint,3,opt,name=round,proto3" json:"round"`                                        //当前回合
	RoundReports  []*RoundReport `protobuf:"bytes,4,rep,name=round_reports,json=roundReports,proto3" json:"round_reports"`       //回合动作战报 每个动作一个对象
	StopBuffs     []int32        `protobuf:"varint,5,rep,packed,name=stop_buffs,json=stopBuffs,proto3" json:"stop_buffs"`        // 到期的buff销毁
}

func (x *FightReport) Reset() {
	*x = FightReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FightReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightReport) ProtoMessage() {}

func (x *FightReport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FightReport.ProtoReflect.Descriptor instead.
func (*FightReport) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{65}
}

func (x *FightReport) GetAttackArmyId() int64 {
	if x != nil {
		return x.AttackArmyId
	}
	return 0
}

func (x *FightReport) GetDefenseArmyId() int64 {
	if x != nil {
		return x.DefenseArmyId
	}
	return 0
}

func (x *FightReport) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *FightReport) GetRoundReports() []*RoundReport {
	if x != nil {
		return x.RoundReports
	}
	return nil
}

func (x *FightReport) GetStopBuffs() []int32 {
	if x != nil {
		return x.StopBuffs
	}
	return nil
}

type RoundReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArmyId      int64          `protobuf:"varint,1,opt,name=army_id,json=armyId,proto3" json:"army_id"` //发动攻击的部队
	Pos         int32          `protobuf:"varint,2,opt,name=pos,proto3" json:"pos"`
	BattleEvent []*BattleEvent `protobuf:"bytes,3,rep,name=battle_event,json=battleEvent,proto3" json:"battle_event"`
}

func (x *RoundReport) Reset() {
	*x = RoundReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundReport) ProtoMessage() {}

func (x *RoundReport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundReport.ProtoReflect.Descriptor instead.
func (*RoundReport) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{66}
}

func (x *RoundReport) GetArmyId() int64 {
	if x != nil {
		return x.ArmyId
	}
	return 0
}

func (x *RoundReport) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *RoundReport) GetBattleEvent() []*BattleEvent {
	if x != nil {
		return x.BattleEvent
	}
	return nil
}

// -----------------------------------------------------
type BankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"invest"
	Invest int64 `protobuf:"varint,1,opt,name=invest,proto3" json:"invest"` //王国投资额
	// @inject_tag: json:"self_invest"
	SelfInvest int32 `protobuf:"varint,2,opt,name=self_invest,json=selfInvest,proto3" json:"self_invest"` //个人累计投资
	// @inject_tag: json:"purchase_count"
	PurchaseCount int32 `protobuf:"varint,3,opt,name=purchase_count,json=purchaseCount,proto3" json:"purchase_count"` //可购买特产品数量
	// @inject_tag: json:"discount"
	Discount *Money `protobuf:"bytes,4,opt,name=discount,proto3" json:"discount"` //优惠额
	// @inject_tag: json:"products"
	Products []int32 `protobuf:"varint,5,rep,packed,name=products,proto3" json:"products"` //可购买特产品等级
	// @inject_tag: json:"invests"
	Invests []*GuildInvest `protobuf:"bytes,6,rep,name=invests,proto3" json:"invests"` //所有王国投资情况
}

func (x *BankInfo) Reset() {
	*x = BankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankInfo) ProtoMessage() {}

func (x *BankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankInfo.ProtoReflect.Descriptor instead.
func (*BankInfo) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{67}
}

func (x *BankInfo) GetInvest() int64 {
	if x != nil {
		return x.Invest
	}
	return 0
}

func (x *BankInfo) GetSelfInvest() int32 {
	if x != nil {
		return x.SelfInvest
	}
	return 0
}

func (x *BankInfo) GetPurchaseCount() int32 {
	if x != nil {
		return x.PurchaseCount
	}
	return 0
}

func (x *BankInfo) GetDiscount() *Money {
	if x != nil {
		return x.Discount
	}
	return nil
}

func (x *BankInfo) GetProducts() []int32 {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *BankInfo) GetInvests() []*GuildInvest {
	if x != nil {
		return x.Invests
	}
	return nil
}

type GuildInvest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"guild"
	Guild *Guild `protobuf:"bytes,1,opt,name=guild,proto3" json:"guild"` //王国
	// @inject_tag: json:"invest"
	Invest int64 `protobuf:"varint,2,opt,name=invest,proto3" json:"invest"` //投资额度
}

func (x *GuildInvest) Reset() {
	*x = GuildInvest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuildInvest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInvest) ProtoMessage() {}

func (x *GuildInvest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInvest.ProtoReflect.Descriptor instead.
func (*GuildInvest) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{68}
}

func (x *GuildInvest) GetGuild() *Guild {
	if x != nil {
		return x.Guild
	}
	return nil
}

func (x *GuildInvest) GetInvest() int64 {
	if x != nil {
		return x.Invest
	}
	return 0
}

type TradeTeamEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"time"
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
	// @inject_tag: json:"type"
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	// @inject_tag: json:"result"
	Result *Result `protobuf:"bytes,3,opt,name=result,proto3" json:"result"`
	// @inject_tag: json:"get_goods"
	GetGoods *GoodsCount `protobuf:"bytes,4,opt,name=get_goods,json=getGoods,proto3" json:"get_goods"`
	// @inject_tag: json:"lost_goods"
	LostGoods *GoodsCount `protobuf:"bytes,5,opt,name=lost_goods,json=lostGoods,proto3" json:"lost_goods"`
}

func (x *TradeTeamEvent) Reset() {
	*x = TradeTeamEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeTeamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeTeamEvent) ProtoMessage() {}

func (x *TradeTeamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeTeamEvent.ProtoReflect.Descriptor instead.
func (*TradeTeamEvent) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{69}
}

func (x *TradeTeamEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TradeTeamEvent) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradeTeamEvent) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TradeTeamEvent) GetGetGoods() *GoodsCount {
	if x != nil {
		return x.GetGoods
	}
	return nil
}

func (x *TradeTeamEvent) GetLostGoods() *GoodsCount {
	if x != nil {
		return x.LostGoods
	}
	return nil
}

type CityCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"goods_id"
	GoodsId int32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	// @inject_tag: json:"count"
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,3,opt,name=level,proto3" json:"level"`
	// @inject_tag: json:"price"
	Price *Money `protobuf:"bytes,4,opt,name=price,proto3" json:"price"` //金币
}

func (x *CityCommodity) Reset() {
	*x = CityCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityCommodity) ProtoMessage() {}

func (x *CityCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityCommodity.ProtoReflect.Descriptor instead.
func (*CityCommodity) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{70}
}

func (x *CityCommodity) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *CityCommodity) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CityCommodity) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CityCommodity) GetPrice() *Money {
	if x != nil {
		return x.Price
	}
	return nil
}

type CityPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"goods_id"
	GoodsId int32 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	// @inject_tag: json:"level"
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	// @inject_tag: json:"price"
	Price *Money `protobuf:"bytes,3,opt,name=price,proto3" json:"price"` //金币
}

func (x *CityPurchase) Reset() {
	*x = CityPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CityPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityPurchase) ProtoMessage() {}

func (x *CityPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityPurchase.ProtoReflect.Descriptor instead.
func (*CityPurchase) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{71}
}

func (x *CityPurchase) GetGoodsId() int32 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *CityPurchase) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CityPurchase) GetPrice() *Money {
	if x != nil {
		return x.Price
	}
	return nil
}

type Consume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"water"
	Water int32 `protobuf:"varint,1,opt,name=water,proto3" json:"water"` //水
	// @inject_tag: json:"food"
	Food int32 `protobuf:"varint,2,opt,name=food,proto3" json:"food"` //食物
	// @inject_tag: json:"forage"
	Forage int32 `protobuf:"varint,3,opt,name=forage,proto3" json:"forage"` //草料
}

func (x *Consume) Reset() {
	*x = Consume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consume) ProtoMessage() {}

func (x *Consume) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consume.ProtoReflect.Descriptor instead.
func (*Consume) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{72}
}

func (x *Consume) GetWater() int32 {
	if x != nil {
		return x.Water
	}
	return 0
}

func (x *Consume) GetFood() int32 {
	if x != nil {
		return x.Food
	}
	return 0
}

func (x *Consume) GetForage() int32 {
	if x != nil {
		return x.Forage
	}
	return 0
}

// ///////////////////////////////////////////
type PlayerFightReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightId        int64           `protobuf:"varint,1,opt,name=FightId,proto3" json:"FightId"`           //战斗ID
	CreateTimeAt   int64           `protobuf:"varint,2,opt,name=CreateTimeAt,proto3" json:"CreateTimeAt"` //创建时间戳
	TheMatchReport *TheMatchReport `protobuf:"bytes,3,opt,name=the_match_report,json=theMatchReport,proto3" json:"the_match_report"`
	Pos            int32           `protobuf:"varint,4,opt,name=pos,proto3" json:"pos"`
	Result         int32           `protobuf:"varint,5,opt,name=Result,proto3" json:"Result"` // 1平  2胜 3败
}

func (x *PlayerFightReport) Reset() {
	*x = PlayerFightReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFightReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFightReport) ProtoMessage() {}

func (x *PlayerFightReport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFightReport.ProtoReflect.Descriptor instead.
func (*PlayerFightReport) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{73}
}

func (x *PlayerFightReport) GetFightId() int64 {
	if x != nil {
		return x.FightId
	}
	return 0
}

func (x *PlayerFightReport) GetCreateTimeAt() int64 {
	if x != nil {
		return x.CreateTimeAt
	}
	return 0
}

func (x *PlayerFightReport) GetTheMatchReport() *TheMatchReport {
	if x != nil {
		return x.TheMatchReport
	}
	return nil
}

func (x *PlayerFightReport) GetPos() int32 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *PlayerFightReport) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type TheMatchReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightReportList []*FightReport `protobuf:"bytes,1,rep,name=fight_report_list,json=fightReportList,proto3" json:"fight_report_list"`
}

func (x *TheMatchReport) Reset() {
	*x = TheMatchReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheMatchReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheMatchReport) ProtoMessage() {}

func (x *TheMatchReport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheMatchReport.ProtoReflect.Descriptor instead.
func (*TheMatchReport) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{74}
}

func (x *TheMatchReport) GetFightReportList() []*FightReport {
	if x != nil {
		return x.FightReportList
	}
	return nil
}

type BattleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*BattleEvent_SubSkillEvent
	//	*BattleEvent_AttackEvent
	//	*BattleEvent_BuffEffectEvent
	Event isBattleEvent_Event `protobuf_oneof:"event"`
}

func (x *BattleEvent) Reset() {
	*x = BattleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleEvent) ProtoMessage() {}

func (x *BattleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleEvent.ProtoReflect.Descriptor instead.
func (*BattleEvent) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{75}
}

func (m *BattleEvent) GetEvent() isBattleEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *BattleEvent) GetSubSkillEvent() *SubSkillEvent {
	if x, ok := x.GetEvent().(*BattleEvent_SubSkillEvent); ok {
		return x.SubSkillEvent
	}
	return nil
}

func (x *BattleEvent) GetAttackEvent() *AttackEvent {
	if x, ok := x.GetEvent().(*BattleEvent_AttackEvent); ok {
		return x.AttackEvent
	}
	return nil
}

func (x *BattleEvent) GetBuffEffectEvent() *BuffEffectEvent {
	if x, ok := x.GetEvent().(*BattleEvent_BuffEffectEvent); ok {
		return x.BuffEffectEvent
	}
	return nil
}

type isBattleEvent_Event interface {
	isBattleEvent_Event()
}

type BattleEvent_SubSkillEvent struct {
	SubSkillEvent *SubSkillEvent `protobuf:"bytes,1,opt,name=sub_skill_event,json=subSkillEvent,proto3,oneof"`
}

type BattleEvent_AttackEvent struct {
	AttackEvent *AttackEvent `protobuf:"bytes,2,opt,name=attack_event,json=attackEvent,proto3,oneof"`
}

type BattleEvent_BuffEffectEvent struct {
	BuffEffectEvent *BuffEffectEvent `protobuf:"bytes,3,opt,name=buff_effect_event,json=buffEffectEvent,proto3,oneof"`
}

func (*BattleEvent_SubSkillEvent) isBattleEvent_Event() {}

func (*BattleEvent_AttackEvent) isBattleEvent_Event() {}

func (*BattleEvent_BuffEffectEvent) isBattleEvent_Event() {}

// 子技能战报集合
type SubSkillEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"skill_id"
	SkillId int32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id"`
	// @inject_tag: json:"skill_name"
	SkillName string `protobuf:"bytes,6,opt,name=skill_name,json=skillName,proto3" json:"skill_name"`
	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,2,opt,name=person,proto3" json:"person"` //发动技能人
	// @inject_tag: json:"target_records"
	TargetRecords []*TargetRecord `protobuf:"bytes,3,rep,name=target_records,json=targetRecords,proto3" json:"target_records"` // 目标战报，一个子技能有多个目标
	// @inject_tag: json:"add_buff_record"
	AddBuffRecord []*AddBuffRecord `protobuf:"bytes,4,rep,name=add_buff_record,json=addBuffRecord,proto3" json:"add_buff_record"` // 添加buff战报，一个子技能有多个目标
	// @inject_tag: json:"remove_buff_record"
	RemoveBuffRecord []*RemoveBuffRecord `protobuf:"bytes,5,rep,name=remove_buff_record,json=removeBuffRecord,proto3" json:"remove_buff_record"` // 需要移除的buff战报，净化类技能使用
}

func (x *SubSkillEvent) Reset() {
	*x = SubSkillEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubSkillEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubSkillEvent) ProtoMessage() {}

func (x *SubSkillEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubSkillEvent.ProtoReflect.Descriptor instead.
func (*SubSkillEvent) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{76}
}

func (x *SubSkillEvent) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *SubSkillEvent) GetSkillName() string {
	if x != nil {
		return x.SkillName
	}
	return ""
}

func (x *SubSkillEvent) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *SubSkillEvent) GetTargetRecords() []*TargetRecord {
	if x != nil {
		return x.TargetRecords
	}
	return nil
}

func (x *SubSkillEvent) GetAddBuffRecord() []*AddBuffRecord {
	if x != nil {
		return x.AddBuffRecord
	}
	return nil
}

func (x *SubSkillEvent) GetRemoveBuffRecord() []*RemoveBuffRecord {
	if x != nil {
		return x.RemoveBuffRecord
	}
	return nil
}

// 子技能单个攻击单位战报
type TargetRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"effect_type"
	EffectType EffectType `protobuf:"varint,1,opt,name=effect_type,json=effectType,proto3,enum=pb.EffectType" json:"effect_type"`
	// @inject_tag: json:"num"
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num"` //治疗伤害量
	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,3,opt,name=person,proto3" json:"person"` //目标人
	// @inject_tag: json:"crit"
	Crit bool `protobuf:"varint,5,opt,name=crit,proto3" json:"crit"` //是否暴击
}

func (x *TargetRecord) Reset() {
	*x = TargetRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetRecord) ProtoMessage() {}

func (x *TargetRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetRecord.ProtoReflect.Descriptor instead.
func (*TargetRecord) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{77}
}

func (x *TargetRecord) GetEffectType() EffectType {
	if x != nil {
		return x.EffectType
	}
	return EffectType_Hurt
}

func (x *TargetRecord) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *TargetRecord) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *TargetRecord) GetCrit() bool {
	if x != nil {
		return x.Crit
	}
	return false
}

type AddBuffRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"buff_type"
	BuffType int32 `protobuf:"varint,1,opt,name=buff_type,json=buffType,proto3" json:"buff_type"` //buff类型
	// @inject_tag: json:"buff_name"
	BuffName string `protobuf:"bytes,5,opt,name=buff_name,json=buffName,proto3" json:"buff_name"`
	// @inject_tag: json:"round"
	Round int32 `protobuf:"varint,2,opt,name=round,proto3" json:"round"` //buff持续回合
	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,3,opt,name=person,proto3" json:"person"` //目标人
	// @inject_tag: json:"buff_id"
	BuffId int32 `protobuf:"varint,4,opt,name=buff_id,json=buffId,proto3" json:"buff_id"`
}

func (x *AddBuffRecord) Reset() {
	*x = AddBuffRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBuffRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBuffRecord) ProtoMessage() {}

func (x *AddBuffRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBuffRecord.ProtoReflect.Descriptor instead.
func (*AddBuffRecord) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{78}
}

func (x *AddBuffRecord) GetBuffType() int32 {
	if x != nil {
		return x.BuffType
	}
	return 0
}

func (x *AddBuffRecord) GetBuffName() string {
	if x != nil {
		return x.BuffName
	}
	return ""
}

func (x *AddBuffRecord) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *AddBuffRecord) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *AddBuffRecord) GetBuffId() int32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

type RemoveBuffRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,3,opt,name=person,proto3" json:"person"` //目标人
	// @inject_tag: json:"buff_id"
	BuffId []int32 `protobuf:"varint,4,rep,packed,name=buff_id,json=buffId,proto3" json:"buff_id"`
	// @inject_tag: json:"buff_name"
	BuffName []string `protobuf:"bytes,5,rep,name=buff_name,json=buffName,proto3" json:"buff_name"`
}

func (x *RemoveBuffRecord) Reset() {
	*x = RemoveBuffRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBuffRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBuffRecord) ProtoMessage() {}

func (x *RemoveBuffRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBuffRecord.ProtoReflect.Descriptor instead.
func (*RemoveBuffRecord) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{79}
}

func (x *RemoveBuffRecord) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *RemoveBuffRecord) GetBuffId() []int32 {
	if x != nil {
		return x.BuffId
	}
	return nil
}

func (x *RemoveBuffRecord) GetBuffName() []string {
	if x != nil {
		return x.BuffName
	}
	return nil
}

type AttackEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,2,opt,name=person,proto3" json:"person"` //发动攻击人
	// @inject_tag: json:"target_records"
	TargetRecords []*TargetRecord `protobuf:"bytes,3,rep,name=target_records,json=targetRecords,proto3" json:"target_records"` // 目标战报，一个子技能有多个目标
}

func (x *AttackEvent) Reset() {
	*x = AttackEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttackEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttackEvent) ProtoMessage() {}

func (x *AttackEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttackEvent.ProtoReflect.Descriptor instead.
func (*AttackEvent) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{80}
}

func (x *AttackEvent) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *AttackEvent) GetTargetRecords() []*TargetRecord {
	if x != nil {
		return x.TargetRecords
	}
	return nil
}

// 持续掉血 持续治疗类buff
type BuffEffectEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"effect_type"
	EffectType EffectType `protobuf:"varint,1,opt,name=effect_type,json=effectType,proto3,enum=pb.EffectType" json:"effect_type"`
	// @inject_tag: json:"num"
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num"` //治疗伤害量
	// @inject_tag: json:"person"
	Person *PersonStatus `protobuf:"bytes,3,opt,name=person,proto3" json:"person"` //效果承受人
	// @inject_tag: json:"buff_id"
	BuffId int32 `protobuf:"varint,4,opt,name=buff_id,json=buffId,proto3" json:"buff_id"`
	// @inject_tag: json:"buff_name"
	BuffName string `protobuf:"bytes,5,opt,name=buff_name,json=buffName,proto3" json:"buff_name"`
}

func (x *BuffEffectEvent) Reset() {
	*x = BuffEffectEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffEffectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffEffectEvent) ProtoMessage() {}

func (x *BuffEffectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffEffectEvent.ProtoReflect.Descriptor instead.
func (*BuffEffectEvent) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{81}
}

func (x *BuffEffectEvent) GetEffectType() EffectType {
	if x != nil {
		return x.EffectType
	}
	return EffectType_Hurt
}

func (x *BuffEffectEvent) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *BuffEffectEvent) GetPerson() *PersonStatus {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *BuffEffectEvent) GetBuffId() int32 {
	if x != nil {
		return x.BuffId
	}
	return 0
}

func (x *BuffEffectEvent) GetBuffName() string {
	if x != nil {
		return x.BuffName
	}
	return ""
}

type PersonStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"person_id"
	PersonId int32 `protobuf:"varint,1,opt,name=person_id,json=personId,proto3" json:"person_id"` //角色ID
	// @inject_tag: json:"live_soldier"
	LiveSoldier int32 `protobuf:"varint,2,opt,name=live_soldier,json=liveSoldier,proto3" json:"live_soldier"` //总生存士兵
	// @inject_tag: json:"dead_soldier"
	DeadSoldier int32 `protobuf:"varint,3,opt,name=dead_soldier,json=deadSoldier,proto3" json:"dead_soldier"` //总死亡士兵
	// @inject_tag: json:"injured_soldier"
	InjuredSoldier int32 `protobuf:"varint,4,opt,name=injured_soldier,json=injuredSoldier,proto3" json:"injured_soldier"` //总受伤士兵
	// @inject_tag: json:"person_name"
	PersonName string `protobuf:"bytes,5,opt,name=person_name,json=personName,proto3" json:"person_name"` //族人姓名
	// @inject_tag: json:"cur_dead_soldier"
	CurDeadSoldier int32 `protobuf:"varint,7,opt,name=cur_dead_soldier,json=curDeadSoldier,proto3" json:"cur_dead_soldier"` //死亡士兵数量
	// @inject_tag: json:"cur_injured_soldier"
	CurInjuredSoldier int32 `protobuf:"varint,8,opt,name=cur_injured_soldier,json=curInjuredSoldier,proto3" json:"cur_injured_soldier"` //受伤士兵数量
	// @inject_tag: json:"heal_soldier"
	HealSoldier int32 `protobuf:"varint,9,opt,name=heal_soldier,json=healSoldier,proto3" json:"heal_soldier"` //治好的士兵数量
}

func (x *PersonStatus) Reset() {
	*x = PersonStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_land_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonStatus) ProtoMessage() {}

func (x *PersonStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_land_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonStatus.ProtoReflect.Descriptor instead.
func (*PersonStatus) Descriptor() ([]byte, []int) {
	return file_pb_proto_land_proto_rawDescGZIP(), []int{82}
}

func (x *PersonStatus) GetPersonId() int32 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *PersonStatus) GetLiveSoldier() int32 {
	if x != nil {
		return x.LiveSoldier
	}
	return 0
}

func (x *PersonStatus) GetDeadSoldier() int32 {
	if x != nil {
		return x.DeadSoldier
	}
	return 0
}

func (x *PersonStatus) GetInjuredSoldier() int32 {
	if x != nil {
		return x.InjuredSoldier
	}
	return 0
}

func (x *PersonStatus) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *PersonStatus) GetCurDeadSoldier() int32 {
	if x != nil {
		return x.CurDeadSoldier
	}
	return 0
}

func (x *PersonStatus) GetCurInjuredSoldier() int32 {
	if x != nil {
		return x.CurInjuredSoldier
	}
	return 0
}

func (x *PersonStatus) GetHealSoldier() int32 {
	if x != nil {
		return x.HealSoldier
	}
	return 0
}

var File_pb_proto_land_proto protoreflect.FileDescriptor

var file_pb_proto_land_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x15, 0x70, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfe, 0x0b, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0e,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0d, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6c,
	0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a,
	0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4c, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x13, 0x67, 0x6f, 0x74, 0x6f,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x74, 0x6f, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x67,
	0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x3b, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x64,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x0c,
	0x67, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x32, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x77, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x57, 0x61, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x61,
	0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0e, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x67,
	0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x67,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x42, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74,
	0x79, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x65,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x51, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x73,
	0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x67,
	0x65, 0x74, 0x73, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x14, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x6e, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x4e, 0x0a, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x61,
	0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c,
	0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x48, 0x0a, 0x14, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x64,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x15,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e,
	0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x5e, 0x0a, 0x1c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x18, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x6f, 0x0a, 0x23, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65,
	0x71, 0x22, 0xc2, 0x16, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x0e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x65, 0x78, 0x69, 0x74, 0x5f,
	0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4c,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x13, 0x67, 0x6f, 0x74,
	0x6f, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10,
	0x67, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x5f,
	0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d,
	0x64, 0x65, 0x63, 0x6c, 0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x0c, 0x67, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x77, 0x61, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x57, 0x61, 0x72, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x57,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x42,
	0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69,
	0x74, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x73, 0x63,
	0x61, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x17, 0x67, 0x65, 0x74,
	0x73, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x16,
	0x67, 0x65, 0x74, 0x73, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74,
	0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14,
	0x75, 0x6e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x11, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c,
	0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x13,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x6c, 0x61, 0x6e,
	0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x61, 0x6e, 0x64,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x15, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61,
	0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x47, 0x0a,
	0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x00, 0x52, 0x11, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x47, 0x0a, 0x13, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x41, 0x72, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x11, 0x61, 0x72,
	0x6d, 0x79, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x3e, 0x0a, 0x10, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c,
	0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52,
	0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x44, 0x0a, 0x12, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x72, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x48, 0x00, 0x52, 0x10, 0x61, 0x72, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x44, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x54, 0x0a, 0x18, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x15, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x4d, 0x0a, 0x15, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x13, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x57, 0x0a, 0x19, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48,
	0x00, 0x52, 0x16, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x47, 0x0a, 0x13, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52,
	0x11, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x4d, 0x0a, 0x15, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x62, 0x61, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x62, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x13, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x47, 0x0a, 0x13, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x11, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x61,
	0x72, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x41, 0x0a, 0x11, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x4f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3e, 0x0a,
	0x10, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x4f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x73,
	0x63, 0x61, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x54, 0x0a,
	0x18, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x15, 0x6c, 0x61,
	0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x47, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x5f, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x72, 0x63, 0x65,
	0x6c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x54, 0x0a, 0x18,
	0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f,
	0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x5e,
	0x0a, 0x1c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x76,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x18, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x6f,
	0x0a, 0x23, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x1d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x42,
	0x05, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x78, 0x69, 0x74, 0x4c, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x4c, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x2c, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x21, 0x0a, 0x0d, 0x44, 0x65, 0x63, 0x6c,
	0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x37, 0x0a, 0x0a, 0x47,
	0x6f, 0x74, 0x6f, 0x57, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x6d,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x33, 0x0a, 0x10, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x52, 0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x22, 0x2f, 0x0a, 0x0c, 0x53, 0x61, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x72, 0x67, 0x6f, 0x52, 0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x22, 0x49, 0x0a, 0x09, 0x49, 0x6e,
	0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74,
	0x79, 0x42, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x22, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x41, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x53, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a,
	0x18, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x22, 0x39, 0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a,
	0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x3f, 0x0a,
	0x11, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61,
	0x73, 0x5f, 0x77, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73,
	0x57, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x78, 0x69, 0x74, 0x4c, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6e, 0x4c, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x6f, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a,
	0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x11, 0x55, 0x6e,
	0x73, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x74,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x47, 0x6f,
	0x74, 0x6f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x74, 0x65,
	0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x5c, 0x0a, 0x0d, 0x44, 0x65,
	0x63, 0x6c, 0x61, 0x72, 0x65, 0x57, 0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x22, 0x5b, 0x0a, 0x0a, 0x47, 0x6f, 0x74, 0x6f,
	0x57, 0x61, 0x72, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x6c, 0x61,
	0x6e, 0x64, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x64, 0x41, 0x72, 0x6d, 0x79, 0x22, 0x30, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x43, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x30, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x3c, 0x0a, 0x11,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x41, 0x72,
	0x6d, 0x79, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x29, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x22, 0x3b, 0x0a, 0x0e, 0x4c, 0x61,
	0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29, 0x0a, 0x09,
	0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x22, 0x30, 0x0a, 0x10, 0x41, 0x72, 0x6d, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x61,
	0x72, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x72, 0x6d, 0x79, 0x52, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x22, 0x50, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x3c, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x15, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x3f, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x57, 0x0a, 0x10, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a,
	0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x22, 0x53,
	0x0a, 0x0c, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x67, 0x6f, 0x22, 0x5a, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x42, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2f, 0x0a,
	0x09, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xab,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xa5, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x73, 0x43, 0x69, 0x74, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x74,
	0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x06, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x4c,
	0x0a, 0x16, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x39, 0x0a, 0x11,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x72, 0x6d, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x6d, 0x79, 0x52,
	0x06, 0x61, 0x72, 0x6d, 0x69, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x29,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x73, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72,
	0x63, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x72, 0x63,
	0x65, 0x6c, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6e, 0x4f, 0x76,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x3a, 0x0a, 0x15, 0x4c, 0x61, 0x6e, 0x64,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x21, 0x0a, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x06, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x63, 0x65, 0x6c, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6f,
	0x6c, 0x64, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22,
	0x59, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x5a, 0x0a, 0x13, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x58, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x4c,
	0x61, 0x6e, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x22, 0x59, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4e,
	0x0a, 0x18, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x15, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x66,
	0x0a, 0x1d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x45, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x55, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x2d,
	0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x8f, 0x01,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xdf, 0x02, 0x0a, 0x0f, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x72,
	0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x49,
	0x64, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x11, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x12, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x19, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x16, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x17, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x72, 0x6d, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x61, 0x72, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x75, 0x66, 0x66, 0x73, 0x22, 0x6c, 0x0a, 0x0b, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x6d,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x08, 0x42, 0x61, 0x6e,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x0b, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x67, 0x65,
	0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x67,
	0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x6c, 0x6f, 0x73, 0x74, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x73,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x60, 0x0a, 0x0c, 0x43, 0x69, 0x74, 0x79, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x4b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xb9,
	0x01, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x46, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x41, 0x74, 0x12, 0x3c, 0x0a, 0x10, 0x74, 0x68, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x68, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x0e, 0x74, 0x68, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a, 0x0e, 0x54, 0x68,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x11,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x66, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x75, 0x62,
	0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x11,
	0x62, 0x75, 0x66, 0x66, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x66,
	0x66, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f,
	0x62, 0x75, 0x66, 0x66, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f, 0x62,
	0x75, 0x66, 0x66, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x42, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x75, 0x66,
	0x66, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x63, 0x72, 0x69, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x66, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62,
	0x75, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x22, 0x72, 0x0a,
	0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x75, 0x66, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62,
	0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75,
	0x66, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x70, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x66, 0x66, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb8, 0x02, 0x0a, 0x0c, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6c, 0x69, 0x76, 0x65, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x61, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x69, 0x6e, 0x6a, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x6a, 0x75, 0x72, 0x65, 0x64,
	0x53, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x5f,
	0x64, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x44, 0x65, 0x61, 0x64, 0x53, 0x6f, 0x6c, 0x64, 0x69,
	0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x5f, 0x69, 0x6e, 0x6a, 0x75, 0x72, 0x65,
	0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x63, 0x75, 0x72, 0x49, 0x6e, 0x6a, 0x75, 0x72, 0x65, 0x64, 0x53, 0x6f, 0x6c, 0x64, 0x69,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x69,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x53, 0x6f,
	0x6c, 0x64, 0x69, 0x65, 0x72, 0x2a, 0x20, 0x0a, 0x0a, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x75, 0x72, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x65, 0x61, 0x6c, 0x10, 0x01, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_proto_land_proto_rawDescOnce sync.Once
	file_pb_proto_land_proto_rawDescData = file_pb_proto_land_proto_rawDesc
)

func file_pb_proto_land_proto_rawDescGZIP() []byte {
	file_pb_proto_land_proto_rawDescOnce.Do(func() {
		file_pb_proto_land_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_proto_land_proto_rawDescData)
	})
	return file_pb_proto_land_proto_rawDescData
}

var file_pb_proto_land_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_proto_land_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_pb_proto_land_proto_goTypes = []interface{}{
	(EffectType)(0),                       // 0: pb.EffectType
	(*LandReq)(nil),                       // 1: pb.LandReq
	(*LandRes)(nil),                       // 2: pb.LandRes
	(*EnterLandReq)(nil),                  // 3: pb.EnterLandReq
	(*ExitLandReq)(nil),                   // 4: pb.ExitLandReq
	(*ScanLandReq)(nil),                   // 5: pb.ScanLandReq
	(*SetTradeDestReq)(nil),               // 6: pb.SetTradeDestReq
	(*GotoTradeDestReq)(nil),              // 7: pb.GotoTradeDestReq
	(*DeclareWarReq)(nil),                 // 8: pb.DeclareWarReq
	(*GotoWarReq)(nil),                    // 9: pb.GotoWarReq
	(*StopWarReq)(nil),                    // 10: pb.StopWarReq
	(*PurchaseCargoReq)(nil),              // 11: pb.PurchaseCargoReq
	(*SaleCargoReq)(nil),                  // 12: pb.SaleCargoReq
	(*InvestReq)(nil),                     // 13: pb.InvestReq
	(*GetsCityBankReq)(nil),               // 14: pb.GetsCityBankReq
	(*EscapeReq)(nil),                     // 15: pb.EscapeReq
	(*GetsCityCommodityReq)(nil),          // 16: pb.GetsCityCommodityReq
	(*GetsCityPurchaseReq)(nil),           // 17: pb.GetsCityPurchaseReq
	(*UnsetTradeDestReq)(nil),             // 18: pb.UnsetTradeDestReq
	(*CreateLandBuildReq)(nil),            // 19: pb.CreateLandBuildReq
	(*UpgradeLandBuildReq)(nil),           // 20: pb.UpgradeLandBuildReq
	(*MergeLandBuildReq)(nil),             // 21: pb.MergeLandBuildReq
	(*DeleteLandBuildReq)(nil),            // 22: pb.DeleteLandBuildReq
	(*PlayerFightReportListReq)(nil),      // 23: pb.PlayerFightReportListReq
	(*PlayerFightReportByFightIdReq)(nil), // 24: pb.PlayerFightReportByFightIdReq
	(*EnterLandRes)(nil),                  // 25: pb.EnterLandRes
	(*ExitLandRes)(nil),                   // 26: pb.ExitLandRes
	(*ScanLandRes)(nil),                   // 27: pb.ScanLandRes
	(*SetTradeDestRes)(nil),               // 28: pb.SetTradeDestRes
	(*UnsetTradeDestRes)(nil),             // 29: pb.UnsetTradeDestRes
	(*GotoTradeDestRes)(nil),              // 30: pb.GotoTradeDestRes
	(*DeclareWarRes)(nil),                 // 31: pb.DeclareWarRes
	(*GotoWarRes)(nil),                    // 32: pb.GotoWarRes
	(*StopWarRes)(nil),                    // 33: pb.StopWarRes
	(*TradeTeamNotify)(nil),               // 34: pb.TradeTeamNotify
	(*GuildCombatNotify)(nil),             // 35: pb.GuildCombatNotify
	(*ArmyArrivedNotify)(nil),             // 36: pb.ArmyArrivedNotify
	(*LandArmyNotify)(nil),                // 37: pb.LandArmyNotify
	(*ArmyStatusNotify)(nil),              // 38: pb.ArmyStatusNotify
	(*TradeEventNotify)(nil),              // 39: pb.TradeEventNotify
	(*TradeTeamStatusNotify)(nil),         // 40: pb.TradeTeamStatusNotify
	(*PurchaseCargoRes)(nil),              // 41: pb.PurchaseCargoRes
	(*SaleCargoRes)(nil),                  // 42: pb.SaleCargoRes
	(*InvestRes)(nil),                     // 43: pb.InvestRes
	(*GetsCityBankRes)(nil),               // 44: pb.GetsCityBankRes
	(*EscapeRes)(nil),                     // 45: pb.EscapeRes
	(*GetsCityCommodityRes)(nil),          // 46: pb.GetsCityCommodityRes
	(*GetsCityPurchaseRes)(nil),           // 47: pb.GetsCityPurchaseRes
	(*VisibleBuildsNotify)(nil),           // 48: pb.VisibleBuildsNotify
	(*VisibleTradeTeamNotify)(nil),        // 49: pb.VisibleTradeTeamNotify
	(*VisibleArmyNotify)(nil),             // 50: pb.VisibleArmyNotify
	(*VisibleCombatNotify)(nil),           // 51: pb.VisibleCombatNotify
	(*GuildParcelNotify)(nil),             // 52: pb.GuildParcelNotify
	(*EnterOverNotify)(nil),               // 53: pb.EnterOverNotify
	(*ScanOverNotify)(nil),                // 54: pb.ScanOverNotify
	(*LandBuildChangeNotify)(nil),         // 55: pb.LandBuildChangeNotify
	(*ParcelGuildNotify)(nil),             // 56: pb.ParcelGuildNotify
	(*CreateLandBuildRes)(nil),            // 57: pb.CreateLandBuildRes
	(*UpgradeLandBuildRes)(nil),           // 58: pb.UpgradeLandBuildRes
	(*MergeLandBuildRes)(nil),             // 59: pb.MergeLandBuildRes
	(*DeleteLandBuildRes)(nil),            // 60: pb.DeleteLandBuildRes
	(*PlayerFightReportListRes)(nil),      // 61: pb.PlayerFightReportListRes
	(*PlayerFightReportByFightIdRes)(nil), // 62: pb.PlayerFightReportByFightIdRes
	(*CombatReportNotify)(nil),            // 63: pb.CombatReportNotify
	(*CombatStartOverNotify)(nil),         // 64: pb.CombatStartOverNotify
	(*MapCombatReport)(nil),               // 65: pb.MapCombatReport
	(*FightReport)(nil),                   // 66: pb.FightReport
	(*RoundReport)(nil),                   // 67: pb.RoundReport
	(*BankInfo)(nil),                      // 68: pb.BankInfo
	(*GuildInvest)(nil),                   // 69: pb.GuildInvest
	(*TradeTeamEvent)(nil),                // 70: pb.TradeTeamEvent
	(*CityCommodity)(nil),                 // 71: pb.CityCommodity
	(*CityPurchase)(nil),                  // 72: pb.CityPurchase
	(*Consume)(nil),                       // 73: pb.Consume
	(*PlayerFightReport)(nil),             // 74: pb.PlayerFightReport
	(*TheMatchReport)(nil),                // 75: pb.TheMatchReport
	(*BattleEvent)(nil),                   // 76: pb.BattleEvent
	(*SubSkillEvent)(nil),                 // 77: pb.SubSkillEvent
	(*TargetRecord)(nil),                  // 78: pb.TargetRecord
	(*AddBuffRecord)(nil),                 // 79: pb.AddBuffRecord
	(*RemoveBuffRecord)(nil),              // 80: pb.RemoveBuffRecord
	(*AttackEvent)(nil),                   // 81: pb.AttackEvent
	(*BuffEffectEvent)(nil),               // 82: pb.BuffEffectEvent
	(*PersonStatus)(nil),                  // 83: pb.PersonStatus
	(*Cargo)(nil),                         // 84: pb.Cargo
	(*Build)(nil),                         // 85: pb.Build
	(*TradeTeamStatus)(nil),               // 86: pb.TradeTeamStatus
	(*TradeTeam)(nil),                     // 87: pb.TradeTeam
	(*Result)(nil),                        // 88: pb.Result
	(*LandTradeTeam)(nil),                 // 89: pb.LandTradeTeam
	(*GuildCombat)(nil),                   // 90: pb.GuildCombat
	(*LandArmy)(nil),                      // 91: pb.LandArmy
	(*Army)(nil),                          // 92: pb.Army
	(*Money)(nil),                         // 93: pb.Money
	(*Guild)(nil),                         // 94: pb.Guild
	(*GoodsCount)(nil),                    // 95: pb.GoodsCount
}
var file_pb_proto_land_proto_depIdxs = []int32{
	3,   // 0: pb.LandReq.enter_land_req:type_name -> pb.EnterLandReq
	4,   // 1: pb.LandReq.exit_land_req:type_name -> pb.ExitLandReq
	5,   // 2: pb.LandReq.scan_land_req:type_name -> pb.ScanLandReq
	6,   // 3: pb.LandReq.set_trade_dest_req:type_name -> pb.SetTradeDestReq
	7,   // 4: pb.LandReq.goto_trade_dest_req:type_name -> pb.GotoTradeDestReq
	8,   // 5: pb.LandReq.declare_war_req:type_name -> pb.DeclareWarReq
	9,   // 6: pb.LandReq.goto_war_req:type_name -> pb.GotoWarReq
	10,  // 7: pb.LandReq.stop_war_req:type_name -> pb.StopWarReq
	11,  // 8: pb.LandReq.purchase_cargo_req:type_name -> pb.PurchaseCargoReq
	12,  // 9: pb.LandReq.sale_cargo_req:type_name -> pb.SaleCargoReq
	14,  // 10: pb.LandReq.gets_city_bank_req:type_name -> pb.GetsCityBankReq
	13,  // 11: pb.LandReq.invest_req:type_name -> pb.InvestReq
	15,  // 12: pb.LandReq.escape_req:type_name -> pb.EscapeReq
	16,  // 13: pb.LandReq.gets_city_commodity_req:type_name -> pb.GetsCityCommodityReq
	17,  // 14: pb.LandReq.gets_city_purchase_req:type_name -> pb.GetsCityPurchaseReq
	18,  // 15: pb.LandReq.unset_trade_dest_req:type_name -> pb.UnsetTradeDestReq
	19,  // 16: pb.LandReq.create_land_build_req:type_name -> pb.CreateLandBuildReq
	20,  // 17: pb.LandReq.upgrade_land_build_req:type_name -> pb.UpgradeLandBuildReq
	21,  // 18: pb.LandReq.merge_land_build_req:type_name -> pb.MergeLandBuildReq
	22,  // 19: pb.LandReq.delete_land_build_req:type_name -> pb.DeleteLandBuildReq
	23,  // 20: pb.LandReq.player_fight_report_list_req:type_name -> pb.PlayerFightReportListReq
	24,  // 21: pb.LandReq.player_fight_report_by_fight_id_req:type_name -> pb.PlayerFightReportByFightIdReq
	25,  // 22: pb.LandRes.enter_land_res:type_name -> pb.EnterLandRes
	26,  // 23: pb.LandRes.exit_land_res:type_name -> pb.ExitLandRes
	27,  // 24: pb.LandRes.scan_land_res:type_name -> pb.ScanLandRes
	28,  // 25: pb.LandRes.set_trade_dest_res:type_name -> pb.SetTradeDestRes
	30,  // 26: pb.LandRes.goto_trade_dest_res:type_name -> pb.GotoTradeDestRes
	31,  // 27: pb.LandRes.declare_war_res:type_name -> pb.DeclareWarRes
	32,  // 28: pb.LandRes.goto_war_res:type_name -> pb.GotoWarRes
	33,  // 29: pb.LandRes.stop_war_res:type_name -> pb.StopWarRes
	41,  // 30: pb.LandRes.purchase_cargo_res:type_name -> pb.PurchaseCargoRes
	42,  // 31: pb.LandRes.sale_cargo_res:type_name -> pb.SaleCargoRes
	44,  // 32: pb.LandRes.gets_city_bank_res:type_name -> pb.GetsCityBankRes
	43,  // 33: pb.LandRes.invest_res:type_name -> pb.InvestRes
	45,  // 34: pb.LandRes.escape_res:type_name -> pb.EscapeRes
	46,  // 35: pb.LandRes.gets_city_commodity_res:type_name -> pb.GetsCityCommodityRes
	47,  // 36: pb.LandRes.gets_city_purchase_res:type_name -> pb.GetsCityPurchaseRes
	29,  // 37: pb.LandRes.unset_trade_dest_res:type_name -> pb.UnsetTradeDestRes
	57,  // 38: pb.LandRes.create_land_build_res:type_name -> pb.CreateLandBuildRes
	58,  // 39: pb.LandRes.upgrade_land_build_res:type_name -> pb.UpgradeLandBuildRes
	59,  // 40: pb.LandRes.merge_land_build_res:type_name -> pb.MergeLandBuildRes
	60,  // 41: pb.LandRes.delete_land_build_res:type_name -> pb.DeleteLandBuildRes
	34,  // 42: pb.LandRes.trade_team_notify:type_name -> pb.TradeTeamNotify
	35,  // 43: pb.LandRes.guild_combat_notify:type_name -> pb.GuildCombatNotify
	36,  // 44: pb.LandRes.army_arrived_notify:type_name -> pb.ArmyArrivedNotify
	37,  // 45: pb.LandRes.land_army_notify:type_name -> pb.LandArmyNotify
	38,  // 46: pb.LandRes.army_status_notify:type_name -> pb.ArmyStatusNotify
	39,  // 47: pb.LandRes.trade_event_notify:type_name -> pb.TradeEventNotify
	40,  // 48: pb.LandRes.trade_team_status_notify:type_name -> pb.TradeTeamStatusNotify
	48,  // 49: pb.LandRes.visible_builds_notify:type_name -> pb.VisibleBuildsNotify
	49,  // 50: pb.LandRes.visible_trade_team_notify:type_name -> pb.VisibleTradeTeamNotify
	50,  // 51: pb.LandRes.visible_army_notify:type_name -> pb.VisibleArmyNotify
	51,  // 52: pb.LandRes.visible_combat_notify:type_name -> pb.VisibleCombatNotify
	52,  // 53: pb.LandRes.guild_parcel_notify:type_name -> pb.GuildParcelNotify
	53,  // 54: pb.LandRes.enter_over_notify:type_name -> pb.EnterOverNotify
	54,  // 55: pb.LandRes.scan_over_notify:type_name -> pb.ScanOverNotify
	55,  // 56: pb.LandRes.land_build_change_notify:type_name -> pb.LandBuildChangeNotify
	56,  // 57: pb.LandRes.parcel_guild_notify:type_name -> pb.ParcelGuildNotify
	64,  // 58: pb.LandRes.combat_start_over_notify:type_name -> pb.CombatStartOverNotify
	63,  // 59: pb.LandRes.combat_report_notify:type_name -> pb.CombatReportNotify
	61,  // 60: pb.LandRes.player_fight_report_list_res:type_name -> pb.PlayerFightReportListRes
	62,  // 61: pb.LandRes.player_fight_report_by_fight_id_res:type_name -> pb.PlayerFightReportByFightIdRes
	84,  // 62: pb.PurchaseCargoReq.cargo:type_name -> pb.Cargo
	84,  // 63: pb.SaleCargoReq.cargo:type_name -> pb.Cargo
	85,  // 64: pb.EnterLandRes.home:type_name -> pb.Build
	86,  // 65: pb.EnterLandRes.trade_team_status:type_name -> pb.TradeTeamStatus
	70,  // 66: pb.EnterLandRes.trade_team_event:type_name -> pb.TradeTeamEvent
	87,  // 67: pb.EnterLandRes.trade_team:type_name -> pb.TradeTeam
	88,  // 68: pb.SetTradeDestRes.result:type_name -> pb.Result
	86,  // 69: pb.SetTradeDestRes.team_status:type_name -> pb.TradeTeamStatus
	73,  // 70: pb.SetTradeDestRes.consume:type_name -> pb.Consume
	88,  // 71: pb.UnsetTradeDestRes.result:type_name -> pb.Result
	86,  // 72: pb.UnsetTradeDestRes.team_status:type_name -> pb.TradeTeamStatus
	88,  // 73: pb.GotoTradeDestRes.result:type_name -> pb.Result
	86,  // 74: pb.GotoTradeDestRes.team_status:type_name -> pb.TradeTeamStatus
	89,  // 75: pb.GotoTradeDestRes.trade_team:type_name -> pb.LandTradeTeam
	88,  // 76: pb.DeclareWarRes.result:type_name -> pb.Result
	90,  // 77: pb.DeclareWarRes.combat:type_name -> pb.GuildCombat
	88,  // 78: pb.GotoWarRes.result:type_name -> pb.Result
	91,  // 79: pb.GotoWarRes.land_army:type_name -> pb.LandArmy
	88,  // 80: pb.StopWarRes.result:type_name -> pb.Result
	89,  // 81: pb.TradeTeamNotify.trade_team:type_name -> pb.LandTradeTeam
	90,  // 82: pb.GuildCombatNotify.combat:type_name -> pb.GuildCombat
	91,  // 83: pb.ArmyArrivedNotify.land_army:type_name -> pb.LandArmy
	91,  // 84: pb.LandArmyNotify.land_army:type_name -> pb.LandArmy
	92,  // 85: pb.ArmyStatusNotify.army:type_name -> pb.Army
	70,  // 86: pb.TradeEventNotify.trade_team_event:type_name -> pb.TradeTeamEvent
	86,  // 87: pb.TradeTeamStatusNotify.trade_team_status:type_name -> pb.TradeTeamStatus
	88,  // 88: pb.PurchaseCargoRes.result:type_name -> pb.Result
	84,  // 89: pb.PurchaseCargoRes.cargo:type_name -> pb.Cargo
	88,  // 90: pb.SaleCargoRes.result:type_name -> pb.Result
	84,  // 91: pb.SaleCargoRes.cargo:type_name -> pb.Cargo
	88,  // 92: pb.InvestRes.result:type_name -> pb.Result
	68,  // 93: pb.InvestRes.bank_info:type_name -> pb.BankInfo
	68,  // 94: pb.GetsCityBankRes.bank_info:type_name -> pb.BankInfo
	88,  // 95: pb.EscapeRes.result:type_name -> pb.Result
	71,  // 96: pb.GetsCityCommodityRes.commodities:type_name -> pb.CityCommodity
	72,  // 97: pb.GetsCityPurchaseRes.purchases:type_name -> pb.CityPurchase
	85,  // 98: pb.VisibleBuildsNotify.builds:type_name -> pb.Build
	89,  // 99: pb.VisibleTradeTeamNotify.trade_teams:type_name -> pb.LandTradeTeam
	91,  // 100: pb.VisibleArmyNotify.armies:type_name -> pb.LandArmy
	90,  // 101: pb.VisibleCombatNotify.combats:type_name -> pb.GuildCombat
	85,  // 102: pb.LandBuildChangeNotify.builds:type_name -> pb.Build
	88,  // 103: pb.CreateLandBuildRes.result:type_name -> pb.Result
	85,  // 104: pb.CreateLandBuildRes.build:type_name -> pb.Build
	88,  // 105: pb.UpgradeLandBuildRes.result:type_name -> pb.Result
	85,  // 106: pb.UpgradeLandBuildRes.build:type_name -> pb.Build
	88,  // 107: pb.MergeLandBuildRes.result:type_name -> pb.Result
	85,  // 108: pb.MergeLandBuildRes.build:type_name -> pb.Build
	88,  // 109: pb.DeleteLandBuildRes.result:type_name -> pb.Result
	85,  // 110: pb.DeleteLandBuildRes.build:type_name -> pb.Build
	74,  // 111: pb.PlayerFightReportListRes.player_fight_report_list:type_name -> pb.PlayerFightReport
	74,  // 112: pb.PlayerFightReportByFightIdRes.player_fight_report:type_name -> pb.PlayerFightReport
	65,  // 113: pb.CombatReportNotify.reports:type_name -> pb.MapCombatReport
	83,  // 114: pb.MapCombatReport.attack_person_status_list:type_name -> pb.PersonStatus
	83,  // 115: pb.MapCombatReport.defense_person_status_list:type_name -> pb.PersonStatus
	67,  // 116: pb.FightReport.round_reports:type_name -> pb.RoundReport
	76,  // 117: pb.RoundReport.battle_event:type_name -> pb.BattleEvent
	93,  // 118: pb.BankInfo.discount:type_name -> pb.Money
	69,  // 119: pb.BankInfo.invests:type_name -> pb.GuildInvest
	94,  // 120: pb.GuildInvest.guild:type_name -> pb.Guild
	88,  // 121: pb.TradeTeamEvent.result:type_name -> pb.Result
	95,  // 122: pb.TradeTeamEvent.get_goods:type_name -> pb.GoodsCount
	95,  // 123: pb.TradeTeamEvent.lost_goods:type_name -> pb.GoodsCount
	93,  // 124: pb.CityCommodity.price:type_name -> pb.Money
	93,  // 125: pb.CityPurchase.price:type_name -> pb.Money
	75,  // 126: pb.PlayerFightReport.the_match_report:type_name -> pb.TheMatchReport
	66,  // 127: pb.TheMatchReport.fight_report_list:type_name -> pb.FightReport
	77,  // 128: pb.BattleEvent.sub_skill_event:type_name -> pb.SubSkillEvent
	81,  // 129: pb.BattleEvent.attack_event:type_name -> pb.AttackEvent
	82,  // 130: pb.BattleEvent.buff_effect_event:type_name -> pb.BuffEffectEvent
	83,  // 131: pb.SubSkillEvent.person:type_name -> pb.PersonStatus
	78,  // 132: pb.SubSkillEvent.target_records:type_name -> pb.TargetRecord
	79,  // 133: pb.SubSkillEvent.add_buff_record:type_name -> pb.AddBuffRecord
	80,  // 134: pb.SubSkillEvent.remove_buff_record:type_name -> pb.RemoveBuffRecord
	0,   // 135: pb.TargetRecord.effect_type:type_name -> pb.EffectType
	83,  // 136: pb.TargetRecord.person:type_name -> pb.PersonStatus
	83,  // 137: pb.AddBuffRecord.person:type_name -> pb.PersonStatus
	83,  // 138: pb.RemoveBuffRecord.person:type_name -> pb.PersonStatus
	83,  // 139: pb.AttackEvent.person:type_name -> pb.PersonStatus
	78,  // 140: pb.AttackEvent.target_records:type_name -> pb.TargetRecord
	0,   // 141: pb.BuffEffectEvent.effect_type:type_name -> pb.EffectType
	83,  // 142: pb.BuffEffectEvent.person:type_name -> pb.PersonStatus
	143, // [143:143] is the sub-list for method output_type
	143, // [143:143] is the sub-list for method input_type
	143, // [143:143] is the sub-list for extension type_name
	143, // [143:143] is the sub-list for extension extendee
	0,   // [0:143] is the sub-list for field type_name
}

func init() { file_pb_proto_land_proto_init() }
func file_pb_proto_land_proto_init() {
	if File_pb_proto_land_proto != nil {
		return
	}
	file_pb_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_proto_land_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterLandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitLandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanLandReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTradeDestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoTradeDestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareWarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoWarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopWarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseCargoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleCargoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityBankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscapeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityCommodityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityPurchaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetTradeDestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLandBuildReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeLandBuildReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeLandBuildReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLandBuildReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFightReportListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFightReportByFightIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterLandRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitLandRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanLandRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTradeDestRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetTradeDestRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoTradeDestRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareWarRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GotoWarRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopWarRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTeamNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildCombatNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyArrivedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandArmyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArmyStatusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeEventNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTeamStatusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseCargoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleCargoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityBankRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EscapeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityCommodityRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCityPurchaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisibleBuildsNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisibleTradeTeamNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisibleArmyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisibleCombatNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildParcelNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterOverNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanOverNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LandBuildChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParcelGuildNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLandBuildRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeLandBuildRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeLandBuildRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLandBuildRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFightReportListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFightReportByFightIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombatReportNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombatStartOverNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCombatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FightReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuildInvest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeTeamEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CityPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFightReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheMatchReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubSkillEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBuffRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBuffRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttackEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffEffectEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_land_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_proto_land_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LandReq_EnterLandReq)(nil),
		(*LandReq_ExitLandReq)(nil),
		(*LandReq_ScanLandReq)(nil),
		(*LandReq_SetTradeDestReq)(nil),
		(*LandReq_GotoTradeDestReq)(nil),
		(*LandReq_DeclareWarReq)(nil),
		(*LandReq_GotoWarReq)(nil),
		(*LandReq_StopWarReq)(nil),
		(*LandReq_PurchaseCargoReq)(nil),
		(*LandReq_SaleCargoReq)(nil),
		(*LandReq_GetsCityBankReq)(nil),
		(*LandReq_InvestReq)(nil),
		(*LandReq_EscapeReq)(nil),
		(*LandReq_GetsCityCommodityReq)(nil),
		(*LandReq_GetsCityPurchaseReq)(nil),
		(*LandReq_UnsetTradeDestReq)(nil),
		(*LandReq_CreateLandBuildReq)(nil),
		(*LandReq_UpgradeLandBuildReq)(nil),
		(*LandReq_MergeLandBuildReq)(nil),
		(*LandReq_DeleteLandBuildReq)(nil),
		(*LandReq_PlayerFightReportListReq)(nil),
		(*LandReq_PlayerFightReportByFightIdReq)(nil),
	}
	file_pb_proto_land_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LandRes_EnterLandRes)(nil),
		(*LandRes_ExitLandRes)(nil),
		(*LandRes_ScanLandRes)(nil),
		(*LandRes_SetTradeDestRes)(nil),
		(*LandRes_GotoTradeDestRes)(nil),
		(*LandRes_DeclareWarRes)(nil),
		(*LandRes_GotoWarRes)(nil),
		(*LandRes_StopWarRes)(nil),
		(*LandRes_PurchaseCargoRes)(nil),
		(*LandRes_SaleCargoRes)(nil),
		(*LandRes_GetsCityBankRes)(nil),
		(*LandRes_InvestRes)(nil),
		(*LandRes_EscapeRes)(nil),
		(*LandRes_GetsCityCommodityRes)(nil),
		(*LandRes_GetsCityPurchaseRes)(nil),
		(*LandRes_UnsetTradeDestRes)(nil),
		(*LandRes_CreateLandBuildRes)(nil),
		(*LandRes_UpgradeLandBuildRes)(nil),
		(*LandRes_MergeLandBuildRes)(nil),
		(*LandRes_DeleteLandBuildRes)(nil),
		(*LandRes_TradeTeamNotify)(nil),
		(*LandRes_GuildCombatNotify)(nil),
		(*LandRes_ArmyArrivedNotify)(nil),
		(*LandRes_LandArmyNotify)(nil),
		(*LandRes_ArmyStatusNotify)(nil),
		(*LandRes_TradeEventNotify)(nil),
		(*LandRes_TradeTeamStatusNotify)(nil),
		(*LandRes_VisibleBuildsNotify)(nil),
		(*LandRes_VisibleTradeTeamNotify)(nil),
		(*LandRes_VisibleArmyNotify)(nil),
		(*LandRes_VisibleCombatNotify)(nil),
		(*LandRes_GuildParcelNotify)(nil),
		(*LandRes_EnterOverNotify)(nil),
		(*LandRes_ScanOverNotify)(nil),
		(*LandRes_LandBuildChangeNotify)(nil),
		(*LandRes_ParcelGuildNotify)(nil),
		(*LandRes_CombatStartOverNotify)(nil),
		(*LandRes_CombatReportNotify)(nil),
		(*LandRes_PlayerFightReportListRes)(nil),
		(*LandRes_PlayerFightReportByFightIdRes)(nil),
	}
	file_pb_proto_land_proto_msgTypes[75].OneofWrappers = []interface{}{
		(*BattleEvent_SubSkillEvent)(nil),
		(*BattleEvent_AttackEvent)(nil),
		(*BattleEvent_BuffEffectEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_proto_land_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_proto_land_proto_goTypes,
		DependencyIndexes: file_pb_proto_land_proto_depIdxs,
		EnumInfos:         file_pb_proto_land_proto_enumTypes,
		MessageInfos:      file_pb_proto_land_proto_msgTypes,
	}.Build()
	File_pb_proto_land_proto = out.File
	file_pb_proto_land_proto_rawDesc = nil
	file_pb_proto_land_proto_goTypes = nil
	file_pb_proto_land_proto_depIdxs = nil
}
